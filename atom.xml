<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>loveofpeach&#39;s</title>
  
  <subtitle>laidiansetu</subtitle>
  <link href="https://loveofpeach.github.io/atom.xml" rel="self"/>
  
  <link href="https://loveofpeach.github.io/"/>
  <updated>2022-09-09T02:50:58.855Z</updated>
  <id>https://loveofpeach.github.io/</id>
  
  <author>
    <name>love of peach</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>思梦之榻</title>
    <link href="https://loveofpeach.github.io/posts/3e6d3ecb.html"/>
    <id>https://loveofpeach.github.io/posts/3e6d3ecb.html</id>
    <published>2022-09-08T05:18:15.000Z</published>
    <updated>2022-09-09T02:50:58.855Z</updated>
    
    <content type="html"><![CDATA[<psw>来点色图</psw><p>闷热的夏午，我憋着口气难以入眠。扰人清静的鸟雀和屋外的添水，古朴的撞击声将时间拉长，我看见时间被拉成丝的模样。</p><p>“要是绫华在就好了。”我如此想。</p><p>绫华在时，只消片刻，周围的空间便会曼出沁人的薄寒。</p><p>这样想着，绫华就倏然出现了。</p><p>她就在那里，全身赤裸，坐在桌前的垫子上，脚心好看地翻开，马尾轻微晃动，双乳在光线的明暗下看不真切。</p><p>坐忘。</p><p>神里流剑道的最高奥义，意在忘却自身达到心灵的岿然之境 。境界高者形容枯槁，似一段老木，甚至能与周遭环境融为一体，不分彼此。</p><p>但现在，老木抽出新芽。</p><p>绫华起身颔首，披上外套遮住身体，莞尔一笑。</p><p>“我在想，也许——你会想我呢。”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;psw&gt;来点色图&lt;/psw&gt;
&lt;p&gt;闷热的夏午，我憋着口气难以入眠。扰人清静的鸟雀和屋外的添水，古朴的撞击声将时间拉长，我看见时间被拉成丝的模样。&lt;/p&gt;
&lt;p&gt;“要是绫华在就好了。”我如此想。&lt;/p&gt;
&lt;p&gt;绫华在时，只消片刻，周围的空间便会曼出沁人的薄寒。&lt;/p&gt;
&lt;p&gt;这</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://loveofpeach.github.io/posts/4a17b156.html"/>
    <id>https://loveofpeach.github.io/posts/4a17b156.html</id>
    <published>2022-09-07T10:46:51.947Z</published>
    <updated>2022-09-09T03:24:13.375Z</updated>
    
    <content type="html"><![CDATA[<p>一个hexo博客折腾了好久。目前有基本功能，但还不完善，等什么时候整完了再写。</p><p>总的来说就是一个个人的树洞吧，目前国内环境挺糟的，这里那里都不让说话，所以gitee什么的是不会考虑的，哪怕这个github page被墙了也无所谓。</p><div class="tip warning"><p>代码模块测试：</p></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXLEN = <span class="number">1000</span>;  <span class="comment">//最长的数字长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Bigint</span>&#123;</span><br><span class="line">    <span class="type">int</span> d[MAXLEN],len;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;<span class="keyword">while</span>(len&gt;<span class="number">1</span>&amp;&amp;!d[len<span class="number">-1</span>])len--;&#125; <span class="comment">//去前导0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Bigint</span>()&#123;<span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="built_in">sizeof</span>(d));len=<span class="number">1</span>;&#125;</span><br><span class="line">    <span class="built_in">Bigint</span>(<span class="type">int</span> num)&#123;*<span class="keyword">this</span>=num;&#125;</span><br><span class="line">    <span class="built_in">Bigint</span>(<span class="type">char</span>* num)&#123;*<span class="keyword">this</span>=num;&#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> = (<span class="type">const</span> <span class="type">char</span>* num)&#123;</span><br><span class="line">        len=<span class="built_in">strlen</span>(num);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)d[i]=num[len<span class="number">-1</span>-i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="built_in">clean</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> = (<span class="type">int</span> num)&#123;</span><br><span class="line">        <span class="type">char</span> s[MAXLEN];</span><br><span class="line">        <span class="built_in">sprintf</span>(s,<span class="string">&quot;%d&quot;</span>,num);</span><br><span class="line">        *<span class="keyword">this</span>=s;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> + (<span class="type">const</span> Bigint&amp; b)&#123; <span class="comment">//只能大数加小数</span></span><br><span class="line">        Bigint c=*<span class="keyword">this</span>; <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;b.len;i++)&#123;</span><br><span class="line">            c.d[i]+=b.d[i];</span><br><span class="line">            <span class="keyword">if</span>(c.d[i]&gt;<span class="number">9</span>)c.d[i]%=<span class="number">10</span>,c.d[i+<span class="number">1</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(c.d[i]&gt;<span class="number">9</span>)c.d[i++]%=<span class="number">10</span>,c.d[i]++;</span><br><span class="line">        c.len=<span class="built_in">MAX</span>(len,b.len);</span><br><span class="line">        <span class="keyword">if</span>(c.d[i]&amp;&amp;c.len&lt;=i)c.len=i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> - (<span class="type">const</span> Bigint&amp; b)&#123; <span class="comment">//不能用小数减大数</span></span><br><span class="line">        Bigint c=*<span class="keyword">this</span>; <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;b.len;i++)&#123;</span><br><span class="line">            c.d[i]-=b.d[i];</span><br><span class="line">            <span class="keyword">if</span>(c.d[i]&lt;<span class="number">0</span>)c.d[i]+=<span class="number">10</span>,c.d[i+<span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(c.d[i]&lt;<span class="number">0</span>)c.d[i++]+=<span class="number">10</span>,c.d[i]--;</span><br><span class="line">        c.<span class="built_in">clean</span>();</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> * (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;</span><br><span class="line">        <span class="type">int</span> i,j; Bigint c;</span><br><span class="line">        c.len=len+b.len;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;b.len;j++)</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">                c.d[i+j]+=d[i]*b.d[j];</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;c.len<span class="number">-1</span>;i++)</span><br><span class="line">            c.d[i+<span class="number">1</span>]+=c.d[i]/<span class="number">10</span>,c.d[i]%=<span class="number">10</span>;</span><br><span class="line">        c.<span class="built_in">clean</span>();</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> / (<span class="type">const</span> Bigint&amp; b)&#123;</span><br><span class="line">        <span class="type">int</span> i,j;</span><br><span class="line">        Bigint c=*<span class="keyword">this</span>,a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            a=a*<span class="number">10</span>+d[i];</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)<span class="keyword">if</span>(a&lt;b*(j+<span class="number">1</span>))<span class="keyword">break</span>;</span><br><span class="line">            c.d[i]=j;</span><br><span class="line">            a=a-b*j;</span><br><span class="line">        &#125;</span><br><span class="line">        c.<span class="built_in">clean</span>();</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> % (<span class="type">const</span> Bigint&amp; b)&#123;</span><br><span class="line">        <span class="type">int</span> i,j; Bigint a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            a=a*<span class="number">10</span>+d[i];</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)<span class="keyword">if</span>(a&lt;b*(j+<span class="number">1</span>))<span class="keyword">break</span>;</span><br><span class="line">            a=a-b*j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Bigint <span class="keyword">operator</span> += (<span class="type">const</span> Bigint&amp; b)&#123;</span><br><span class="line">        *<span class="keyword">this</span>=*<span class="keyword">this</span>+b;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(len!=b.len)<span class="keyword">return</span> len&lt;b.len;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">if</span>(d[i]!=b.d[i])<span class="keyword">return</span> d[i]&lt;b.d[i];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &gt; (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;<span class="keyword">return</span> b&lt;*<span class="keyword">this</span>;&#125;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt;= (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;<span class="keyword">return</span> !(b&lt;*<span class="keyword">this</span>);&#125;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &gt;= (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;<span class="keyword">return</span> !(*<span class="keyword">this</span>&lt;b);&#125;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> != (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;<span class="keyword">return</span> b&lt;*<span class="keyword">this</span>||*<span class="keyword">this</span>&lt;b;&#125;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> == (<span class="type">const</span> Bigint&amp; b)<span class="type">const</span>&#123;<span class="keyword">return</span> !(b&lt;*<span class="keyword">this</span>)&amp;&amp;!(b&gt;*<span class="keyword">this</span>);&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">string <span class="title">str</span><span class="params">()</span><span class="type">const</span></span>&#123;</span><br><span class="line">        <span class="type">char</span> s[MAXLEN]=&#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)s[len<span class="number">-1</span>-i]=d[i]+<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">istream&amp; <span class="keyword">operator</span> &gt;&gt; (istream&amp; in,Bigint&amp; x)&#123;</span><br><span class="line">    string s; in&gt;&gt;s;</span><br><span class="line">    x=s.<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="keyword">return</span> in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream&amp; <span class="keyword">operator</span> &lt;&lt; (ostream&amp; out,<span class="type">const</span> Bigint&amp; x)&#123;</span><br><span class="line">    out&lt;&lt;x.<span class="built_in">str</span>();</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;     <span class="comment">//just an example...</span></span><br><span class="line">    Bigint s=<span class="number">0</span>,t;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;t)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t.len==<span class="number">1</span>&amp;&amp;!t.d[<span class="number">0</span>])<span class="keyword">break</span>;</span><br><span class="line">        s=s+t;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip warning"><p>latex测试：</p></div><script type="math/tex; mode=display">\begin{aligned}\int_{0}^{Q_0}(P_0-MC)\,{\rm d}Q &= \int_{0}^{Q_0}P_0\,{\rm d}Q-\int_{0}^{Q_0}MC\,{\rm d}Q \\&= \int_{0}^{Q_0}P_0\,{\rm d}Q-(TC-TFC) \\&= (\int_{0}^{Q_0}P_0\,{\rm d}Q-TC)+TFC \\&= (TR-AVC\cdot Q_0)+TFC\\&= \pi +TFC\end{aligned}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个hexo博客折腾了好久。目前有基本功能，但还不完善，等什么时候整完了再写。&lt;/p&gt;
&lt;p&gt;总的来说就是一个个人的树洞吧，目前国内环境挺糟的，这里那里都不让说话，所以gitee什么的是不会考虑的，哪怕这个github page被墙了也无所谓。&lt;/p&gt;
&lt;div class</summary>
      
    
    
    
    
  </entry>
  
</feed>
