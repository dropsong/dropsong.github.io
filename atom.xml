<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>loveofpeach&#39;s</title>
  
  <subtitle>tree hole</subtitle>
  <link href="https://loveofpeach.github.io/atom.xml" rel="self"/>
  
  <link href="https://loveofpeach.github.io/"/>
  <updated>2023-05-15T14:45:02.537Z</updated>
  <id>https://loveofpeach.github.io/</id>
  
  <author>
    <name>love of peach</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人近况</title>
    <link href="https://loveofpeach.github.io/posts/db1a1b2e.html"/>
    <id>https://loveofpeach.github.io/posts/db1a1b2e.html</id>
    <published>2023-05-13T14:36:01.000Z</published>
    <updated>2023-05-15T14:45:02.537Z</updated>
    
    <content type="html"><![CDATA[<p>先报个喜，没有就业。坐要更名行又改姓，以后就叫：纯·简·拉基兹德。</p><p><img src="https://bu.dusays.com/2023/05/13/645fa78c0aeca.jpg" alt="38-1.jpg" title="纯·简·拉基兹德"></p><p>最近有在沉迷新游戏啦，是吼游verse的《斯鞑瑞幺》哦！超治愈的银河喜剧耶拜托！</p><p><img src="https://bu.dusays.com/2023/05/13/645fa78b3f4eb.jpeg" alt="38-2.jpeg" title="治愈"></p><p>黑凤梨啊娜塔莎。</p><p><img src="https://sway.office.com/s/5X18C0szDzeoQTMW/images/UnWPwcerr4_L4v" alt="38-3.jpg"></p><p><img src="https://sway.office.com/s/EyskLb6GKYScPPbs/images/M4U_-K9V37K12S" alt="38-4.jpg"></p><p><img src="https://bu.dusays.com/2023/05/13/645fa78b84c97.jpg" alt="38-5.jpg"></p><p><img src="https://bu.dusays.com/2023/05/13/645fa78b77d6b.jpg" alt="38-6.jpg"></p><p>喜欢三月七。</p><p><img src="https://bu.dusays.com/2023/05/13/645fa78bed659.png" alt="38-7.png"></p><p>欢喜符玄。</p><p><img src="https://sway.office.com/s/QlFVUerXkCj2Nj7O/images/9MzB8bB5kSdgHo" alt="38-8.jpg"></p><p>最赞的 BGM 都放在左下的音乐列表里了，其中数一数二的就是《喧哗》啦。</p><p><img src="https://sway.office.com/s/8x1GPIqiWDiBALYh/images/sn-_pV1itjyBfh" alt="38-9.jpg"></p><p>吼游verse的部分文案还是有不屑于与淈泥扬波者流同行的自爱的（当然部分很可能只是断章取义下的片面理解罢了，但不全是），这也是我关注他们的原因之一。婕德的“不在乎”，娜塔莎的人文精神，暗指上海 lockdown 的描写，包括崩三透露出的一些精神，他们的影响也许十分有限，但在不知何时到来的未来里，会成为鲜为人知的反抗的缩影。正如萨特在《占领下的巴黎》中所写：</p><blockquote><p>但是我们首先请你们理解，占领往往比战争更可怕。因为在战争中每个人都可以表现自己是男子汉，而在占领这一暧昧的处境中我们真的不能行动，甚至不能思想。在这个时期——抵抗运动除外——法国大概说不上始终表现得很伟大。但是你们首先应该理解，积极的抵抗必定只能限于少数人。其次，我以为，这一小部分人义无反顾地自愿以身殉难，他们足以补偿我们的种种软弱之处。最后，如果这篇文章能帮助你们衡量我们国家在羞辱，在极度厌恶，在愤怒中忍受的一切，我以为，你们会和我一样认为它有权得尊重，包括它的过失在内。</p></blockquote><p>最近有在找点别的出路。</p><p>Python 已经结课了，线下课讲的十分垃圾，PPT 真心不错，但在网上查了一下，好像是挪用别的老师的。离散数学已经上完了一大半。</p><p>毕业论文在赶了，反正是好水的题目，拖到 deadline 一定会有奇迹发生的。</p><p><img src="https://bu.dusays.com/2023/05/15/6462452d88125.gif" alt="gougouss.gif"></p><p>还是太懈怠了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先报个喜，没有就业。坐要更名行又改姓，以后就叫：纯·简·拉基兹德。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2023/05/13/645fa78c0aeca.jpg&quot; alt=&quot;38-1.jpg&quot; title=&quot;纯·简·拉基兹德&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="生活" scheme="https://loveofpeach.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="慢就业" scheme="https://loveofpeach.github.io/tags/%E6%85%A2%E5%B0%B1%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Minecraft with Python</title>
    <link href="https://loveofpeach.github.io/posts/2afe57ff.html"/>
    <id>https://loveofpeach.github.io/posts/2afe57ff.html</id>
    <published>2023-04-22T10:18:56.000Z</published>
    <updated>2023-04-27T05:58:47.264Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Python 游玩我的世界。</p><p>参考资料来源：各种网络资料和《零基础学 Minecraft 编程》，人民邮电出版社。</p><p><img src="https://bu.dusays.com/2023/04/24/6446a33de7053.png" alt="37-0.png" title="图书的两位作者"></p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>环境配置教程：<a href="https://www.bilibili.com/video/BV1FG4y1X7SQ">https://www.bilibili.com/video/BV1FG4y1X7SQ</a></p><p>注意在安装 java -jar BuildTools.jar 的时候会打印一大大大坨信息，整个过程大约6分钟，需要梯子。出现如下信息则表示成功：</p><p><img src="https://bu.dusays.com/2023/04/22/6443b4148bdaa.png" alt="37-1.png"></p><p>启动服务器：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\mcserver</span><br><span class="line">java <span class="literal">-Xms1024M</span> <span class="literal">-Xmx1024M</span> <span class="literal">-jar</span> spigot<span class="literal">-1</span>.<span class="number">19.4</span>.jar</span><br></pre></td></tr></table></figure><p>多人游戏，服务器地址<code>127.0.0.1</code>。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">op username   <span class="comment"># 给权限</span></span><br></pre></td></tr></table></figure><p>这个时候就可以使用作弊码了。作弊码附在文章末尾。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hellofrompy.py</span></span><br><span class="line"><span class="keyword">from</span> mcpi.minecraft <span class="keyword">import</span> Minecraft</span><br><span class="line"><span class="keyword">import</span> mcpi.block <span class="keyword">as</span> block</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;连接MC...&#x27;</span>)</span><br><span class="line">    mc = Minecraft.create()</span><br><span class="line"></span><br><span class="line">    mc.postToChat(<span class="string">&quot;hello frome Python&quot;</span>)</span><br><span class="line">    x, y, z = mc.player.getTilePos()</span><br><span class="line">    <span class="built_in">print</span>(x, y, z)</span><br><span class="line">    mc.setBlocks(x, y, z+<span class="number">5</span>, x, y, z+<span class="number">5</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="生成方块"><a href="#生成方块" class="headerlink" title="生成方块"></a>生成方块</h2><p>Minecraft 坐标信息：</p><ul><li>正东：x轴正方向</li><li>正南：z轴正方向</li><li>正上：y轴正方向</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 16blocks.py</span></span><br><span class="line"><span class="keyword">from</span> mcpi.minecraft <span class="keyword">import</span> Minecraft</span><br><span class="line"><span class="keyword">import</span> mcpi.block <span class="keyword">as</span> block</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 连接到 MC</span></span><br><span class="line">    mc = Minecraft.create()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 得到角色当前位置</span></span><br><span class="line">    x, y, z = mc.player.getTilePos()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 羊毛</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        mc.setBlock(x+<span class="number">3</span>, y, z+i, <span class="number">35</span>, i)</span><br><span class="line">        <span class="comment"># 35是羊毛的代号，0是白色</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>) <span class="comment"># 加个延时以演示</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://bu.dusays.com/2023/04/22/6443b414ed5ce.png" alt="37-2.png"></p><p>采用更多层循环以生成平面和立体。</p><p>多个方块同时放置的函数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mc.setBlocks(x1, y1, z1, x2, y2, z2, blockid, someindex)</span><br></pre></td></tr></table></figure><p><code>(x1, y1, z1)</code>和<code>(x2, y2, z2)</code>对应一个长方体的两个对角顶点。根据这两个顶点我们可以绘制出一个由指定方块组成的长方体。</p><p>想要一个空心的？缩小一圈用<code>air</code>方块填充。</p><h2 id="简单的例子"><a href="#简单的例子" class="headerlink" title="简单的例子"></a>简单的例子</h2><p>实时显示玩家的位置：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># showpos.py</span></span><br><span class="line"><span class="keyword">from</span> mcpi.minecraft <span class="keyword">import</span> Minecraft</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">mc = Minecraft.create()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    pos = mc.player.getTilePos()</span><br><span class="line">    mc.postToChat(<span class="string">&quot;x=&quot;</span>+<span class="built_in">str</span>(pos.x)+<span class="string">&quot; y=&quot;</span>+<span class="built_in">str</span>(pos.y)+<span class="string">&quot; z=&quot;</span>+<span class="built_in">str</span>(pos.z))</span><br></pre></td></tr></table></figure><p>注意：若坐标错误，需输入<code>/setworldspawn 0 0 0</code>。</p><p>玩家进入某一区域，超过3秒弹出：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bump2sky.py</span></span><br><span class="line"><span class="keyword">from</span> mcpi.minecraft <span class="keyword">import</span> Minecraft</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">x1 = <span class="number">60</span>   <span class="comment"># y = 80</span></span><br><span class="line">x2 = <span class="number">63</span></span><br><span class="line">z1 = -<span class="number">17</span></span><br><span class="line">z2 = -<span class="number">15</span></span><br><span class="line">infield = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bump2sky</span>(<span class="params">x, y, z</span>):</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        y += <span class="number">0.90</span>*t</span><br><span class="line">        mc.player.setPos(x+<span class="number">5</span>, y, z)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">mc = Minecraft.create()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    pos = mc.player.getTilePos()</span><br><span class="line">    <span class="keyword">if</span> pos.x&gt;=x1 <span class="keyword">and</span> pos.x&lt;=x2 <span class="keyword">and</span> pos.z&gt;=z1 <span class="keyword">and</span> pos.z&lt;=z2:</span><br><span class="line">        mc.postToChat(<span class="string">&quot;warnning&quot;</span>)</span><br><span class="line">        infield += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        infield = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> infield &gt; <span class="number">3</span>:</span><br><span class="line">        mc.postToChat(<span class="string">&quot;too slow!&quot;</span>)</span><br><span class="line">        bump2sky(pos.x, pos.y, pos.z)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://bu.dusays.com/2023/04/22/6443ec0d959ae.gif" alt="37-3.gif"></p><h2 id="绘制任意图像"><a href="#绘制任意图像" class="headerlink" title="绘制任意图像"></a>绘制任意图像</h2><p>知道了如何生成方块，就知道了如何绘制任意图像。</p><p><img src="https://bu.dusays.com/2023/04/27/644a0c520dc14.png" alt="37-4.png"></p><p>对于一张图片，如果我们能根据每一个像素点的 RGB 值找到对应颜色的 Minecraft 方块，就有可能在游戏中绘制该图像。</p><p>然而，并不是所有颜色都可以找到对应的 Minecraft 方块。对于找不到的颜色，我们希望有一个替代颜色，这个颜色应当在人眼视觉上相近。</p><p>为此，我们需要一个寻找相近颜色的算法。</p><p>已经知道，颜色可用 RGB 表示，是否相近的 RGB 值表示的颜色在视觉上相似呢？答案是否定的。但可喜可贺，还是有以 RGB 值计算颜色距离的公式（具体参考<a href="https://www.compuphase.com/cmetric.htm">此链接（该内容已备份）</a>）：</p><script type="math/tex; mode=display">\bar{r}=\frac{C_{1,R}+C_{2,R}}{2}</script><script type="math/tex; mode=display">\Delta R=C_{1,R}-C_{2,R}</script><script type="math/tex; mode=display">\Delta G=C_{1,G}-C_{2,G}</script><script type="math/tex; mode=display">\Delta B=C_{1,B}-C_{2,B}</script><script type="math/tex; mode=display">\Delta C=\sqrt{(2+\frac{\bar{r}}{256})\times \Delta R^{2}+4\Delta G^2+(2+\frac{255-\bar{r}}{256})\times \Delta B^2}</script><p>可以根据以上公式编写代码计算两个颜色的距离。不过，我们采用另一种更好的方案。</p><blockquote><p>CIEDE2000算法是CIE（国际照明委员会）于2000年提出的，它是Delta E算法的改进版本。CIEDE2000算法考虑了人眼感知颜色的非线性特性，并将颜色差异分解为亮度、色相和饱和度三个因素，从而更准确地计算颜色之间的相似度。CIEDE2000算法还考虑了颜色对比度的影响，因此在低对比度颜色之间的比较中表现更好。</p></blockquote><p>这个算法已经封装好了，安装 colormath 库：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install colormath</span><br></pre></td></tr></table></figure><p>使用此库需要初步了解颜色空间，并大致知道一些函数接受什么，返回什么，做了什么。</p><blockquote><p>「动态类型一时爽，代码重构火葬场。」</p></blockquote><p>colormath 官方文档：</p><ul><li><a href="https://python-colormath.readthedocs.io/en/latest/delta_e.html">https://python-colormath.readthedocs.io/en/latest/delta_e.html</a></li></ul><p>注意，如果提示：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AttributeError: module <span class="string">&#x27;numpy&#x27;</span> has no attribute <span class="string">&#x27;asscalar&#x27;</span>. Did you mean: <span class="string">&#x27;isscalar&#x27;</span>? </span><br></pre></td></tr></table></figure><p>这是因为：</p><ul><li>numpy的版本过高，需要降版本（高情商）</li><li>numpy你真就不考虑历史兼容呗（低情商）</li></ul><p>降版本的命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall numpy</span><br><span class="line">pip install <span class="literal">-U</span> numpy==<span class="number">1.22</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure><p>OK，颜色替代的问题解决了。但我们还缺一个映射方案。我们需要将颜色编码映射到具体的 Minecraft 方块的编号上。这方面的资料找起来比较麻烦。我直接给出链接：</p><ul><li><a href="https://www.minecraftinfo.com/idlist.htm">https://www.minecraftinfo.com/idlist.htm</a></li><li><a href="https://minecraft-ids.grahamedgecombe.com/">https://minecraft-ids.grahamedgecombe.com/</a></li><li><a href="https://www.stuffaboutcode.com/p/minecraft-api-reference.html">https://www.stuffaboutcode.com/p/minecraft-api-reference.html</a></li></ul><p>以上链接只是名字到编号的映射，我们总不能用眼睛看出物品的颜色编码吧？因此需要配合颜色到名字的映射表（该内容已备份）：</p><ul><li><a href="https://glow.lanzouo.com/iAret0mc0nyh">https://glow.lanzouo.com/iAret0mc0nyh</a></li></ul><p>注意有些方块是不能用的，它可能是个半砖，可能会随重力掉落，可能会自爆（例如仙人掌，不过仙人掌另有它用，之后再说），甚至可能根本不是一个方块。为了准确性，还需要在游戏里对比，这个比对过程是痛苦的，为了让世界 no more pain，我决定贴出初步整理的映射表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ffffff,80</span><br><span class="line">dcdcdc,35</span><br><span class="line">dcd9d3,155</span><br><span class="line">d5c98c,216</span><br><span class="line">909090,42</span><br><span class="line">faee4d,41</span><br><span class="line">b0a836,19:1</span><br><span class="line">c5c52c,19</span><br><span class="line">2c4199,35:11</span><br><span class="line">8d909e,82</span><br><span class="line">4f4f4f,1:6</span><br><span class="line">848484,35:8</span><br><span class="line">6db015,35:5</span><br><span class="line">d06d8e,35:6</span><br><span class="line">414141,35:7</span><br><span class="line">ffc125,35:4</span><br><span class="line">ba6d2c,35:1</span><br><span class="line">9941ba,35:2</span><br><span class="line">6699d8,35:3</span><br><span class="line">486c98,251:3</span><br><span class="line">416d84,35:9</span><br><span class="line">6d3699,35:10</span><br><span class="line">58412c,35:12</span><br><span class="line">586d2c,35:13</span><br><span class="line">842c2c,35:14</span><br><span class="line">151515,35:15</span><br><span class="line">4b3f26,5:5</span><br><span class="line">7b663e,25</span><br><span class="line">4fbcb7,57</span><br><span class="line">8a8adc,79</span><br><span class="line">667f33,251:13</span><br></pre></td></tr></table></figure><p>这个映射表非常粗糙，如果希望有更丰富的色彩表现，请手动修改之。</p><p>注意：一些魔改的<code>mcpi</code>版本并不需要此映射表，而可以直接使用物品名称。但是这种<code>mcpi</code>版本与本文不兼容，也不与《零基础学 Minecraft 编程》兼容。更重要的，它们主要是通过某盘传播（而不是pip安装），如果你和我一样抵制某盘，不想在上面花钱，尽量不要倒向这个版本。</p><p>下面放出完整代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://loveofpeach.github.io/posts/2afe57ff.html</span></span><br><span class="line"><span class="keyword">from</span> colormath.color_objects <span class="keyword">import</span> sRGBColor, LabColor</span><br><span class="line"><span class="keyword">from</span> colormath.color_diff <span class="keyword">import</span> delta_e_cie2000</span><br><span class="line"><span class="keyword">from</span> colormath <span class="keyword">import</span> color_conversions</span><br><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread</span><br><span class="line"><span class="keyword">from</span> mcpi.minecraft <span class="keyword">import</span> Minecraft</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rgb2hex</span>(<span class="params">red, green, blue</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    返回一个 HexColorString</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;:02x&#125;&#123;:02x&#125;&#123;:02x&#125;&#x27;</span>.<span class="built_in">format</span>(red, green, blue)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hex2lab</span>(<span class="params">hx</span>):</span><br><span class="line">    color_srbg = sRGBColor.new_from_rgb_hex(hx)</span><br><span class="line">    color_lab = color_conversions.convert_color(color_srbg, LabColor)</span><br><span class="line">    <span class="keyword">return</span> color_lab</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">closest_color</span>(<span class="params">hexStr</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    接受一个 HexColorString</span></span><br><span class="line"><span class="string">    返回列表中与该颜色最接近的颜色</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> hexStr <span class="keyword">in</span> colorhave: <span class="keyword">return</span> colorhave[hexStr]</span><br><span class="line"></span><br><span class="line">    closest_color = <span class="literal">None</span></span><br><span class="line">    closest_distance = <span class="literal">None</span></span><br><span class="line">    labStr = hex2lab(hexStr)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> color_code, color_name <span class="keyword">in</span> colorhave.items():</span><br><span class="line">        color_c = hex2lab(color_code)</span><br><span class="line">        distance = delta_e_cie2000(labStr, color_c)</span><br><span class="line">        <span class="keyword">if</span> closest_distance <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> distance &lt; closest_distance:</span><br><span class="line">            closest_distance = distance</span><br><span class="line">            closest_color = color_name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> closest_color</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wip</span>(<span class="params">r, g, b</span>):</span><br><span class="line">    s = closest_color(rgb2hex(r, g, b))</span><br><span class="line">    tmpls = []</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;:&#x27;</span> <span class="keyword">in</span> s:</span><br><span class="line">        tmpls.append(<span class="built_in">eval</span>(s.split(<span class="string">&quot;:&quot;</span>)[<span class="number">0</span>]))</span><br><span class="line">        tmpls.append(<span class="built_in">eval</span>(s.split(<span class="string">&quot;:&quot;</span>)[<span class="number">1</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmpls.append(<span class="built_in">eval</span>(s))</span><br><span class="line">    <span class="keyword">return</span> tmpls</span><br><span class="line"></span><br><span class="line">fo = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\mccode\colormap.txt&quot;</span>)</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    ls.append(line.split(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">fo.close()</span><br><span class="line"></span><br><span class="line">colorhave = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ls)):</span><br><span class="line">    colorhave[ls[i][<span class="number">0</span>]] = ls[i][<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">im = imread(<span class="string">&#x27;D:\mypycode\imageiostuff\\rmdpic.jpg&#x27;</span>)</span><br><span class="line">h, w, _ = im.shape</span><br><span class="line"></span><br><span class="line">mc = Minecraft.create()</span><br><span class="line">x0, y0, z0 = mc.player.getTilePos()</span><br><span class="line">x0 += <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(w):</span><br><span class="line">        r, g, b = im[y][x]</span><br><span class="line">        flagls = wip(r, g, b)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(flagls)==<span class="number">1</span>:</span><br><span class="line">            mc.setBlock(x0+x, y0+h-y, z0, flagls[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            mc.setBlock(x0+x, y0+h-y, z0, flagls[<span class="number">0</span>], flagls[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>当然，更好的方案是在命令中传入要绘制的图片，而不是每次绘制都要手动修改代码。</p><p>看一下效果（图片太大了两边加载不出来）：</p><p><img src="https://bu.dusays.com/2023/04/25/6447aec98ff19.png" alt="37-5.png"></p><p>作为对比，给出原图：</p><p><img src="https://bu.dusays.com/2023/04/25/6447ba4dc9e3e.jpg" alt="37-5dot5.jpg" title="高240 宽430"></p><p>头发的细节：</p><p><img src="https://bu.dusays.com/2023/04/25/6447af2f62c6f.png" alt="37-6.png"></p><p>考虑如下生成的图片：</p><p><img src="https://bu.dusays.com/2023/04/27/644a0e6e316c1.png" alt="37-7.png"></p><p>我们希望只保留这个谜之柴犬，那么可以在数据文件中添加仙人掌的记录。因仙人掌自爆的特性，只会留下柴犬本犬：</p><p><img src="https://bu.dusays.com/2023/04/27/644a0e6e1742c.png" alt="37-8.png"></p><p>对于更大的图片，可能需要在平坦的世界绘制，或者铺在地上。对于像素更高的图片，可能需要事先压缩，或者转换为像素画形式。普通图片转换为像素画形式可以使用 Python 实现，不再赘述。</p><h2 id="作弊码"><a href="#作弊码" class="headerlink" title="作弊码"></a>作弊码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/gamerule doDaylightCycle false  # 永久白天</span><br><span class="line">/gamemode creative               # 创造 </span><br><span class="line">/gamemode survival               # 生存</span><br><span class="line">/gamemode adventure              # 冒险</span><br><span class="line">/gamemode spectator              # 旁观</span><br><span class="line">/spawnpoint                      # 重生点设置为当前位置</span><br><span class="line">/seed                            # 种子</span><br><span class="line">/give username minecraft:diamond_ore 64      # 钻石</span><br><span class="line">/give username minecraft:emerald_block 64    # 绿宝石</span><br><span class="line">/tp username &#123;x&#125; &#123;y&#125; &#123;z&#125;                     # 传送</span><br><span class="line">/time set 0                                  # morning 6</span><br><span class="line">/time set 9500                               # noon</span><br><span class="line">/time set 12000                              # 黄昏</span><br><span class="line">/xp &#123;int&#125;                                    # 给经验</span><br><span class="line">/effect username &#123;type&#125; &#123;time&#125; &#123;level&#125;       # 给药</span><br><span class="line">/gamerule keepInventory true                 # 死亡不掉落</span><br><span class="line">/summon minecraft:zombie                     # 召唤僵尸</span><br><span class="line">/setblock &#123;x&#125; &#123;y&#125; &#123;z&#125; minecraft:redstone     # 设置红石方块</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用 Python 游玩我的世界。&lt;/p&gt;
&lt;p&gt;参考资料来源：各种网络资料和《零基础学 Minecraft 编程》，人民邮电出版社。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2023/04/24/6446a33de7053.png&quot; </summary>
      
    
    
    
    <category term="杂" scheme="https://loveofpeach.github.io/categories/%E6%9D%82/"/>
    
    
    <category term="Python" scheme="https://loveofpeach.github.io/tags/Python/"/>
    
    <category term="Minecraft" scheme="https://loveofpeach.github.io/tags/Minecraft/"/>
    
  </entry>
  
  <entry>
    <title>2304 - select</title>
    <link href="https://loveofpeach.github.io/posts/985e3562.html"/>
    <id>https://loveofpeach.github.io/posts/985e3562.html</id>
    <published>2023-04-07T15:26:28.000Z</published>
    <updated>2023-05-03T03:13:52.080Z</updated>
    
    <content type="html"><![CDATA[<p>在网上常常能遇到一些有价值的分享，不记录下来有些可惜。因此打算每个月精选一些内容，以备遗忘。文字内容可转载的会贴出来，视频则给出链接并作简要描述。</p><p>选取某内容不代表赞成其全部观点。</p><hr><p><strong>【视频】 经济机器是怎样运行的 (时长30分钟) Ray Dalio</strong></p><p>中文版 <a href="https://www.youtube.com/watch?v=rFV7wdEX-Mo">https://www.youtube.com/watch?v=rFV7wdEX-Mo</a></p><p>英文原版 <a href="https://www.youtube.com/watch?v=PHe0bXAIuk0">https://www.youtube.com/watch?v=PHe0bXAIuk0</a></p><p>短小精悍的经济学科普。</p><p>从三个因素出发，生产率的提高、短期债务周期、长期债务周期，介绍了一个经济模型。有助于了解我们在过去、当前的处境，以及未来可能的发展方向。</p><p><strong>【文本】 如何评价汤浅政明的《心理游戏》？</strong></p><p>作者：Icarus<br>链接：<a href="https://www.zhihu.com/answer/2587227017">https://www.zhihu.com/answer/2587227017</a></p><p>浅析汤浅政明-心灵游戏 我们该以什么样的姿态面对社会?</p><p>从《乒乓》开始接触汤浅政明，今天看到了他的早期作品，有感而发，若有不足，还请见谅。</p><p>心灵游戏是一部关于心理学和社会学的作品，其中夹杂了很多汤浅自己对于生命，对于生活的独到见解。</p><p>打开百科上对心灵游戏 这部汤浅早期作品的介绍，可以看到这部作品的一个引子。主人公是一个年轻的漫画家，暗恋一个女同学长达十一年之久，但因为种种原因在初中告白后虽然得到了回应，却没有后续发展，属于一个现实中很常见的，被扼杀掉的青春萌芽。后女主因混蛋老爸而被黑社会威胁强奸，男主被开枪爆菊，复活后带着女主和女主姐姐逃亡，然后……掉进了一只鲸鱼的肚子里（典型的汤浅风格，跳脱的思维，狂野的想象力，在全篇显露无疑）。</p><p>其实是掉进鲸鱼肚子里也好，其他的什么也好，最主要的是给主人公们一个密闭的环境，也渐渐地引出想要表达的主题。在遇到老爷爷后，三人饱餐了好几顿（满足食欲，基本需求）此时老爷爷告诉他们：不好意思，但是你们出不去了。三人在绝望崩溃三天后开始逐渐接受事实（人是社会性动物，所以一开始的表现也很正常），因为无需与外界交流，也逐渐展现真我（姐姐把头发剃短，后来的老爷爷涂上口红，似乎是汤浅在暗示心理性别与生理性别不同，也许并没有那么严格的界限），并且满足了性欲（汤浅在全篇有很多关于性的暗示，男主与女主是最直白的一段，女主的姐姐在玩气球时同时展现了女性（乳房）和男性（阴茎）的性征，也再次验证汤浅的思想。在这样一个与世隔绝的环境中，主角们产生了很多愉快的体验。</p><p>然而即使如此，当在面临逃出去，回归社会与留下来，愉快地享受当下并接受死亡时，以乐观的主角为首，主角们还是选择了前者。需要注意，三人在真实世界中的生活都算不上幸福，两姐妹不用说，因为混蛋老爸欠了一屁股债，还被黑社会的人追杀；男主虽然是大学生，但是也同时过着打工发传单这样的生活，并没有多少尊严。从这一点来看，三个人在马斯洛需求层次中都排在下层的位置。而对于老爷爷来说，自己因为可笑的自尊曾经选了一条错误的道路，如果真的能重新回到正常社会，那么则需要赎回自己的罪孽。就是这四个人，在面对是否能逃生并回归社会这样的考验时，迸发出了强烈的力量（奋力奔跑着逃离鲸鱼大嘴这一段，刻画的力度十分到位，给汤浅点赞）；并且在（也许只是幻想的。在结尾，画面的转变十分的迅速，每个主人公有各种不同的未来展现给观众，也正所谓一体多面，也象征着未来的不确定性。富有艺术天赋的姐姐可能会去上艺校，也许会被家里人因为没钱而拒绝；老爷爷有可能因为孤独而死，去回转寿司店工作，也有可能接受同性爱人的表白迎来第二春；放弃游泳的妹妹也许会成为一名普通的白领，也有可能会去转向马拉松运动，甚至是开始缝纫, 或是出一本料理书籍。当男主纵身一跃回归蓝天下时，这些无穷无尽的可能性出现在他的脑海里。确实，如果从来没有试着融入过这个社会，一切不好的可能都会消失，但同理，那些闪烁着的未来也同样消弭于无形了不是吗？</p><p>结尾处有这样一个看似与全篇无关的片段。一栋楼的建造过程，有设计者，实施者，与住户，每个人都是社会的一份子。我们被社会所影响，将来又注定要影响社会，哪怕是以再微弱的形式。这次我感觉自己读懂了汤浅。哪怕再卑微，心灵上受到过再多的挫折，也不能封闭自我，与世界隔离。汤浅确实是个创作的奇才。他让主角们真实地经历了一场九死一生的大冒险，然后突然领悟，豁然开朗。而又在最后的最后让女主在最后一秒踏进了车厢，黑社会没有来得及跟上来。仿佛一切都没有发生过。这才是我们大多数人生活的现状，我们很幸运又很不幸运地平凡着，没有经历过什么大风大浪。那么就在这样的情形下，我们是否还有勇气向理想进发，哪怕会遭人嘲笑？还是选择继续做一个与社会隔绝的人，没有失败，也没有成功？在我看来，这便是汤浅给我们的一局心灵游戏。</p><p><strong>【视频】 The Fast Fourier Transform (FFT): Most Ingenious Algorithm Ever?</strong></p><p><a href="https://www.youtube.com/watch?v=h7apO7q16V0">https://www.youtube.com/watch?v=h7apO7q16V0</a></p><p>一个能知其所以然的介绍 Fast Fourier Transform 的视频，相对来说易于理解。</p><p><strong>【文本】 如何评价漫画《绝望先生》？</strong></p><p>作者：Kalinka<br>链接：<a href="https://www.zhihu.com/answer/40643204">https://www.zhihu.com/answer/40643204</a></p><p>我们也许可以理解这部作品讲述的是；一位贵公子身旁经过一位女高中生，在擦肩而过时，突然女子的帽子被风吹掉了，贵公子看到了赶紧过去捡，他们的位置发生了位移，导致那位女高中生被车撞到，女高中生医治无效死亡后，身份信息下面写着器官全部捐献，看到这些的贵公子很心痛，他认为应该是自己被撞死。所以为了让良心得到安慰，找来一大帮人包括被捐助者，雇佣他们每天“上课”超度那位女高中生。七年了，每天都有一位捐献者负责扮演女高中生与他对话，直到有一段时间所有扮演者都发生了人格障碍，镜子前的她们都成了那名女高中生，那位贵公子也发现自己爱上了那位已经死去的人，他草草解散了那些顾来的人，然后跑到一个荒无人烟的小岛上尝试和其他人接触，并忘记七年里发生的一切。然而教室里也只剩下那些被捐助者，她们也爱上了这位曾经的老师，她们的每一部分都属于那位女高中生，她们决定披上婚纱奔向小岛和他结婚。</p><p>贵公子在小岛上差不多快从痛苦中解脱时，她们来了……高喊着先生，老师，穿着婚纱一起唱着那位女高中生生前喜爱的歌，他看到此情此景明白自己爱上那个人已成事实。于是他为了和她在一起选择了跳海自杀，完。</p><p>这是一部好作品，个人认为作者在表面上来戏谑讽刺当时日本社会以及亚洲地区的各种社会事件，实际上是为了掩盖人物内心的绝望。</p><p>而这也许就像现实生活中，我们平时为忘记一些不愉快的事所做的一样。三四十人坐在一间教室侃大山，就是为了忘记曾经那位援助他们的女高中生。</p><p>但从系色望的角度讲，他的性格集合了所有绝望少女的绝望特征。想死必须活，想活必须死，一切事情都是反着来，真的令人绝望透顶。当他绝望时便会出现希望，当他有希望时便会出现绝望。</p><p>从作品里看，其实可符香和变形记的人物塑造虽然有异曲同工之妙，但人物结局却又截然不同。变形记的主人公格里高尔变成了甲虫，本作女主变成了由一个人变成了十二个人（十二个人都认为自己是可符香），变形记的主人公被家人排斥，而可符香被其他人所接纳，但他们都有一个共同点就是贫穷，而且这两部作品中阐述的思想有一个共通点 ，即万恶的资本主义制度下 ，如果你没有用就会被社会遗弃，就会被身边人忽视，如果你有用那么你就会被社会接纳就会被身边人重视。</p><p>人人为自己，上帝为大家。生既为恶，死既为善。也许是这个作品的主旨吧。</p><p><strong>【文本】 如何评价新房昭之监督的动画？</strong></p><p>作者：水莲寺弥生<br>链接：<a href="https://www.zhihu.com/answer/99593520">https://www.zhihu.com/answer/99593520</a></p><p>日人评论如下：</p><blockquote><p>実写、文字だけなどの静止画のカットを多用する演出、同一スタッフ（声優含む）での作品作りなどが特徴。<br>文字カット・静止画の挿入や画面作りには、市川崑や鈴木清順ら日本映画監督からの影響が色濃く見られる。また、実相寺昭雄の演出に類似する点（斜めの画面、光のハレーション、カメラと人物の間に机などを配置するなど）が見受けられるが、本人は実相寺作品を殆ど観たことが無いという。<br>その独特の美的感覚は、大正・昭和初期の浪漫文学の末裔とも取れる。<br><a href="https://dic.pixiv.net/a/%E6%96%B0%E6%88%BF%E6%98%AD%E4%B9%8B">新房昭之 (しんぼうあきゆき)とは【ピクシブ百科事典】</a></p></blockquote><p>即新房爱用静止画、同一staff团体，受市川昆和铃木清顺影响深。其手法近乎实相寺昭雄（倾斜画面、光晕、人物与机位配置等），虽然新房本人说他几乎没看过实相寺昭雄的电影。</p><p>新房的美感被认为继承了大正与昭和初期浪漫文学的传统。不管他本人愿不愿意承认，他的美学都无法与这份日本的时代美学割裂开。不止一位老师推荐我看铃木清顺的大正浪漫三部曲《阳炎座》《梦二》《流浪者之歌》去帮助理解新房。</p><p>随便放几张铃木清顺和实相寺昭雄的电影截图给大家感受一下：</p><p><img src="https://pica.zhimg.com/78e9f03c7d141733824a5acb7db7f330_720w.jpg" alt="36-1" title="（铃木清顺《暗黑街美女》）"></p><p><img src="https://pic1.zhimg.com/a0b038ec0cedd6242f09c24d9ff81973_720w.jpg" alt="36-2"></p><p><img src="https://picx.zhimg.com/a43e6ff831c54a66e1ea14ae88079f08_720w.jpg" alt="36-3" title="（铃木《手枪歌剧》）"></p><p><img src="https://pica.zhimg.com/a4438c1467d2531dd823771a5bfe1921_720w.jpg" alt="36-4" title="（铃木《肉体之门》）"></p><p><img src="https://picx.zhimg.com/e5ee63d21953f4fdff92731186e67a4f_720w.jpg" alt="36-5" title="（实相寺昭雄《曼陀罗》）"></p><p>新房本人前后期的作品显然也存在脉络上的关系。大波老师曾经说过：「我在楼里推荐他人多看看珂赛特的肖像来帮助理解叛逆的物语，不仅仅是情死、戏中戏这些共通的日本情结，更是因为后者视觉上的种种不可解之处，乃至颓废的基调，都让人联想到十年前的新房……可以一看再看的生命力之源，就在于这种层层叠叠的形式。」</p><p>这段话非常精准地抽取出了从《珂赛特的肖像》到《叛逆的物语》中一条不断的伏线。物语系列中这条伏线亦无处不在。《花物语》中的寂寂水影、空荡剧场、无限复制的物件、少女视线若无其事的转移；《凭物语》中斧乃木余接茫然自失的漫游；《囮物語》中千石从湿漉漉液体中缓缓拈起猩红蛇莓，使你想起古老的渎神崇拜、慢慢燃烧的火，这份在迟缓中发酵的错乱感教人发狂。</p><p>视觉上艳丽的不可解、永远处于酩酊态一般的浊烂青春期、思考的无意义，最终只能落入无赖派的归化。这难道不正是昭和日本的侧影吗？大正浪漫和昭和浪漫的怀念者不能不被新房吸引，看他的动画，可能除了「层层叠叠的形式」之外什么也得不到。然而这种除形式外一切皆属虚无的体验，正是存在之实感的前提。正如相米慎二那句台词：</p><p>「死は生に先行するんだ、死は生きることの前提なんだ。」</p><p>欣赏几张魔性的千石抚子：</p><p><img src="https://picx.zhimg.com/c88f7be93377e49b3af0fdf859b68b1b_720w.jpg" alt="36-6"></p><p><img src="https://picx.zhimg.com/fe554cfd3f3ab875bb54a670418a44b2_720w.jpg" alt="36-7"></p><p><img src="https://pic1.zhimg.com/72da7f974b45a5ab92a1f3931cb98255_720w.jpg" alt="36-8"></p><p><img src="https://pica.zhimg.com/1868ceea889fd9e1e61f9579ffbb95aa_720w.jpg" alt="36-9"></p><p>【文本】 The real Mao Zedong in Lu Xun’s eyes</p><p><a href="https://u.osu.edu/mclc/2016/05/25/the-real-mao-zedong-in-lu-xuns-eyes/">https://u.osu.edu/mclc/2016/05/25/the-real-mao-zedong-in-lu-xuns-eyes/</a></p><p>一篇关于鲁迅的文章，关于他如何成为旗帜，又如何远去的故事。来自 Ohio State University 网站，毕竟国内网站应该是不太能贴这些的。</p><p>【文本】 latex 用法</p><p>含有一种特殊用法： <a href="https://zhuanlan.zhihu.com/p/578873088">https://zhuanlan.zhihu.com/p/578873088</a></p><p>较全版本： <a href="https://www.cnblogs.com/1024th/p/11623258.html">https://www.cnblogs.com/1024th/p/11623258.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在网上常常能遇到一些有价值的分享，不记录下来有些可惜。因此打算每个月精选一些内容，以备遗忘。文字内容可转载的会贴出来，视频则给出链接并作简要描述。&lt;/p&gt;
&lt;p&gt;选取某内容不代表赞成其全部观点。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;【视频】 经济机器是怎样运行的 (时长</summary>
      
    
    
    
    <category term="转载" scheme="https://loveofpeach.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="select" scheme="https://loveofpeach.github.io/tags/select/"/>
    
  </entry>
  
  <entry>
    <title>turtle 绘制锅巴</title>
    <link href="https://loveofpeach.github.io/posts/47c25c56.html"/>
    <id>https://loveofpeach.github.io/posts/47c25c56.html</id>
    <published>2023-03-17T12:43:47.000Z</published>
    <updated>2023-04-23T09:06:58.620Z</updated>
    
    <content type="html"><![CDATA[<p>本来想画兰那罗的，但是太复杂了。还是锅巴好画。</p><p>调参真的痛苦。</p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># guoba.py</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> tu</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">guoba_ellipse</span>(<span class="params">a, b, n=<span class="number">500</span>, x=<span class="number">0</span>, y=<span class="number">0</span>, alpha=<span class="number">360</span>, sangle=<span class="number">0</span>, workangle=<span class="number">360</span>, myflag=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    绘制椭圆</span></span><br><span class="line"><span class="string">    a:长半轴长度</span></span><br><span class="line"><span class="string">    b:短半轴长度</span></span><br><span class="line"><span class="string">    n:越大越趋近椭圆</span></span><br><span class="line"><span class="string">    x:几何中心x坐标</span></span><br><span class="line"><span class="string">    y:几何中心y坐标</span></span><br><span class="line"><span class="string">    alpha:椭圆旋转的角度</span></span><br><span class="line"><span class="string">    sangle:开始绘制点与椭圆长半轴正方向的夹角（角度）</span></span><br><span class="line"><span class="string">    workangle:绘制一部分椭圆（角度），默认为整个椭圆</span></span><br><span class="line"><span class="string">    myflag:判断是否仅需要调整画笔位置</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    alpha = (<span class="number">2</span>*math.pi/<span class="number">360</span>)*alpha  <span class="comment"># 角度制换算弧度值</span></span><br><span class="line">    sangle = (<span class="number">2</span>*math.pi/<span class="number">360</span>)*sangle</span><br><span class="line">    workangle = (<span class="number">2</span>*math.pi/<span class="number">360</span>)*workangle</span><br><span class="line">    theta = sangle</span><br><span class="line">    <span class="comment"># 参数方程，旋转的部分按旋转矩阵推导：</span></span><br><span class="line">    start_point = (a*math.cos(theta)*math.cos(alpha) - b*math.sin(theta)*math.sin(alpha) + x,</span><br><span class="line">                   a*math.cos(theta)*math.sin(alpha) + b*math.sin(theta)*math.cos(alpha) + y)</span><br><span class="line">    tu.penup()</span><br><span class="line">    tu.setpos(start_point)  <span class="comment"># 初始位置</span></span><br><span class="line">    <span class="keyword">if</span> myflag:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    tu.pendown()</span><br><span class="line">    microtheta = <span class="number">2</span> * math.pi / n  <span class="comment"># 将2pi弧度n等分</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        theta = sangle + (i+<span class="number">1</span>)*microtheta  <span class="comment"># 弧度增加</span></span><br><span class="line">        <span class="keyword">if</span> (theta-sangle) &gt; workangle:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        next_point = (a*math.cos(theta)*math.cos(alpha) - b*math.sin(theta)*math.sin(alpha) + x,</span><br><span class="line">                      a*math.cos(theta)*math.sin(alpha) + b*math.sin(theta)*math.cos(alpha) + y)</span><br><span class="line">        tu.setpos(next_point)</span><br><span class="line">    tu.penup()</span><br><span class="line"></span><br><span class="line">tu.setup(<span class="number">700</span>,<span class="number">700</span>)</span><br><span class="line">tu.speed(<span class="number">10</span>)</span><br><span class="line">tu.delay(<span class="number">0</span>)</span><br><span class="line">tu.pensize(<span class="number">25</span>)</span><br><span class="line">tu.colormode(<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">tu.pencolor((<span class="number">255</span>,<span class="number">193</span>,<span class="number">37</span>))</span><br><span class="line">tu.fillcolor((<span class="number">255</span>,<span class="number">193</span>,<span class="number">37</span>))</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">250</span>, <span class="number">210</span>, <span class="number">500</span>, <span class="number">0</span>, -<span class="number">70</span>, <span class="number">360</span>, -<span class="number">45</span>, <span class="number">270</span>) <span class="comment"># 脸</span></span><br><span class="line">tu.pendown()</span><br><span class="line">tu.setpos(<span class="number">179</span>, -<span class="number">220</span>)</span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">75</span>, <span class="number">70</span>, <span class="number">500</span>, <span class="number">160</span>, <span class="number">150</span>, -<span class="number">30</span>) <span class="comment"># 右耳朵</span></span><br><span class="line">tu.end_fill()</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">80</span>, <span class="number">77</span>, <span class="number">500</span>, -<span class="number">160</span>, <span class="number">150</span>, <span class="number">45</span>) <span class="comment"># 左耳朵</span></span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.fillcolor((<span class="number">205</span>, <span class="number">155</span>, <span class="number">29</span>)) <span class="comment"># 画笔颜色忘换了。参数调好就别动，效果一样</span></span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">50</span>, <span class="number">45</span>, <span class="number">500</span>, <span class="number">165</span>, <span class="number">140</span>, -<span class="number">33</span>) <span class="comment"># 右耳朵内部</span></span><br><span class="line">tu.end_fill()</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">53</span>, <span class="number">47</span>, <span class="number">500</span>, -<span class="number">155</span>, <span class="number">140</span>, <span class="number">30</span>) <span class="comment"># 左耳朵内部</span></span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.pensize(<span class="number">15</span>)</span><br><span class="line">tu.pencolor((<span class="number">238</span>, <span class="number">121</span>, <span class="number">66</span>))</span><br><span class="line">tu.fillcolor((<span class="number">238</span>, <span class="number">121</span>, <span class="number">66</span>))</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">45</span>, <span class="number">48</span>, <span class="number">500</span>, -<span class="number">165</span>, -<span class="number">45</span>, <span class="number">0</span>) <span class="comment"># 左腮红</span></span><br><span class="line">tu.end_fill()</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">30</span>, <span class="number">50</span>, <span class="number">500</span>, <span class="number">170</span>, -<span class="number">45</span>, <span class="number">15</span>) <span class="comment"># 右腮红</span></span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.pensize(<span class="number">5</span>)</span><br><span class="line">tu.pencolor((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"><span class="comment"># ------------------------ 眼  罩 ------------------------#</span></span><br><span class="line">guoba_ellipse(<span class="number">280</span>, <span class="number">185</span>, <span class="number">500</span>, -<span class="number">5</span>, <span class="number">107</span>, <span class="number">2</span>, -<span class="number">121</span>, <span class="number">62</span>, <span class="literal">True</span>)  <span class="comment">#</span></span><br><span class="line">tu.fillcolor((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))                                   <span class="comment">#</span></span><br><span class="line">tu.begin_fill()                                           <span class="comment">#</span></span><br><span class="line">guoba_ellipse(<span class="number">280</span>, <span class="number">185</span>, <span class="number">500</span>, -<span class="number">5</span>, <span class="number">107</span>, <span class="number">2</span>, -<span class="number">121</span>, <span class="number">62</span>)        <span class="comment">#</span></span><br><span class="line">tu.seth(<span class="number">25</span>)                                               <span class="comment">#      </span></span><br><span class="line">tu.pendown()                                              <span class="comment">#</span></span><br><span class="line">tu.circle(<span class="number">55</span>, <span class="number">210</span>)                                        <span class="comment">#</span></span><br><span class="line">tu.penup()                                                <span class="comment">#</span></span><br><span class="line">tu.setpos(-<span class="number">145</span>, -<span class="number">55</span>)                                      <span class="comment">#    </span></span><br><span class="line">tu.pendown()                                              <span class="comment">#</span></span><br><span class="line">tu.seth(<span class="number">157</span>)                                              <span class="comment">#</span></span><br><span class="line">tu.circle(-<span class="number">55</span>, <span class="number">210</span>)                                       <span class="comment">#</span></span><br><span class="line">guoba_ellipse(<span class="number">120</span>, <span class="number">80</span>, <span class="number">500</span>, -<span class="number">5</span>, <span class="number">95</span>, -<span class="number">1</span>, -<span class="number">135</span>, <span class="number">90</span>)         <span class="comment">#</span></span><br><span class="line">tu.end_fill()                                             <span class="comment">#</span></span><br><span class="line">tu.pendown()                                              <span class="comment">#</span></span><br><span class="line">tu.setpos(-<span class="number">145</span>, -<span class="number">55</span>)                                      <span class="comment">#</span></span><br><span class="line"><span class="comment"># ------------------------ 眼  罩 ------------------------#</span></span><br><span class="line"></span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">22</span>, <span class="number">15</span>, <span class="number">300</span>, -<span class="number">105</span>, <span class="number">105</span>, <span class="number">25</span>)  <span class="comment"># 左眉毛</span></span><br><span class="line">tu.end_fill()</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">18</span>, <span class="number">10</span>, <span class="number">300</span>, <span class="number">130</span>, <span class="number">100</span>, -<span class="number">36</span>)  <span class="comment"># 右眉毛</span></span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.pencolor((<span class="number">255</span>, <span class="number">255</span>, <span class="number">224</span>))</span><br><span class="line">tu.fillcolor((<span class="number">255</span>, <span class="number">255</span>, <span class="number">224</span>))</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">80</span>, <span class="number">45</span>, <span class="number">500</span>, -<span class="number">5</span>, <span class="number">65</span>) <span class="comment"># 额头白色部分</span></span><br><span class="line">tu.end_fill()</span><br><span class="line">tu.pencolor((<span class="number">255</span>,<span class="number">193</span>,<span class="number">37</span>))</span><br><span class="line">tu.fillcolor((<span class="number">255</span>,<span class="number">193</span>,<span class="number">37</span>))</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">50</span>, <span class="number">31</span>, <span class="number">400</span>, -<span class="number">5</span>, <span class="number">50</span>) <span class="comment"># 额头黄色部分</span></span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.pencolor((<span class="number">255</span>, <span class="number">250</span>, <span class="number">250</span>))</span><br><span class="line">tu.fillcolor((<span class="number">255</span>, <span class="number">250</span>, <span class="number">250</span>))</span><br><span class="line">guoba_ellipse(<span class="number">21</span>, <span class="number">35</span>, <span class="number">400</span>, -<span class="number">115</span>, -<span class="number">8</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">360</span>, <span class="literal">True</span>)</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">21</span>, <span class="number">35</span>, <span class="number">400</span>, -<span class="number">115</span>, -<span class="number">8</span>, <span class="number">7</span>) <span class="comment"># 左眼白</span></span><br><span class="line">tu.end_fill()</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">20</span>, <span class="number">33.5</span>, <span class="number">500</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">4</span>)  <span class="comment"># 右眼白</span></span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------- 胡 子 --------------------------#</span></span><br><span class="line">tu.pencolor((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))                              <span class="comment">#</span></span><br><span class="line">tu.fillcolor((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))                             <span class="comment">#</span></span><br><span class="line">tu.begin_fill()                                           <span class="comment">#</span></span><br><span class="line">guoba_ellipse(<span class="number">85</span>, <span class="number">20</span>, <span class="number">500</span>, <span class="number">5</span>, -<span class="number">60</span>, <span class="number">0</span>)                     <span class="comment">#</span></span><br><span class="line">tu.end_fill()                                             <span class="comment">#</span></span><br><span class="line">guoba_ellipse(<span class="number">85</span>, <span class="number">20</span>, <span class="number">500</span>, <span class="number">5</span>, -<span class="number">60</span>, <span class="number">0</span>, <span class="number">140</span>, <span class="number">360</span>, <span class="literal">True</span>)     <span class="comment">#</span></span><br><span class="line">tu.seth(-<span class="number">170</span>)                                             <span class="comment">#</span></span><br><span class="line">tu.begin_fill()                                           <span class="comment">#</span></span><br><span class="line">tu.circle(<span class="number">60</span>)                                             <span class="comment">#</span></span><br><span class="line">tu.end_fill()                                             <span class="comment">#</span></span><br><span class="line">guoba_ellipse(<span class="number">85</span>, <span class="number">20</span>, <span class="number">500</span>, <span class="number">5</span>, -<span class="number">60</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">360</span>, <span class="literal">True</span>)      <span class="comment">#</span></span><br><span class="line">tu.seth(-<span class="number">10</span>)                                              <span class="comment">#</span></span><br><span class="line">tu.begin_fill()                                           <span class="comment">#</span></span><br><span class="line">tu.circle(-<span class="number">60</span>)                                            <span class="comment">#</span></span><br><span class="line">tu.end_fill()                                             <span class="comment">#</span></span><br><span class="line">tu.penup()                                                <span class="comment">#</span></span><br><span class="line"><span class="comment"># ----------------------- 胡 子 --------------------------#</span></span><br><span class="line"></span><br><span class="line">tu.pencolor((<span class="number">255</span>, <span class="number">160</span>, <span class="number">122</span>))</span><br><span class="line">tu.fillcolor((<span class="number">255</span>, <span class="number">160</span>, <span class="number">122</span>))</span><br><span class="line">tu.begin_fill()</span><br><span class="line">guoba_ellipse(<span class="number">80</span>, <span class="number">50</span>, <span class="number">500</span>, <span class="number">4</span>, -<span class="number">37</span>, -<span class="number">8</span>, -<span class="number">120</span>, <span class="number">35</span>)  <span class="comment">#鼻子</span></span><br><span class="line">guoba_ellipse(<span class="number">80</span>, <span class="number">50</span>, <span class="number">500</span>, <span class="number">13</span>, -<span class="number">31</span>, <span class="number">30</span>, -<span class="number">115</span>, <span class="number">30</span>)</span><br><span class="line">tu.pendown()</span><br><span class="line">tu.setpos(-<span class="number">39.5</span>, -<span class="number">73</span>)</span><br><span class="line">tu.end_fill()</span><br><span class="line"></span><br><span class="line">tu.pencolor((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">tu.pensize(<span class="number">2</span>)</span><br><span class="line">guoba_ellipse(<span class="number">4.2</span>, <span class="number">7</span>, <span class="number">400</span>, -<span class="number">115</span>, -<span class="number">8</span>, <span class="number">7</span>) <span class="comment"># 左眼珠</span></span><br><span class="line">guoba_ellipse(<span class="number">4</span>, <span class="number">6.7</span>, <span class="number">500</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">4</span>)   <span class="comment"># 右眼珠</span></span><br><span class="line">tu.penup()</span><br><span class="line">tu.setpos(<span class="number">690</span>,<span class="number">690</span>)</span><br><span class="line">tu.done()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本来想画兰那罗的，但是太复杂了。还是锅巴好画。&lt;/p&gt;
&lt;p&gt;调参真的痛苦。&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="做题" scheme="https://loveofpeach.github.io/categories/%E5%81%9A%E9%A2%98/"/>
    
    
    <category term="turtle" scheme="https://loveofpeach.github.io/tags/turtle/"/>
    
    <category term="Python" scheme="https://loveofpeach.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PythonNote</title>
    <link href="https://loveofpeach.github.io/posts/7b6f8cd.html"/>
    <id>https://loveofpeach.github.io/posts/7b6f8cd.html</id>
    <published>2023-03-07T14:53:45.000Z</published>
    <updated>2023-05-04T13:20:16.372Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>Ctrl</code>+<code>f</code>输入“实例”以搜索样例代码。</p><h2 id="Python-课程概述"><a href="#Python-课程概述" class="headerlink" title="Python 课程概述"></a>Python 课程概述</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例：hello world</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&quot;hello, world&quot;</span>)</span><br><span class="line">hello, world</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>name=<span class="built_in">input</span>(<span class="string">&#x27;input your name: &#x27;</span>)</span><br><span class="line"><span class="built_in">input</span> your name: ldq</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(name,<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">ldq hello world</span><br></pre></td></tr></table></figure><p><strong>print() - python 内置函数</strong></p><ul><li><code>dir(_builtins_)</code></li><li><code>len(dir(_builtins_))</code></li><li><code>help(print)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">help</span>(<span class="built_in">print</span>)</span><br><span class="line">Help on built-<span class="keyword">in</span> function <span class="built_in">print</span> <span class="keyword">in</span> module builtins:</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(...)</span><br><span class="line">    <span class="built_in">print</span>(value, ..., sep=<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;\n&#x27;</span>, file=sys.stdout, flush=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    Prints the values to a stream, <span class="keyword">or</span> to sys.stdout by default.</span><br><span class="line">    <span class="type">Optional</span> keyword arguments:</span><br><span class="line">    file:  a file-like <span class="built_in">object</span> (stream); defaults to the current sys.stdout.</span><br><span class="line">    sep:   string inserted between values, default a space.</span><br><span class="line">    end:   string appended after the last value, default a newline.</span><br><span class="line">    flush: whether to forcibly flush the stream.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/08/6407ef0e37efa.png" alt="34-1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">help</span>(<span class="built_in">input</span>)</span><br><span class="line">Help on built-<span class="keyword">in</span> function <span class="built_in">input</span> <span class="keyword">in</span> module builtins:</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span>(prompt=<span class="literal">None</span>, /)</span><br><span class="line">    Read a string <span class="keyword">from</span> standard <span class="built_in">input</span>.  The trailing newline <span class="keyword">is</span> stripped.</span><br><span class="line"></span><br><span class="line">    The prompt string, <span class="keyword">if</span> given, <span class="keyword">is</span> printed to standard output without a</span><br><span class="line">    trailing newline before reading <span class="built_in">input</span>.</span><br><span class="line"></span><br><span class="line">    If the user hits EOF (*nix: Ctrl-D, Windows: Ctrl-Z+Return), <span class="keyword">raise</span> EOFError.</span><br><span class="line">    On *nix systems, readline <span class="keyword">is</span> used <span class="keyword">if</span> available.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Python-基本语法元素"><a href="#Python-基本语法元素" class="headerlink" title="Python 基本语法元素"></a>Python 基本语法元素</h2><p>交互式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r=<span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>area=<span class="number">3.1415</span>*r*r</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(r,area)</span><br><span class="line"><span class="number">25</span> <span class="number">1963.4375000000002</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&quot;r=%2d,area=%.2f&quot;</span>%(r,area))</span><br><span class="line">r=<span class="number">25</span>,area=<span class="number">1963.44</span></span><br></pre></td></tr></table></figure><p>文件式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例：圆面积的计算</span></span><br><span class="line">r = <span class="number">25</span></span><br><span class="line">area = <span class="number">3.1415</span> * r * r</span><br><span class="line"><span class="built_in">print</span>(r,area)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;r=&quot;</span>,r,<span class="string">&quot;area=&quot;</span>,area)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;r=%2d,area=%.2f&quot;</span>%(r,area))</span><br></pre></td></tr></table></figure><p>保存为文件并运行，输出如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">25</span> <span class="number">1963.4375000000002</span></span><br><span class="line">r= <span class="number">25</span> area= <span class="number">1963.4375000000002</span></span><br><span class="line">r=<span class="number">25</span>,area=<span class="number">1963.44</span></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/08/6407f373bbc6a.png" alt="34-2.png"></p><p><strong>import math</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">r = <span class="number">25</span></span><br><span class="line">area = math.pi * r * r</span><br><span class="line"><span class="built_in">print</span>(r,area)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;r=&quot;</span>,r,<span class="string">&quot;area=&quot;</span>,area)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;r=%2d,area=%.2f&quot;</span>%(r,area))</span><br></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">25</span> <span class="number">1963.4954084936207</span></span><br><span class="line">r= <span class="number">25</span> area= <span class="number">1963.4954084936207</span></span><br><span class="line">r=<span class="number">25</span>,area=<span class="number">1963.50</span></span><br></pre></td></tr></table></figure><p><code>import</code>：python 保留字，引用函数库</p><p><code>math</code>：python 中内置的标准库</p><ul><li><code>math.pi</code> $\quad$ 常量值</li><li><code>math.pow(x,y)</code> $\quad$ 返回 x 的 y 次幂</li><li><code>math.sqrt(x)</code> $\quad$ 求 x 的平方根</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例：同切圆绘制</span></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.pensize(<span class="number">2</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">40</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>)</span><br><span class="line">turtle.circle(<span class="number">160</span>)</span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> pensize </span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> circle</span><br><span class="line">pensize(<span class="number">2</span>)</span><br><span class="line">circle(<span class="number">10</span>)</span><br><span class="line">circle(<span class="number">40</span>)</span><br><span class="line">circle(<span class="number">80</span>)</span><br><span class="line">circle(<span class="number">160</span>)</span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/08/640832a82b715.png" alt="34-3.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例：温度转换</span></span><br><span class="line"><span class="comment"># 这是一条性感的注释</span></span><br><span class="line">TempStr = <span class="built_in">input</span>(<span class="string">&quot;请输入带有符号的温度值：&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> TempStr[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;f&#x27;</span>]:</span><br><span class="line">    C = (<span class="built_in">eval</span>(TempStr[<span class="number">0</span>:-<span class="number">1</span>])-<span class="number">32</span>)/<span class="number">1.8</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;转换后的温度是&#123;:.2f&#125;C&quot;</span>.<span class="built_in">format</span>(C))</span><br><span class="line"><span class="keyword">elif</span> TempStr[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]:</span><br><span class="line">    F = <span class="number">1.8</span>*<span class="built_in">eval</span>(TempStr[<span class="number">0</span>:-<span class="number">1</span>])+<span class="number">32</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;转换后的温度是&#123;:.2f&#125;F&quot;</span>.<span class="built_in">format</span>(F))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入格式错误&quot;</span>)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">多</span></span><br><span class="line"><span class="string">    行</span></span><br><span class="line"><span class="string">        注</span></span><br><span class="line"><span class="string">            释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>在 python 中，缩进是语法的一部分，缩进不正确程序运行错误。<strong>长度一致：</strong> 程序内一致即可，一般用 4 个空格或 1 个<code>TAB</code>。</p><p>变量的命名：</p><p><img src="https://bu.dusays.com/2023/03/10/640adc07a10af.png" alt="34-4.png"></p><p><img src="https://bu.dusays.com/2023/03/10/640add42a0744.png" alt="34-5.png"></p><p>数据类型：</p><ul><li>整数类型：<code>10011101</code></li><li>字符串类型：<code>&quot;10,011,101&quot;</code></li><li>列表类型：<code>[10, 011, 101]</code></li></ul><p>字符串，由0个或多个字符组成的有序字符序列：</p><ul><li>字符串由一对单引号或一对双引号或一对三引号表示<ul><li><code>&quot;请输入带有符号的温度值: &quot;</code>或者   <code>&#39;C&#39;</code>或者<code>&#39;&#39;&#39;C&#39;&#39;&#39;</code>（<a href="https://blog.csdn.net/woainishifu/article/details/76105667">？详见该内容（网页内容已备份）</a>，另外，虽然三个单引号可以用于表示多行字符串和多行注释，但它们不会相互干扰或冲突。）</li></ul></li><li>字符串是字符的有序序列，可以对其中的字符进行索引<ul><li><code>&quot;请&quot;</code>是<code>&quot;请输入带有符号的温度值: &quot;</code>的第0个字符（这个中文字符串暂且存疑）</li></ul></li></ul><p><img src="https://bu.dusays.com/2023/03/10/640ae1191ede7.png" alt="34-6.png"></p><p><img src="https://bu.dusays.com/2023/03/10/640ae1da7d012.png" alt="34-7.png" title="左闭右开，谢谢"></p><script type="math/tex; mode=display">examples</script><p>提取最后N个字符：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>letter = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letter[-<span class="number">3</span>:]</span><br><span class="line"><span class="string">&#x27;xyz&#x27;</span></span><br></pre></td></tr></table></figure><p>从开头到结尾，step为N：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>letter[::<span class="number">5</span>]</span><br><span class="line"><span class="string">&#x27;afkpuz&#x27;</span></span><br></pre></td></tr></table></figure></p><p>将字符串倒转(reverse)， 通过设置步长为负数：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>letter[::-<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;zyxwvutsrqponmlkjihgfedcba&#x27;</span></span><br></pre></td></tr></table></figure></p><p>列表类型，由 0 个或多个数据组成的有序序列：</p><ul><li>列表使用<code>[]</code>表示，采用<code>,</code>分隔各元素<ul><li><code>[&#39;F&#39;,&#39;f&#39;]</code>表示两个元素<code>&#39;F&#39;</code>和<code>&#39;f&#39;</code></li></ul></li><li>使用保留字<code>in</code>判断一个元素是否在列表中<ul><li><code>TempStr[-1] in [&#39;C&#39;,&#39;c&#39;]</code>判断前者是否与列表中某个元素相同</li></ul></li></ul><p><code>eval()</code>，去掉参数最外侧引号并执行余下语句的函数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x = <span class="number">7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>( <span class="string">&#x27;3 * x&#x27;</span> )</span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>(<span class="string">&#x27;pow(2,2)&#x27;</span>)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>(<span class="string">&#x27;2 + 2&#x27;</span>)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n=<span class="number">81</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>(<span class="string">&quot;n + 4&quot;</span>)</span><br><span class="line"><span class="number">85</span></span><br></pre></td></tr></table></figure><p>一些其他的例子：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>(<span class="string">&#x27;&quot;1+2&quot;&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;1+2&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">eval</span>(<span class="string">&#x27;print(&quot;hello&quot;)&#x27;</span>)</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p><code>r = eval(input(&quot;input r=&quot;))</code>，如果键盘输入数值<code>5</code>，x 值是<strong>数字</strong><code>5</code>。</p><p><code>print()</code>中格式化输出：字符串的<code>format()</code>方法</p><h2 id="Python-基本图形绘制"><a href="#Python-基本图形绘制" class="headerlink" title="Python 基本图形绘制"></a>Python 基本图形绘制</h2><p>turtle 库是 python 语言的标准库之一。</p><p><img src="https://bu.dusays.com/2023/03/16/641278e679ff7.png" alt="34-8.png"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.goto(<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">turtle.goto(<span class="number">100</span>,-<span class="number">100</span>)</span><br><span class="line">turtle.goto(-<span class="number">100</span>,-<span class="number">100</span>)</span><br><span class="line">turtle.goto(-<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">turtle.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/16/64127bcf5dbbf.png" alt="34-9.png" title="上面代码的结果及在结果上的注释"></p><p><img src="https://bu.dusays.com/2023/03/16/641283e87235a.png" alt="34-10.png"></p><p><img src="https://bu.dusays.com/2023/03/16/6412872ade8a5.png" alt="34-11.png" title="角度坐标体系"></p><p><img src="https://bu.dusays.com/2023/03/16/6412877ca20c7.png" alt="34-12.png"></p><p>色彩模式：</p><p><img src="https://bu.dusays.com/2023/03/16/641288e5c6f50.png" alt="34-13.png"></p><p><img src="https://bu.dusays.com/2023/03/16/64128d50b787f.png" alt="34-14.png"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例：蟒蛇绘制</span></span><br><span class="line"><span class="comment"># PythonDraw.py</span></span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> tu</span><br><span class="line">tu.setup(<span class="number">650</span>,<span class="number">350</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">tu.penup()</span><br><span class="line">tu.fd(-<span class="number">250</span>)</span><br><span class="line">tu.pendown()</span><br><span class="line">tu.pensize(<span class="number">25</span>)</span><br><span class="line">tu.seth(-<span class="number">40</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    tu.pencolor(<span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">    tu.circle(<span class="number">40</span>,<span class="number">80</span>)</span><br><span class="line">    tu.pencolor(<span class="string">&quot;gold&quot;</span>)</span><br><span class="line">    tu.circle(-<span class="number">40</span>,<span class="number">80</span>)</span><br><span class="line">tu.circle(<span class="number">40</span>,<span class="number">80</span>/<span class="number">2</span>)</span><br><span class="line">tu.fd(<span class="number">40</span>)</span><br><span class="line">tu.circle(<span class="number">32</span>,<span class="number">180</span>)</span><br><span class="line">tu.fd(<span class="number">40</span>*<span class="number">2</span>/<span class="number">3</span>)</span><br><span class="line">tu.done()</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/16/6412b0c9cad96.png" alt="34-15.png"></p><p>画笔控制函数：</p><ul><li><code>turtle.penup()</code>，别名<code>turtle.pu()</code><ul><li>抬起画笔，海龟在飞行</li></ul></li><li><code>turtle.pendown()</code>，别名<code>turtle.pd()</code><ul><li>落下画笔，海龟在爬行</li></ul></li><li>画笔操作后一直有效，一般成对出现。</li><li><code>turtle.pensize(width)</code>，别名<code>turtle.width(width)</code><ul><li>画笔宽度，海龟的腰围</li></ul></li><li><code>turtle.pencolor(color)</code>，<code>color</code>为颜色字符串或 rgb 值<ul><li>画笔颜色，海龟在涂装</li></ul></li><li>画笔设置后一直有效，直到下次重新设置</li></ul><p><img src="https://bu.dusays.com/2023/03/16/6412b42be072b.png" alt="34-16.png" title="fd()和circle()"></p><p><img src="https://bu.dusays.com/2023/03/16/6412b521db5fe.png" alt="34-17.png" title="seth(angle)和left(angle)、right(angle)"></p><p><img src="https://bu.dusays.com/2023/03/16/6412b654e6734.png" alt="34-18.png" title="range()：左闭右开，万岁"></p><p>循环语句：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello: &quot;</span>,i)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    运行结果：</span></span><br><span class="line"><span class="string">hello:  0</span></span><br><span class="line"><span class="string">hello:  1</span></span><br><span class="line"><span class="string">hello:  2</span></span><br><span class="line"><span class="string">hello:  3</span></span><br><span class="line"><span class="string">hello:  4</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p><img src="https://bu.dusays.com/2023/03/23/641c24293c847.png" alt="34-19.png" title="不同进制的表示形式"></p><p>浮点数取值范围和小数精度存在限制，但常规计算可忽略。取值范围数量级约为$-10^{307}$~$10^{308}$，精度数量级$10^{-16}$ .</p><p>浮点数运算存在不确定尾数，不是 bug：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span>+<span class="number">0.3</span></span><br><span class="line"><span class="number">0.4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span>+<span class="number">0.2</span></span><br><span class="line"><span class="number">0.30000000000000004</span></span><br></pre></td></tr></table></figure><p>这是因为二进制表示小数，有时可以无限接近，但不完全相同。</p><p><code>round(x,d)</code>：对 x 四舍五入，d 是小数截取位数。不确定尾数一般发生在$10^{-16}$左右，<code>round()</code>十分有效。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span>+<span class="number">0.2</span>==<span class="number">0.3</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(<span class="number">0.1</span>+<span class="number">0.2</span>,<span class="number">1</span>)==<span class="number">0.3</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>科学计数法和 C++ 类似。</p><p>复数类型：<code>z.real</code>获得实部，<code>z.imag</code>获得虚部。</p><p>Python中的<code>x/y</code>带有小数部分。Python中的<code>x//y</code>，效果同 C++ 中的<code>x/y</code>。</p><p><code>x ** y</code>幂运算，$x^y$，其中$y$可以是小数。</p><p><img src="https://bu.dusays.com/2023/03/23/641c5827cec07.png" alt="34-20.png" title="各种函数"></p><p>查看类型、判断是否类型一致：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(<span class="number">3</span>)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(<span class="number">3.3</span>)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>((<span class="number">3</span>,))</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>([<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(<span class="number">3</span>,<span class="built_in">int</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>(<span class="number">3.5</span>,<span class="built_in">int</span>)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],<span class="built_in">list</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>比较运算符与 C++ 一致。</p><p>逻辑运算：<code>and</code>，<code>or</code>，<code>not</code> .</p><p><code>math</code>库 4 个数学常数：</p><ul><li><code>math.pi</code>，圆周率</li><li><code>math.e</code>，自然对数</li><li><code>math.inf</code>，正无穷大。负无穷大记为<code>-math.inf</code></li><li><code>math.nan</code>，非浮点数标记，NaN（Not a Number）</li></ul><p><img src="https://bu.dusays.com/2023/03/23/641c5d7da1e91.png" alt="34-21.png" title="16个数值表示函数"></p><p><img src="https://bu.dusays.com/2023/03/23/641c5d7d9f266.png" alt="34-22.png" title="8个幂对数函数 &amp; pow()的区别"></p><p><img src="https://bu.dusays.com/2023/03/23/641c5e88e9e1c.png" alt="34-23.png" title="16个三角函数"></p><p><img src="https://bu.dusays.com/2023/03/23/641c5f07d7dd3.png" alt="34-24.png" title="4个特殊高等函数"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例：自适应simpson</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>)-&gt;<span class="built_in">float</span>:</span><br><span class="line">    <span class="keyword">return</span> math.<span class="built_in">pow</span>(<span class="number">1</span>+<span class="number">1</span>/x, x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simpson</span>(<span class="params">l,r</span>)-&gt;<span class="built_in">float</span>:</span><br><span class="line">    mid = (l+r)/<span class="number">2.0</span></span><br><span class="line">    <span class="keyword">return</span> (f(l)+<span class="number">4</span>*f(mid)+f(r))/<span class="number">6.0</span>*(r-l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">asr</span>(<span class="params">l, r, eps, S, cnt</span>)-&gt;<span class="built_in">float</span>:</span><br><span class="line">    mid =(l+r)/<span class="number">2.0</span></span><br><span class="line">    s1 = simpson(l, mid)</span><br><span class="line">    s2 = simpson(mid, r)</span><br><span class="line">    <span class="keyword">if</span> (math.fabs(s1+s2-S)&lt;=<span class="number">15</span>*eps <span class="keyword">and</span> cnt&lt;=<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> s1+s2+(s1+s2-S)/<span class="number">15.0</span></span><br><span class="line">    <span class="keyword">return</span> asr(l, mid, eps/<span class="number">2</span>, s1, cnt-<span class="number">1</span>) + asr(mid, r, eps/<span class="number">2</span>, s2, cnt-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">l, r, eps</span>)-&gt;<span class="built_in">float</span>:</span><br><span class="line">    <span class="keyword">return</span> asr(l, r, eps, simpson(l,r), <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">x = (<span class="built_in">float</span>)(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">format</span>(calc(<span class="number">0.0000000000001</span>, x, <span class="number">1e-8</span>),<span class="string">&#x27;.8f&#x27;</span>))</span><br></pre></td></tr></table></figure><p>字符串操作符：</p><ul><li><code>x + y</code>，连接两个字符串 x 和 y</li><li><code>n * x</code>或<code>x * n</code>，复制 n 次字符串 x</li><li><code>x in S</code>，如果 x 是 S 的子串，返回<code>True</code></li></ul><p><img src="https://bu.dusays.com/2023/03/23/641c60cd3198c.png" alt="34-25.png" title="字符串处理函数"></p><p>Python 字符串中每个字符都是 Unicode 编码字符。</p><p><img src="https://bu.dusays.com/2023/03/23/641c61aa723f4.png" alt="34-26.png" title="Unicode例子"></p><p>字符串处理方法：</p><ul><li>“方法”在编程中是一个专有名词</li><li>“方法”特指<code>&lt;a&gt;.&lt;b&gt;()</code>风格中的函数<code>&lt;b&gt;()</code></li><li>方法本身也是函数，但与<code>&lt;a&gt;</code>有关，<code>&lt;a&gt;.&lt;b&gt;()</code>风格使用</li><li>字符串或字符串变量是<code>&lt;a&gt;</code>，存在一些可用方法</li></ul><p><img src="https://bu.dusays.com/2023/03/23/641c6322b990e.png" alt="34-27.png"></p><p><img src="https://bu.dusays.com/2023/03/23/641c6322c0616.png" alt="34-28.png"></p><p>输入 3 个数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">eval</span>(<span class="built_in">input</span>())</span><br><span class="line">b = <span class="built_in">eval</span>(<span class="built_in">input</span>())</span><br><span class="line">C = <span class="built_in">eval</span>(<span class="built_in">input</span>())</span><br><span class="line">a,b,C = <span class="built_in">eval</span>(<span class="built_in">input</span>()) <span class="comment"># 输入：3,4,5</span></span><br><span class="line">a,b,C = <span class="built_in">map</span>(<span class="built_in">eval</span>, <span class="built_in">input</span>().split()) <span class="comment"># 输入：3 4 5</span></span><br></pre></td></tr></table></figure><p><code>map(func, *iterables)</code>：上网查。</p><p><img src="https://bu.dusays.com/2023/03/23/641c65ea5fd9a.png" alt="34-29.png"></p><p><code>format()</code>方法：更多用法请上网查。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;ldq&#x27;</span></span><br><span class="line">age = <span class="number">24</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我叫%s，今年%d岁&#x27;</span> % (name, age))</span><br><span class="line"><span class="comment"># 输出：我叫ldq，今年24岁</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我叫&#123;0&#125;，今年&#123;1&#125;岁&#x27;</span>.<span class="built_in">format</span>(name, age))</span><br><span class="line"><span class="comment"># 输出：我叫ldq，今年24岁</span></span><br></pre></td></tr></table></figure><h2 id="程序的控制结构"><a href="#程序的控制结构" class="headerlink" title="程序的控制结构"></a>程序的控制结构</h2><p>异常处理：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例1</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数：&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(num**<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入不是整数&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例2</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数：&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(num**<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span> NameError:  <span class="comment"># 标注异常类型后，仅响应此类异常</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入不是整数&quot;</span>)</span><br></pre></td></tr></table></figure><p>异常处理的高级使用：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># &lt;语句块1&gt;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="comment"># &lt;语句块2&gt;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># &lt;语句块3&gt;     # 不发生异常时会执行</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="comment"># &lt;语句块4&gt;     # 一定执行</span></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/29/6424312971850.png" alt="34-30.png" title="实例：计算 BMI"></p><p>循环结构：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello:&quot;</span>,i)</span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line">hello: <span class="number">1</span></span><br><span class="line">hello: <span class="number">3</span></span><br><span class="line">hello: <span class="number">5</span></span><br></pre></td></tr></table></figure><p>字符串遍历循环：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&quot;Python123&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(c, end=<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line">P,y,t,h,o,n,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,</span><br></pre></td></tr></table></figure><p>列表遍历循环：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> [<span class="number">123</span>, <span class="string">&quot;PY&quot;</span>, <span class="number">456</span>]:</span><br><span class="line">    <span class="built_in">print</span>(item, end=<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line"><span class="number">123</span>,PY,<span class="number">456</span>,</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/03/29/642434baa3f28.png" alt="34-31.png" title="文件遍历循环"></p><p><img src="https://bu.dusays.com/2023/03/29/64243601ae2cd.png" alt="34-32.png" title="循环与 else"></p><p>使用<code>random</code>库： <code>import random</code></p><p>基本随机数函数：<code>seed()</code>、<code>random()</code></p><p>扩展随机数函数：<code>randint()</code>、<code>getrandbits()</code>、<code>uniform()</code>、<code>randrange()</code>、<code>choice()</code>、<code>shuffle()</code></p><p><img src="https://bu.dusays.com/2023/03/29/64243a6c24b2b.png" alt="34-33.png"></p><p><img src="https://bu.dusays.com/2023/03/29/64243a6c24b6f.png" alt="34-34.png"></p><p><img src="https://bu.dusays.com/2023/03/29/64243a2b5bea7.png" alt="34-35.png"></p><p><img src="https://bu.dusays.com/2023/03/29/64243b250ffba.png" alt="34-36.png" title="蒙特卡罗计算 pi"></p><h2 id="函数和代码复用"><a href="#函数和代码复用" class="headerlink" title="函数和代码复用"></a>函数和代码复用</h2><p>可变参数传递：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fact</span>(<span class="params">n, *b</span>):</span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        s *= i</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> b:</span><br><span class="line">        s *= item</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure><p>函数调用时，参数可以按照位置或名称方式传递。（歪门邪道，少用）</p><p><img src="https://bu.dusays.com/2023/03/30/642557ee7c259.png" alt="34-37.png" title="多个返回值"></p><p><img src="https://bu.dusays.com/2023/03/30/642558d11ca32.png" alt="34-38.png" title="global 保留字"></p><p><img src="https://bu.dusays.com/2023/03/30/6425596a240c3.png" alt="34-39.png" title="未创建的组合数据类型的局部变量"></p><p><img src="https://bu.dusays.com/2023/03/30/64255a210481e.png" alt="34-40.png"></p><p><code>lambda</code>函数：</p><ul><li>一种匿名函数</li><li>使用<code>lambda</code>保留字定义，函数名是返回结果</li><li><code>lambda</code>函数用于定义简单的、能在一行内表示的函数</li><li>主要用作一些特定函数或方法的参数</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="keyword">lambda</span> x,y : x+y</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">10</span>,<span class="number">15</span>)</span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="keyword">lambda</span> : <span class="string">&quot;lambda函数&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(f())</span><br><span class="line"><span class="keyword">lambda</span>函数</span><br></pre></td></tr></table></figure><p>【实例】七段数码管绘制：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle, time</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawGap</span>():   <span class="comment">#绘制数码管间隔</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawLine</span>(<span class="params">draw</span>):   <span class="comment">#绘制单段数码管</span></span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawDigit</span>(<span class="params">digit</span>): <span class="comment">#根据数字绘制七段数码管</span></span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.penup() <span class="comment">#为绘制后续数字确定位置</span></span><br><span class="line">    turtle.fd(<span class="number">20</span>)  <span class="comment">#为绘制后续数字确定位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawDate</span>(<span class="params">date</span>):   <span class="comment">#data为日期，格式为 &#x27;%Y-%m=%d+&#x27; </span></span><br><span class="line">    turtle.pencolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> date:</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;年&#x27;</span>,font=(<span class="string">&quot;Arial&quot;</span>, <span class="number">18</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">&#x27;=&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;月&#x27;</span>,font=(<span class="string">&quot;Arial&quot;</span>, <span class="number">18</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;日&#x27;</span>,font=(<span class="string">&quot;Arial&quot;</span>, <span class="number">18</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            drawDigit(<span class="built_in">eval</span>(i)) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    turtle.speed(<span class="number">10</span>)</span><br><span class="line">    turtle.delay(<span class="number">0</span>)</span><br><span class="line">    turtle.setup(<span class="number">800</span>, <span class="number">350</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(-<span class="number">300</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    drawDate(time.strftime(<span class="string">&#x27;%Y-%m=%d+&#x27;</span>,time.gmtime()))</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line">main() </span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://bu.dusays.com/2023/03/30/64259516bf237.png" alt="34-41.png"></p><p>【实例】修正如下的绘制奥运五环的程序，将五环绘制部分代码改为用循环实现，提示（每个圆的坐标点、颜色可以选用组合数据类型保持）</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.speed(<span class="number">10</span>)</span><br><span class="line">turtle.delay(<span class="number">0</span>)</span><br><span class="line">turtle.width(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">turtle.color(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">120</span>, <span class="number">0</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">240</span>, <span class="number">0</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">60</span>, -<span class="number">50</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">180</span>, -<span class="number">50</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">40</span>, -<span class="number">100</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.write(<span class="string">&quot;Beijing 2022&quot;</span>, font=(<span class="string">&quot;微软雅⿊&quot;</span>, <span class="number">20</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p>【解答】这里写点字只是因为不想看起来不舒服。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.speed(<span class="number">10</span>)</span><br><span class="line">turtle.delay(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">rings = [&#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;position&#x27;</span>: (<span class="number">0</span>, <span class="number">0</span>)&#125;,</span><br><span class="line">         &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;position&#x27;</span>: (<span class="number">120</span>, <span class="number">0</span>)&#125;,</span><br><span class="line">         &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;position&#x27;</span>: (<span class="number">240</span>, <span class="number">0</span>)&#125;,   </span><br><span class="line">         &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;position&#x27;</span>: (<span class="number">60</span>, -<span class="number">50</span>)&#125;,</span><br><span class="line">         &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;position&#x27;</span>: (<span class="number">180</span>, -<span class="number">50</span>)&#125;]</span><br><span class="line"></span><br><span class="line">turtle.width(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ring <span class="keyword">in</span> rings:</span><br><span class="line">    turtle.color(ring[<span class="string">&#x27;color&#x27;</span>])</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(ring[<span class="string">&#x27;position&#x27;</span>])</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">40</span>, -<span class="number">100</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.write(<span class="string">&quot;Beijing 2022&quot;</span>, font=(<span class="string">&quot;微软雅⿊&quot;</span>, <span class="number">20</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/04/642c358ecfadd.png" alt="34-42.png" title="上面代码的运行结果"></p><p>【实例】修正绘制奥运五环的程序，将五环绘制部分代码改为用函数实现，提示（可以通过参数传每个圆的坐标点、颜色值）</p><p>【解答】没什么可分析的。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.speed(<span class="number">10</span>)</span><br><span class="line">turtle.delay(<span class="number">0</span>)</span><br><span class="line">turtle.width(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_circle</span>(<span class="params">x, y, color</span>):</span><br><span class="line">    turtle.color(color)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">draw_circle(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">draw_circle(<span class="number">120</span>, <span class="number">0</span>, <span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">draw_circle(<span class="number">240</span>, <span class="number">0</span>, <span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">draw_circle(<span class="number">60</span>, -<span class="number">50</span>, <span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">draw_circle(<span class="number">180</span>, -<span class="number">50</span>, <span class="string">&#x27;green&#x27;</span>)</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">40</span>, -<span class="number">100</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.write(<span class="string">&quot;Beijing 2022&quot;</span>, font=(<span class="string">&quot;微软雅⿊&quot;</span>, <span class="number">20</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><h2 id="组合数据类型"><a href="#组合数据类型" class="headerlink" title="组合数据类型"></a>组合数据类型</h2><p>集合类型的定义：</p><ul><li>与数学中集合的概念一致</li><li>集合元素不可更改，不能是可变数据类型</li><li>用<code>&#123;&#125;</code>表示，元素间用逗号分隔</li><li>建立集合类型用<code>&#123;&#125;</code>或<code>set()</code></li><li>建立空集合类型，必须用<code>set()</code></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>A = &#123;<span class="string">&quot;python&quot;</span>, <span class="number">123</span>, (<span class="string">&quot;python&quot;</span>,<span class="number">123</span>)&#125;  <span class="comment">#使用&#123;&#125;建立集合</span></span><br><span class="line">&#123;<span class="number">123</span>, <span class="string">&#x27;python&#x27;</span>, (<span class="string">&#x27;python&#x27;</span>, <span class="number">123</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>B = <span class="built_in">set</span>(<span class="string">&quot;pypy123&quot;</span>)         <span class="comment">#使用set()建立集合</span></span><br><span class="line">&#123;<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;y&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>C = &#123;<span class="string">&quot;python&quot;</span>, <span class="number">123</span>, <span class="string">&quot;python&quot;</span>,<span class="number">123</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;python&#x27;</span>, <span class="number">123</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/08/64316240ad465.png" alt="34-43.png" title="集合操作符"></p><p><img src="https://bu.dusays.com/2023/04/08/64316444c5ab4.png" alt="34-44.png" title="集合处理方法"></p><p>包含关系比较：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;p&quot;</span> <span class="keyword">in</span> &#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span> , <span class="number">123</span>&#125;</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span>&#125; &gt;= &#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span> , <span class="number">123</span>&#125;</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>数据去重，集合类型所有元素无重复：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;p&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="number">123</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="built_in">set</span>(ls)    <span class="comment"># 利用了集合无重复元素的特点</span></span><br><span class="line">&#123;<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="number">123</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt = <span class="built_in">list</span>(s)   <span class="comment"># 还可以将集合转换为列表</span></span><br><span class="line">[<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="number">123</span>]</span><br></pre></td></tr></table></figure><p>序列类型定义（序列是具有先后关系的一组元素<br>）：</p><ul><li>序列是一维元素向量，元素类型可以不同</li><li>类似数学元素序列： s0, s1, … , sn-1</li><li>元素间由序号引导，通过下标访问序列的特定元素</li></ul><p><strong>序列是一个基类类型。</strong> 序列类型 -&gt; 字符串类型、元组类型、列表类型。</p><p><img src="https://bu.dusays.com/2023/04/08/64316c066cd4c.png" alt="34-45.png"></p><p><img src="https://bu.dusays.com/2023/04/08/64316d6695050.png" alt="34-46.png" title="序列类型通用操作符"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 序列类型操作实例</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;python&quot;</span>, <span class="number">123</span>, <span class="string">&quot;.io&quot;</span>] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls[::-<span class="number">1</span>]</span><br><span class="line">[<span class="string">&#x27;.io&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;python&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&quot;python123.io&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s[::-<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;oi.321nohtyp&#x27;</span></span><br><span class="line">&gt;&gt;&gt;Print(ls)</span><br><span class="line">[<span class="string">&#x27;python’,123,&#x27;</span>.io’]</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;python&quot;</span>, <span class="number">123</span>, <span class="string">&quot;.io&quot;</span>] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(ls)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&quot;python123.io&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">max</span>(s)</span><br><span class="line"><span class="string">&#x27;y&#x27;</span></span><br></pre></td></tr></table></figure><p>元组类型定义（元组是序列类型的一种扩展，继承了序列类型的全部通用操作）：</p><ul><li>使用小括号<code>()</code>或<code>tuple()</code>创建，元素间用逗号分隔</li><li>可以使用或不使用小括号</li><li>一旦创建就不能被修改</li><li>没有特殊操作（增删改）</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>creature = <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="string">&quot;human&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>creature</span><br><span class="line">(<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;human&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>creature[::-<span class="number">1</span>]</span><br><span class="line">(<span class="string">&#x27;human&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>creature</span><br><span class="line">(<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;human&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>color = (<span class="number">0x001100</span>, <span class="string">&quot;blue&quot;</span>, creature)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>color[-<span class="number">1</span>][<span class="number">2</span>]</span><br><span class="line"><span class="string">&#x27;tiger&#x27;</span></span><br></pre></td></tr></table></figure><p>列表类型定义（列表是序列类型的一种扩展，十分常用）：</p><ul><li>列表是一种序列类型，创建后可以随意被修改</li><li>使用方括号<code>[]</code>或<code>list()</code>创建，元素间用逗号分隔</li><li>列表中各元素类型可以不同，无长度限制</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt = ls</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>] </span><br></pre></td></tr></table></figure><p>方括号<code>[]</code>真正创建一个列表，赋值仅传递引用。</p><p><img src="https://bu.dusays.com/2023/04/09/643233b43a725.png" alt="34-47.png" title="列表类型操作函数和方法"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls[<span class="number">1</span>:<span class="number">2</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> ls[::<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls*<span class="number">2</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls.append(<span class="number">1234</span>)</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>, <span class="number">1234</span>] </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls.insert(<span class="number">3</span>, <span class="string">&quot;human&quot;</span>)</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;human&#x27;</span>, <span class="number">1024</span>, <span class="number">1234</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls.reverse()</span><br><span class="line">[<span class="number">1234</span>, <span class="number">1024</span>, <span class="string">&#x27;human&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>]</span><br></pre></td></tr></table></figure><p>如果不希望数据被程序所改变，转换成元组类型:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt = <span class="built_in">tuple</span>(ls)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt</span><br><span class="line">(<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>)</span><br></pre></td></tr></table></figure><p>【实例】 基本统计值计算</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CalStatisticsV1.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getNum</span>():       <span class="comment">#获取用户不定长度的输入</span></span><br><span class="line">    nums = []</span><br><span class="line">    iNumStr = <span class="built_in">input</span>(<span class="string">&quot;请输入数字(回车退出): &quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> iNumStr != <span class="string">&quot;&quot;</span>:</span><br><span class="line">        nums.append(<span class="built_in">eval</span>(iNumStr))</span><br><span class="line">        iNumStr = <span class="built_in">input</span>(<span class="string">&quot;请输入数字(回车退出): &quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mean</span>(<span class="params">numbers</span>):  <span class="comment">#计算平均值</span></span><br><span class="line">    s = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> numbers:</span><br><span class="line">        s = s + num</span><br><span class="line">    <span class="keyword">return</span> s / <span class="built_in">len</span>(numbers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dev</span>(<span class="params">numbers, mean</span>):  <span class="comment">#计算标准差</span></span><br><span class="line">    sdev = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> numbers:</span><br><span class="line">        sdev = sdev + (num - mean)**<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>(sdev / (<span class="built_in">len</span>(numbers)-<span class="number">1</span>), <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">median</span>(<span class="params">numbers</span>):    <span class="comment">#计算中位数</span></span><br><span class="line">    numbers.sort()    <span class="comment"># sorted(numbers)</span></span><br><span class="line">    size = <span class="built_in">len</span>(numbers)</span><br><span class="line">    <span class="keyword">if</span> size % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        med = (numbers[size//<span class="number">2</span>-<span class="number">1</span>] + numbers[size//<span class="number">2</span>])/<span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        med = numbers[size//<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> med</span><br><span class="line"></span><br><span class="line">n =  getNum() </span><br><span class="line">m =  mean(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;平均值:&#123;&#125;,标准差:&#123;:.2&#125;,中位数:&#123;&#125;.&quot;</span>.<span class="built_in">format</span>(m, dev(n,m),median(n))) </span><br></pre></td></tr></table></figure><p>注意：在上面的代码中，两条排序语句的运行结果不一样。</p><p>这是因为：</p><ul><li><code>sorted()</code>是<code>Python</code>内置函数，它接受一个可迭代对象（如列表）作为参数，返回一个新的排好序的列表，原来的列表不会被修改。</li><li><code>list.sort()</code>是列表对象的方法，它对原列表进行排序，不返回新的列表，而是直接修改原来的列表。</li></ul><p>【作业】 代码补全 - 奥运五环</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawCircle</span>(<span class="params">x,y,color</span>):</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.color(color)</span><br><span class="line">    turtle.circle(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">turtle.width(<span class="number">10</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">##1</span></span><br><span class="line">drawCircle(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">drawCircle(<span class="number">120</span>,<span class="number">0</span>,<span class="string">&quot;black&quot;</span>)</span><br><span class="line">drawCircle(<span class="number">240</span>,<span class="number">0</span>,<span class="string">&quot;red&quot;</span>)</span><br><span class="line">drawCircle(<span class="number">60</span>,-<span class="number">50</span>,<span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">drawCircle(<span class="number">180</span>,-<span class="number">50</span>,<span class="string">&quot;green&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##2</span></span><br><span class="line"><span class="comment">##xs = [0, 120, 240, 60, 180]</span></span><br><span class="line"><span class="comment">##ys = [0, 0, 0, -50, -50]</span></span><br><span class="line"><span class="comment">##colors = [&#x27;blue&#x27;, &#x27;black&#x27;, &#x27;red&#x27;, &#x27;yellow&#x27;, &#x27;green&#x27;]</span></span><br><span class="line"><span class="comment">##for i in range(5):</span></span><br><span class="line"><span class="comment">##补全    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">##3</span></span><br><span class="line"><span class="comment">##coords = [(0,0),(120,0),(240,0),(60,-50),(180,-50)]</span></span><br><span class="line"><span class="comment">##colors = [&quot;blue&quot;,&quot;black&quot;,&quot;red&quot;,&quot;yellow&quot;,&quot;green&quot;]</span></span><br><span class="line"><span class="comment">##for i in range(5):</span></span><br><span class="line"><span class="comment">##补全    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">##4</span></span><br><span class="line"><span class="comment">##circles = [</span></span><br><span class="line"><span class="comment">##    (0, 0, &quot;blue&quot;),</span></span><br><span class="line"><span class="comment">##    (120, 0, &quot;black&quot;),</span></span><br><span class="line"><span class="comment">##    (240, 0, &quot;red&quot;),</span></span><br><span class="line"><span class="comment">##    (60, -50, &quot;yellow&quot;),</span></span><br><span class="line"><span class="comment">##    (180, -50, &quot;green&quot;)</span></span><br><span class="line"><span class="comment">##]</span></span><br><span class="line"><span class="comment">##for circle in circles:</span></span><br><span class="line"><span class="comment">##补全</span></span><br><span class="line">    </span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">40</span>, -<span class="number">100</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.color(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.write(<span class="string">&quot;Beijing 2022&quot;</span>, font=(<span class="string">&quot;微软雅⿊&quot;</span>, <span class="number">20</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line">turtle.hideturtle()</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p>2中补全的代码为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drawCircle(xs[i], ys[i], colors[i])</span><br></pre></td></tr></table></figure><p>3中补全的代码为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drawCircle(coords[i][<span class="number">0</span>], coords[i][<span class="number">1</span>], colors[i])</span><br></pre></td></tr></table></figure><p>4中补全的代码为：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drawCircle(circle[<span class="number">0</span>], circle[<span class="number">1</span>], circle[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>以上代码均通过测试。</p><p>字典类型定义（字典类型是“映射”的体现）：</p><ul><li>键值对：键是数据索引的扩展</li><li>字典是键值对的集合，键值对之间无序</li><li>采用大括号<code>&#123;&#125;</code>和<code>dict()</code>创建，键值对用冒号<code>:</code>表示</li><li><code>&#123;&lt;键1&gt;:&lt;值1&gt;, &lt;键2&gt;:&lt;值2&gt;, … , &lt;键n&gt;:&lt;值n&gt;&#125;</code></li></ul><p>在字典变量中，通过键获得值：</p><ul><li><code>&lt;字典变量&gt; = &#123;&lt;键1&gt;:&lt;值1&gt;, … , &lt;键n&gt;:&lt;值n&gt;&#125;</code></li><li><code>&lt;值&gt; = &lt;字典变量&gt;[&lt;键&gt;]</code></li><li><code>&lt;字典变量&gt;[&lt;键&gt;] = &lt;值&gt;</code></li><li><code>[]</code>用来向字典变量中索引或增加元素</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;中国&quot;</span>:<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;美国&quot;</span>:<span class="string">&quot;华盛顿&quot;</span>, <span class="string">&quot;法国&quot;</span>:<span class="string">&quot;巴黎&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d </span><br><span class="line">&#123;<span class="string">&#x27;中国&#x27;</span>: <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>: <span class="string">&#x27;华盛顿&#x27;</span>, <span class="string">&#x27;法国&#x27;</span>: <span class="string">&#x27;巴黎&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&quot;中国&quot;</span>]</span><br><span class="line"><span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>de = &#123;&#125; ; <span class="built_in">type</span>(de)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p><code>type(x)</code>：返回变量x的类型。</p><p><img src="https://bu.dusays.com/2023/04/10/6433fbf041ce4.png" alt="34-48.png" title="字典类型操作函数和方法"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;中国&quot;</span>:<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;美国&quot;</span>:<span class="string">&quot;华盛顿&quot;</span>, <span class="string">&quot;法国&quot;</span>:<span class="string">&quot;巴黎&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;中国&quot;</span> <span class="keyword">in</span> d </span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.keys()</span><br><span class="line">dict_keys([<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;法国&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.values()</span><br><span class="line">dict_values([<span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;华盛顿&#x27;</span>, <span class="string">&#x27;巴黎&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;中国&quot;</span>:<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;美国&quot;</span>:<span class="string">&quot;华盛顿&quot;</span>, <span class="string">&quot;法国&quot;</span>:<span class="string">&quot;巴黎&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&quot;中国&quot;</span>,<span class="string">&quot;伊斯兰堡&quot;</span>)</span><br><span class="line"><span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&quot;巴基斯坦&quot;</span>,<span class="string">&quot;伊斯兰堡&quot;</span>)</span><br><span class="line"><span class="string">&#x27;伊斯兰堡&#x27;</span> </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.popitem()</span><br><span class="line">(<span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;华盛顿&#x27;</span>)</span><br></pre></td></tr></table></figure><p>字典类型应用场景，元素遍历：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> d.items():</span><br><span class="line"><span class="keyword">for</span> (k,v) <span class="keyword">in</span> d.items():</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> d.keys():</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> d.values():</span><br></pre></td></tr></table></figure><p>【作业】 课程成绩统计</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">score_type_in</span>():    <span class="comment"># 获取用户不定长度的输入</span></span><br><span class="line">    nums = []</span><br><span class="line">    iNumStr = <span class="built_in">input</span>(<span class="string">&quot;请输入0-100的整数(回车退出): &quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> iNumStr != <span class="string">&quot;&quot;</span>:</span><br><span class="line">        nums.append(<span class="built_in">eval</span>(iNumStr))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(<span class="built_in">isinstance</span>(nums[-<span class="number">1</span>],<span class="built_in">int</span>)) <span class="keyword">or</span> nums[-<span class="number">1</span>]&lt;<span class="number">0</span> <span class="keyword">or</span> nums[-<span class="number">1</span>]&gt;<span class="number">100</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入非法&quot;</span>)</span><br><span class="line">            <span class="keyword">del</span> nums[-<span class="number">1</span>]</span><br><span class="line">        iNumStr = <span class="built_in">input</span>(<span class="string">&quot;请输入0-100的整数(回车退出): &quot;</span>)</span><br><span class="line">    nums.sort()</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mean</span>(<span class="params">numbers</span>):  <span class="comment"># 计算平均值</span></span><br><span class="line">    s = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> numbers:</span><br><span class="line">        s = s + num</span><br><span class="line">    <span class="keyword">return</span> s / <span class="built_in">len</span>(numbers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">abcde_label</span>(<span class="params">numbers</span>):  <span class="comment"># 打等级</span></span><br><span class="line">    label_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> score <span class="keyword">in</span> numbers:</span><br><span class="line">        <span class="keyword">if</span> score &gt;= <span class="number">90</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;优&quot;</span>] = label_dict.get(<span class="string">&quot;优&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> score &gt;= <span class="number">80</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;良&quot;</span>] = label_dict.get(<span class="string">&quot;良&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> score &gt;= <span class="number">70</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;中&quot;</span>] = label_dict.get(<span class="string">&quot;中&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> score &gt;= <span class="number">60</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;及格&quot;</span>] = label_dict.get(<span class="string">&quot;及格&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;不及格&quot;</span>] = label_dict.get(<span class="string">&quot;不及格&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> label_dict</span><br><span class="line"></span><br><span class="line">real_score = score_type_in()</span><br><span class="line"><span class="built_in">print</span>(real_score)</span><br><span class="line"><span class="built_in">print</span>(mean(real_score))</span><br><span class="line"><span class="built_in">print</span>(abcde_label(real_score))</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/14/64396a781777b.png" alt="34-48dot5.png" title="上面代码测试结果"></p><h2 id="jieba-库的使用"><a href="#jieba-库的使用" class="headerlink" title="jieba 库的使用"></a>jieba 库的使用</h2><p>安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jieba</span><br></pre></td></tr></table></figure><p>jieba 分词的三种模式：</p><ul><li>精确模式：把文本精确的切分开，不存在冗余单词</li><li>全模式：把文本中所有可能的词语都扫描出来，有冗余</li><li>搜索引擎模式：在精确模式基础上，对长词再次切分</li></ul><p><img src="https://bu.dusays.com/2023/04/10/64341085a6a39.png" alt="34-49.png"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;/&quot;</span>.join(jieba.lcut(<span class="string">&quot;中国是一个伟大的国家&quot;</span>)))</span><br></pre></td></tr></table></figure><p>命令、打印信息及输出结果：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\arrogance&gt; python <span class="literal">-u</span> <span class="string">&quot;d:\mypycode\tmp.py&quot;</span></span><br><span class="line">Building prefix dict from the default dictionary ...</span><br><span class="line">Loading model from cache C:\Users\ARROGA~<span class="number">1</span>\AppData\Local\Temp\jieba.cache</span><br><span class="line">Loading model cost <span class="number">0.618</span> seconds.</span><br><span class="line">Prefix dict has been built successfully.</span><br><span class="line">中国/是/一个/伟大/的/国家</span><br></pre></td></tr></table></figure><p>注意：如果找不到 jieba ，可能是路径的问题。在命令行中修改路径，然后运行即可。</p><p>【实例】 文本词频统计</p><p>资料：</p><ul><li>英文文本：Hamlet             分析词频<br><a href="https://python123.io/resources/pye/hamlet.txt">https://python123.io/resources/pye/hamlet.txt</a></li><li>中文文本：《三国演义》    分析人物<br><a href="https://python123.io/resources/pye/threekingdoms.txt">https://python123.io/resources/pye/threekingdoms.txt</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CalHamletV1.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getText</span>():    <span class="comment"># 文本去噪及归一化</span></span><br><span class="line">    txt = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\hamletcnt\hamlet.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line">    txt = txt.lower()</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">&#x27;!&quot;#$%&amp;()*+,-./:;&lt;=&gt;?@[\\]^_‘&#123;|&#125;~&#x27;</span>:</span><br><span class="line">        txt = txt.replace(ch, <span class="string">&quot; &quot;</span>) </span><br><span class="line">    <span class="keyword">return</span> txt</span><br><span class="line"></span><br><span class="line">hamletTxt = getText()</span><br><span class="line">words  = hamletTxt.split()</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:            </span><br><span class="line">    counts[word] = counts.get(word,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>) </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">the        1138</span><br><span class="line">and         965</span><br><span class="line">to          754</span><br><span class="line">of          669</span><br><span class="line">you         550</span><br><span class="line">i           542</span><br><span class="line">a           542</span><br><span class="line">my          514</span><br><span class="line">hamlet      462</span><br><span class="line">in          436</span><br></pre></td></tr></table></figure><p>代码解释：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>ChatGPT :</p><blockquote><p>这行Python代码使用了列表对象的sort()方法，根据列表中每个元素的第二个值（也就是下标为1的元素）进行降序排序。<br>lambda表达式创建了一个匿名函数，它取一个参数x并返回x[1]，也就是列表中每个元素的第二个值。<br>reverse=True参数指定了要按降序排序，也就是从大到小排序。如果没有指定该参数，sort()方法默认使用升序排序，也就是从小到大排序。<br>综上所述，这行代码的作用是对列表对象items按照其元素的第二个值进行降序排序。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CalThreeKingdomsV1.py</span></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">txt = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\\threekingdomscnt\\threekingdoms.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>).read()</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:            </span><br><span class="line">        counts[word] = counts.get(word,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>) </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">曹操          953</span><br><span class="line">孔明          836</span><br><span class="line">将军          772</span><br><span class="line">却说          656</span><br><span class="line">玄德          585</span><br><span class="line">关公          510</span><br><span class="line">丞相          491</span><br><span class="line">二人          469</span><br><span class="line">不可          440</span><br><span class="line">荆州          425</span><br><span class="line">玄德曰         390</span><br><span class="line">孔明曰         390</span><br><span class="line">不能          384</span><br><span class="line">如此          378</span><br><span class="line">张飞          358</span><br></pre></td></tr></table></figure><p>以上只是词频统计，并不是人物出场统计，需要进一步优化：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CalThreeKingdomsV2.py</span></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">txt = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\\threekingdomscnt\\threekingdoms.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>).read()</span><br><span class="line">excludes = &#123;<span class="string">&quot;将军&quot;</span>,<span class="string">&quot;却说&quot;</span>,<span class="string">&quot;荆州&quot;</span>,<span class="string">&quot;二人&quot;</span>,<span class="string">&quot;不可&quot;</span>,<span class="string">&quot;不能&quot;</span>,<span class="string">&quot;如此&quot;</span>&#125;</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;诸葛亮&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;孔明曰&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;孔明&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;关公&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;云长&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;关羽&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;玄德&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;玄德曰&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;刘备&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;孟德&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;丞相&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;曹操&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rword = word</span><br><span class="line">    counts[rword] = counts.get(rword,<span class="number">0</span>) + <span class="number">1</span> </span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> excludes:</span><br><span class="line">    <span class="keyword">del</span> counts[word]</span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>) </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">曹操         1451</span><br><span class="line">孔明         1383</span><br><span class="line">刘备         1252</span><br><span class="line">关羽          784</span><br><span class="line">张飞          358</span><br><span class="line">商议          344</span><br><span class="line">如何          338</span><br><span class="line">主公          331</span><br><span class="line">军士          317</span><br><span class="line">吕布          300</span><br></pre></td></tr></table></figure><h2 id="文件和数据格式化"><a href="#文件和数据格式化" class="headerlink" title="文件和数据格式化"></a>文件和数据格式化</h2><p>文本文件（文件是数据的抽象和集合）：</p><ul><li>由单一特定编码组成的文件，如 UTF-8 编码</li><li>由于存在编码，也被看成是存储着的长字符串</li><li>适用于例如：<code>.txt</code>文件、<code>.py</code>文件等</li></ul><p>二进制文件：</p><ul><li>直接由比特0和1组成，没有统一字符编码</li><li>一般存在二进制0和1的组织结构，即文件格式</li><li>适用于例如：<code>.png</code>文件、<code>.avi</code>文件等</li></ul><p>文本形式打开文件：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># f.txt文件保存:  &quot;中国是个伟大的国家!&quot;</span></span><br><span class="line">tf = <span class="built_in">open</span>(<span class="string">&quot;f.txt&quot;</span>, <span class="string">&quot;rt&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(tf.readline())</span><br><span class="line">tf.close()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span><br><span class="line">中国是个伟大的国家!</span><br></pre></td></tr></table></figure><p>二进制形式打开文件：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># f.txt文件保存:  &quot;中国是个伟大的国家!&quot;</span></span><br><span class="line">bf = <span class="built_in">open</span>(<span class="string">&quot;f.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(bf.readline())</span><br><span class="line">bf.close()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span><br><span class="line">b&#x27;\xd6\xd0\xb9\xfa\xca\xc7\xb8\xf6\xce\xb0\xb4\xf3\xb5\xc4\xb9\xfa\xbc\xd2\xa3\xa1&#x27;</span><br></pre></td></tr></table></figure><p>文件的打开：</p><p><img src="https://bu.dusays.com/2023/04/18/643ea0577ddad.png" alt="34-50.png"></p><p><img src="https://bu.dusays.com/2023/04/18/643ea0e849f50.png" alt="34-51.png" title="文件的打开模式"></p><p>文件的关闭：</p><p><img src="https://bu.dusays.com/2023/04/18/643ea1ca98324.png" alt="34-52.png"></p><p>文件内容的读取：</p><p><img src="https://bu.dusays.com/2023/04/18/643ea2a92777d.png" alt="34-53.png"></p><p>文件的全文本操作：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历全文本：方法一</span></span><br><span class="line"><span class="comment"># 一次读出，统一处理</span></span><br><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">file = <span class="built_in">open</span>(fname,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">txt = file.read()</span><br><span class="line"><span class="comment"># 对全文txt字符串进行处理</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历全文本：方法二</span></span><br><span class="line"><span class="comment"># 按数量读出，逐步处理</span></span><br><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">file = <span class="built_in">open</span>(fname,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">txt = file.read(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">while</span> txt != <span class="string">&quot;&quot;</span>:</span><br><span class="line">    <span class="comment">#对txt（长度为size的字符串）进行处理</span></span><br><span class="line">    txt = file.read(<span class="number">2</span>)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>文件的逐行操作：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逐行遍历文件：方法一</span></span><br><span class="line"><span class="comment"># 分行读出，分行处理</span></span><br><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">file = <span class="built_in">open</span>(fname,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">line = file.readline().strip()</span><br><span class="line"><span class="keyword">while</span> (line):</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">    line = file.readline().strip()</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逐行遍历文件：方法二</span></span><br><span class="line"><span class="comment"># 一次读出，分行处理</span></span><br><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">file = <span class="built_in">open</span>(fname,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">lines = file.readlines()       <span class="comment">#list</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逐行遍历文件：方法三</span></span><br><span class="line"><span class="comment"># 分行读入，逐行处理</span></span><br><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">fo = <span class="built_in">open</span>(fname,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><p>数据的文件写入：</p><p><img src="https://bu.dusays.com/2023/04/18/643ea7fa845f3.png" alt="34-54.png"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fo = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>,<span class="string">&quot;w+&quot;</span>)</span><br><span class="line">ls = [<span class="string">&quot;中国&quot;</span>, <span class="string">&quot;法国&quot;</span>, <span class="string">&quot;美国&quot;</span>]</span><br><span class="line">fo.writelines(ls)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">fo.close()</span><br><span class="line"><span class="comment"># 该程序没有任何输出</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fo = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>,<span class="string">&quot;w+&quot;</span>)</span><br><span class="line">ls = [<span class="string">&quot;中国&quot;</span>, <span class="string">&quot;法国&quot;</span>, <span class="string">&quot;美国&quot;</span>]</span><br><span class="line">fo.writelines(ls)</span><br><span class="line">fo.seek(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><p>上面代码的输出结果：（打印信息和文件中内容一样，都没有换行）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">中国法国美国</span><br></pre></td></tr></table></figure><p>【作业】 课程成绩统计2（从文本文件读入）</p><p>数据文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">23.5</span><br><span class="line">23</span><br><span class="line">432</span><br><span class="line">23</span><br><span class="line">45</span><br><span class="line">65</span><br><span class="line">78</span><br><span class="line">96</span><br><span class="line">100</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">-1</span><br><span class="line">23</span><br><span class="line">2</span><br><span class="line">87</span><br><span class="line">q</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scoresFromFile</span>():</span><br><span class="line">    nums = []</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\作业-课程成绩统计2\\thedata.txt&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line">        line = line.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> line == <span class="string">&quot;q&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> nums</span><br><span class="line">        nums.append(<span class="built_in">eval</span>(line))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(<span class="built_in">isinstance</span>(nums[-<span class="number">1</span>], <span class="built_in">int</span>)) <span class="keyword">or</span> nums[-<span class="number">1</span>]&lt;<span class="number">0</span> <span class="keyword">or</span> nums[-<span class="number">1</span>]&gt;<span class="number">100</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;第&#123;&#125;行数据非法，将被略去&quot;</span>.<span class="built_in">format</span>(cnt))</span><br><span class="line">            <span class="keyword">del</span> nums[-<span class="number">1</span>]</span><br><span class="line">    nums.sort()</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mean</span>(<span class="params">numbers</span>):  <span class="comment"># 计算平均值</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> numbers:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    s = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> numbers:</span><br><span class="line">        s = s + num</span><br><span class="line">    <span class="keyword">return</span> s / <span class="built_in">len</span>(numbers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">abcde_label</span>(<span class="params">numbers</span>):  <span class="comment"># 打等级</span></span><br><span class="line">    label_dict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> score <span class="keyword">in</span> numbers:</span><br><span class="line">        <span class="keyword">if</span> score &gt;= <span class="number">90</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;优&quot;</span>] = label_dict.get(<span class="string">&quot;优&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> score &gt;= <span class="number">80</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;良&quot;</span>] = label_dict.get(<span class="string">&quot;良&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> score &gt;= <span class="number">70</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;中&quot;</span>] = label_dict.get(<span class="string">&quot;中&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> score &gt;= <span class="number">60</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;及格&quot;</span>] = label_dict.get(<span class="string">&quot;及格&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            label_dict[<span class="string">&quot;不及格&quot;</span>] = label_dict.get(<span class="string">&quot;不及格&quot;</span>,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> label_dict</span><br><span class="line"></span><br><span class="line">real_score = scoresFromFile()</span><br><span class="line"><span class="built_in">print</span>(real_score)</span><br><span class="line"><span class="built_in">print</span>(mean(real_score))</span><br><span class="line"><span class="built_in">print</span>(abcde_label(real_score))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第1行数据非法，将被略去</span><br><span class="line">第3行数据非法，将被略去</span><br><span class="line">第12行数据非法，将被略去</span><br><span class="line">[23, 23, 45, 65, 78, 96, 100, 1, 0, 23, 2, 87]</span><br><span class="line">45.25</span><br><span class="line">&#123;&#x27;不及格&#x27;: 7, &#x27;及格&#x27;: 1, &#x27;中&#x27;: 1, &#x27;优&#x27;: 2, &#x27;良&#x27;: 1&#125;</span><br></pre></td></tr></table></figure><p>【实例】 自动轨迹绘制</p><p>需求：根据脚本来绘制图形。数据给出如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">300,0,144,1,0,0</span><br><span class="line">300,0,144,0,1,0</span><br><span class="line">300,0,144,0,0,1</span><br><span class="line">300,0,144,1,1,0</span><br><span class="line">300,0,108,0,1,1</span><br><span class="line">184,0,72,1,0,1</span><br><span class="line">184,0,72,0,0,0</span><br><span class="line">184,0,72,0,0,0</span><br><span class="line">184,0,72,0,0,0</span><br><span class="line">184,1,72,1,0,1</span><br><span class="line">184,1,72,0,0,0</span><br><span class="line">184,1,72,0,0,0</span><br><span class="line">184,1,72,0,0,0</span><br><span class="line">184,1,72,0,0,0</span><br><span class="line">184,1,720,0,0,0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/18/643eaf7da3cb0.png" alt="34-55" title="预期结果"></p><p><img src="https://bu.dusays.com/2023/04/18/643eb1d51ff35.png" alt="34-56.png" title="数据接口定义"></p><p>下面给出代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#AutoTraceDraw.py</span></span><br><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.title(<span class="string">&#x27;自动轨迹绘制&#x27;</span>)</span><br><span class="line">t.setup(<span class="number">800</span>, <span class="number">600</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">t.pensize(<span class="number">5</span>)</span><br><span class="line"><span class="comment">#数据读取</span></span><br><span class="line">datals = []</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\AutoTraceDrawData.txt&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    datals.append(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">eval</span>, line.split(<span class="string">&quot;,&quot;</span>))))</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#自动绘制</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(datals)):</span><br><span class="line">    t.pencolor(datals[i][<span class="number">3</span>],datals[i][<span class="number">4</span>],datals[i][<span class="number">5</span>])</span><br><span class="line">    t.fd(datals[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> datals[i][<span class="number">1</span>]:</span><br><span class="line">        t.right(datals[i][<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t.left(datals[i][<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">t.done()</span><br></pre></td></tr></table></figure><p>第 11、12 行的代码解释（ChatGPT）：</p><blockquote><p>这两行代码的作用是读取文件中的每一行数据，将其中的换行符（\n）替换为空字符串（””），然后将字符串按照逗号（,）分隔，将每个子字符串转换为相应的数据类型（比如整数、浮点数等），最后将转换后的数据存储到一个列表（datals）中。<br>具体来说，第一行代码使用<code>replace()</code>方法将字符串中的 \n 替换为空字符串 “”，这是因为在文件中每行数据的末尾通常会包含一个换行符。第二行代码使用<code>split()</code>方法将字符串按照逗号分隔，得到一个子字符串列表。然后，<code>map()</code>函数将列表中的每个子字符串转换为相应的数据类型，比如使用<code>eval()</code>函数将字符串转换为数值类型。最后，<code>list()</code>函数将转换后的数据列表转换为一个普通列表，并将其添加到 datals 列表中。</p></blockquote><p><code>filter(function，iterable)</code>：过滤，根据指定的函数对指定的可迭代对象进行过滤。</p><ul><li>参数：函数，可迭代对象<ul><li>对 iterable 中的每个元素判断是否符合特定条件，保留结果为真的元素，舍弃结果为假的元素</li><li>None：不调用任何函数，只对可迭代对象中的元素本身判断真假</li></ul></li><li>函数值：一个迭代器<ul><li>如果要转换为列表，可以使用<code>list()</code>来转换</li></ul></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;gradesintlist =[<span class="number">78</span>, <span class="number">98</span>, <span class="number">90</span>, <span class="number">87</span>]</span><br><span class="line">&gt;&gt;&gt;result=</span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:x&gt;=<span class="number">80</span>,gradesintlist))</span><br><span class="line">[<span class="number">98</span>,<span class="number">90</span>,<span class="number">87</span>]</span><br></pre></td></tr></table></figure><p>高维数据：仅利用最基本的二元关系展示数据间的复杂结构。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;firstName&quot;</span> : <span class="string">&quot;Tian&quot;</span> ,</span><br><span class="line">   <span class="string">&quot;lastName&quot;</span>  : <span class="string">&quot;Song&quot;</span> ,</span><br><span class="line">   <span class="string">&quot;address&quot;</span>   : &#123;</span><br><span class="line">                   <span class="string">&quot;streetAddr&quot;</span> : <span class="string">&quot;中关村南大街5号&quot;</span> ,</span><br><span class="line">                   <span class="string">&quot;city&quot;</span>       : <span class="string">&quot;北京市&quot;</span> ,</span><br><span class="line">                   <span class="string">&quot;zipcode&quot;</span>    : <span class="string">&quot;100081&quot;</span> </span><br><span class="line">                 &#125; ,</span><br><span class="line">   <span class="string">&quot;professional&quot;</span> : [<span class="string">&quot;Computer Networking&quot;</span> , <span class="string">&quot;Security&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从空格分隔的文件中读入数据：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需读入的数据为：中国 美国 日本 德国 法国 英国 意大利</span></span><br><span class="line">txt = <span class="built_in">open</span>(fname).read()</span><br><span class="line">ls = txt.split()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls</span><br><span class="line">[<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;日本&#x27;</span>, <span class="string">&#x27;德国&#x27;</span>, <span class="string">&#x27;法国&#x27;</span>, <span class="string">&#x27;英国&#x27;</span>, <span class="string">&#x27;意大利&#x27;</span>]</span><br></pre></td></tr></table></figure><p>从特殊符号$分隔的文件中读入数据：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需读入的数据为：中国$美国$日本$德国$法国$英国$意大利</span></span><br><span class="line">txt = <span class="built_in">open</span>(fname).read()</span><br><span class="line">ls = txt.split(<span class="string">&quot;$&quot;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls</span><br><span class="line">[<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;日本&#x27;</span>, <span class="string">&#x27;德国&#x27;</span>, <span class="string">&#x27;法国&#x27;</span>, <span class="string">&#x27;英国&#x27;</span>, <span class="string">&#x27;意大利&#x27;</span>]</span><br></pre></td></tr></table></figure><p>采用空格分隔方式将数据写入文件：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;日本&#x27;</span>]</span><br><span class="line">f = <span class="built_in">open</span>(fname, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27; &#x27;</span>.join(ls))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>采用特殊分隔方式将数据写入文件：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;日本&#x27;</span>]</span><br><span class="line">f = <span class="built_in">open</span>(fname, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27;$&#x27;</span>.join(ls))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>二维数据的表示（使用列表类型）：</p><ul><li>使用两层for循环遍历每个元素</li><li>外层列表中每个元素可以对应一行，也可以对应一列</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[  [<span class="number">3.1398</span>, <span class="number">3.1349</span>, <span class="number">3.1376</span>], </span><br><span class="line">   [<span class="number">3.1413</span>, <span class="number">3.1404</span>, <span class="number">3.1401</span>]  ]</span><br></pre></td></tr></table></figure><p>CSV数据存储格式（CSV：Comma-Separated Values）：</p><ul><li>国际通用的一二维数据存储格式，一般.csv扩展名</li><li>每行一个一维数据，采用逗号分隔，<strong>无空行</strong></li><li>Excel和一般编辑软件都可以读入或另存为csv文件</li><li>如果某个元素缺失，逗号仍要保留</li><li>二维数据的表头可以作为数据存储，也可以另行存储</li><li>逗号为英文半角逗号，<strong>逗号与数据之间无额外空格</strong></li></ul><p><img src="https://bu.dusays.com/2023/04/20/6440ee6ea347c.png" alt="34-57.png"></p><p>二维数据的存储：</p><ul><li>按行存或者按列存都可以，具体由程序决定</li><li>一般索引习惯：<code>ls[row][column]</code>，先行后列</li><li>根据一般习惯，外层列表每个元素是一行，按行存</li></ul><p>从CSV格式的文件中读入数据：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fo = <span class="built_in">open</span>(fname)</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    ls.append(line.split(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><p>将数据写入CSV格式的文件：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls = [[], [], []]    <span class="comment"># 二维列表</span></span><br><span class="line">f = <span class="built_in">open</span>(fname, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> ls:</span><br><span class="line">    f.write(<span class="string">&#x27;,&#x27;</span>.join(item) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>二维数据的逐一处理（采用二层循环）：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>], [<span class="number">5</span>,<span class="number">6</span>]] <span class="comment"># 二维列表</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ls:</span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> row:</span><br><span class="line">         <span class="built_in">print</span>(column)</span><br></pre></td></tr></table></figure><h2 id="wordcloud、imageio及其他"><a href="#wordcloud、imageio及其他" class="headerlink" title="wordcloud、imageio及其他"></a>wordcloud、imageio及其他</h2><p>安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wordcloud</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/20/644124b932fd5.png" alt="34-58.png" title="wordcloud库常规方法"></p><p>文本转为词云的过程：</p><ol><li>分隔: 以空格分隔单词</li><li>统计: 单词出现次数并过滤</li><li>字体: 根据统计配置字号</li><li>布局: 颜色环境尺寸</li></ol><p><img src="https://bu.dusays.com/2023/04/20/6441281f7f3b5.png" alt="34-59.png" title="配置对象参数"></p><p>英文例子：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">txt = <span class="string">&quot;life is short, you need python&quot;</span></span><br><span class="line">w = wordcloud.WordCloud(background_color = <span class="string">&quot;white&quot;</span>)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">&quot;D:\mypycode\mywordcloud\\test1img.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://bu.dusays.com/2023/04/20/64412cc32f2eb.png" alt="34-60"></p><p>中文例子：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba </span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">txt = <span class="string">&quot;程序设计语言是计算机能够理解和\</span></span><br><span class="line"><span class="string">识别用户操作意图的一种交互体系，它按照\</span></span><br><span class="line"><span class="string">特定规则组织计算机指令，使计算机能够自\</span></span><br><span class="line"><span class="string">动进行各种运算处理。&quot;</span></span><br><span class="line">w = wordcloud.WordCloud( width=<span class="number">1000</span>,\</span><br><span class="line">    font_path=<span class="string">&quot;msyh.ttc&quot;</span>,height=<span class="number">700</span>)</span><br><span class="line">w.generate(<span class="string">&quot; &quot;</span>.join(jieba.lcut(txt)))</span><br><span class="line">w.to_file(<span class="string">&quot;D:\mypycode\mywordcloud\pywcloud.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://bu.dusays.com/2023/04/20/64412e98ebea2.png" alt="34-61.png"></p><p>【实例】 有形状的词云</p><p>代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread</span><br><span class="line">mk = imread(<span class="string">&quot;D:\mypycode\mywordcloud\guoba.png&quot;</span>)</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:\mypycode\\threekingdomscnt\\threekingdoms.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">t = f.read()</span><br><span class="line">f.close()</span><br><span class="line">ls = jieba.lcut(t)</span><br><span class="line">txt = <span class="string">&quot; &quot;</span>.join(ls)</span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">&#x27;!&quot;#——$%&amp;（。），()*+,-./:;；&lt;：《》、=&gt;?？@[\\]^_‘&#123;|&#125;~！“”&#x27;</span>:</span><br><span class="line">    txt = txt.replace(ch, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">w = wordcloud.WordCloud(font_path=<span class="string">&quot;msyh.ttc&quot;</span>, mask=mk, width=<span class="number">1000</span>, height=<span class="number">700</span>, background_color=<span class="string">&quot;white&quot;</span>)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">&quot;D:\mypycode\mywordcloud\\test3img.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果（<a href="https://loveofpeach.github.io/posts/47c25c56.html">这个图形是我之前用 Python 代码生成的</a>）：</p><p><img src="https://bu.dusays.com/2023/04/20/644144525c992.png" alt="34-62.png"></p><p>在上面的例子中，用到了<code>imageio</code>。下面简单介绍之。</p><p>安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install imageio</span><br></pre></td></tr></table></figure><p>官方文档：<a href="https://imageio.readthedocs.io/en/stable/examples.html">https://imageio.readthedocs.io/en/stable/examples.html</a></p><p>图片的保存：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread,imsave</span><br><span class="line"></span><br><span class="line">im = imread(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine.png&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(im.shape)</span><br><span class="line">imsave(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine_copy.png&#x27;</span>,im)</span><br></pre></td></tr></table></figure><p>输出结果1（打印信息，在terminal中显示。warning已略去）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(1910, 987, 4)</span><br></pre></td></tr></table></figure><p>输出结果2（在对应目录下可以找到 Lumine_copy.png）：</p><p><img src="https://bu.dusays.com/2023/04/20/64414dfe3c9e2.png" alt="34-63.png" title="Lumine_copy.png"></p><p><code>shape</code>里的1910,987，指的是图片的像素，高度是1910像素，宽度是987像素。</p><p><code>shape</code>里还剩下一个4，指的是颜色通道。</p><p>png 图片比 jpg 多了一个 Alpha 通道， 一个 RGB 颜色模型的真彩图形，用由红、绿、蓝三个色彩信息通道合成的，每个通道用了8位色彩深度，共计24位，包含了所有彩色信息。为实现图形的透明效果，png 图片采取在图形文件的处理与存储中附加上另一个8位信息的方法，这个附加的代表图形中各个素点透明度的通道信息就被叫做 Alpha 通道。</p><p>这里的<code>im</code>是<code>numpy.ndarray</code>，即上面的代码，我们使用 imageio 把一个图片转换成一个多维数组。把一张图片，转换为了数字格式。</p><p>以下只是我个人的理解，好像有那么一点道理，反正能说服我自己。不保证正确（不如说如果正确那还真是巧了）：</p><p><img src="https://bu.dusays.com/2023/04/21/64424e8256524.png" alt="34-63dot5.png"></p><p>图片的修改：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread,imsave,imwrite</span><br><span class="line"></span><br><span class="line">im = imread(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">im_r = im.copy()</span><br><span class="line">im_g = im.copy()</span><br><span class="line">im_b = im.copy()</span><br><span class="line">im_a = im.copy()</span><br><span class="line"></span><br><span class="line">im_r[:,:,<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">im_r[:,:,<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">imsave(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine_r.png&#x27;</span>,im_r)</span><br><span class="line"></span><br><span class="line">im_g[:,:,<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">im_g[:,:,<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">imsave(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine_g.png&#x27;</span>,im_g)</span><br><span class="line"></span><br><span class="line">im_b[:,:,<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">im_b[:,:,<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">imwrite(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine_b.png&#x27;</span>,im_b)</span><br><span class="line"><span class="comment"># imwrite 和 imsave 似乎效果一样</span></span><br><span class="line"></span><br><span class="line">im_a[:,:,<span class="number">3</span>] = <span class="number">0.5</span>*<span class="number">255</span>  <span class="comment"># 将 alpha 通道值设置为半透明</span></span><br><span class="line">imsave(<span class="string">&#x27;D:\mypycode\imageiostuff\Lumine_a.png&#x27;</span>,im_a)</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/20/64415e9b07a2e.png" alt="34-64.png" title="上面代码的输出结果"></p><p>注意：将一个图像保存为具有透明度的 PNG 格式时，必须将 alpha 通道的值归一化为<code>[0, 255]</code>范围内。因此，将一个 alpha 通道的值设置为 0.5 并不会生效。需要将其乘以 255，以将其值转换为<code>[0, 255]</code>范围中。</p><p>图片压缩。例如，我们需要压缩如下的图片：</p><p><img src="https://bu.dusays.com/2023/04/21/64422102087e2.jpeg" alt="34-65.jpeg" title="LLPaimon.jpeg"></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> imageio <span class="keyword">import</span> imread,imwrite</span><br><span class="line"></span><br><span class="line">im = imread(<span class="string">&#x27;D:\mypycode\imageiostuff\LLPaimon.jpeg&#x27;</span>)</span><br><span class="line"></span><br><span class="line">imwrite(<span class="string">&#x27;D:\mypycode\imageiostuff\LLPaimon_25.jpeg&#x27;</span>,im,quality=<span class="number">25</span>)</span><br><span class="line">imwrite(<span class="string">&#x27;D:\mypycode\imageiostuff\LLPaimon_50.jpeg&#x27;</span>,im,quality=<span class="number">50</span>)</span><br><span class="line">imwrite(<span class="string">&#x27;D:\mypycode\imageiostuff\LLPaimon_75.jpeg&#x27;</span>,im,quality=<span class="number">75</span>)</span><br><span class="line">imwrite(<span class="string">&#x27;D:\mypycode\imageiostuff\LLPaimon_100.jpeg&#x27;</span>,im,quality=<span class="number">100</span>)</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/21/644224a997399.png" alt="34-66.png" title="上面代码的输出结果"></p><p>注意：在上面的例子中，我们压缩了 jpg/jpeg 文件，但若要压缩 png 文件，不能依葫芦画瓢简单地改一下文件名就行（至少目前的 imageio 版本是这样）。可能相关的讨论：</p><p><a href="https://stackoverflow.com/questions/35859140/remove-transparency-alpha-from-any-image-using-pil">https://stackoverflow.com/questions/35859140/remove-transparency-alpha-from-any-image-using-pil</a></p><p>将多个PNG图片转为GIF。代码（改编自<a href="https://cloud.tencent.com/developer/article/1468285">这里</a>）：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_gif</span>(<span class="params">source, name, myduration</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    生成gif的函数，原始图片仅支持png</span></span><br><span class="line"><span class="string">    source: 为png图片列表（排好序）</span></span><br><span class="line"><span class="string">    name: 生成的文件名称</span></span><br><span class="line"><span class="string">    myduration: 每张图片之间的时间间隔</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    frames = []  <span class="comment"># 读入缓冲区</span></span><br><span class="line">    <span class="keyword">for</span> img <span class="keyword">in</span> source:</span><br><span class="line">        frames.append(imageio.imread(img))</span><br><span class="line">    imageio.mimsave(name, frames, <span class="string">&#x27;GIF&#x27;</span>, duration=myduration)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;done&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">or_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    or_path: 目标的文件夹</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    path = os.chdir(or_path)</span><br><span class="line">    pic_list = os.listdir()</span><br><span class="line">    gif_name = <span class="built_in">input</span>(<span class="string">&quot;Name the target file (end with .gif) :&quot;</span>)</span><br><span class="line">    duration_time = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;Give the duration_time (0.5 recommended) :&quot;</span>))</span><br><span class="line">    create_gif(pic_list, gif_name, duration_time)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parm_list = sys.argv</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(parm_list) != <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Please enter the folder you want to process !&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        main(parm_list[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>考虑如下图片：</p><p><img src="https://bu.dusays.com/2023/04/21/644262aa55b7b.png" alt="34-67.png"></p><p>运行上面的代码：</p><p><img src="https://bu.dusays.com/2023/04/21/644262aa39cd8.png" alt="34-68.png"></p><p>最终效果：</p><p><img src="https://bu.dusays.com/2023/04/21/644262ac167b5.gif" alt="34-69.gif" title="keqing_e.gif"></p><h2 id="第三方库与计算生态概览"><a href="#第三方库与计算生态概览" class="headerlink" title="第三方库与计算生态概览"></a>第三方库与计算生态概览</h2><h3 id="Python第三方库安装"><a href="#Python第三方库安装" class="headerlink" title="Python第三方库安装"></a>Python第三方库安装</h3><p>pip 安装方法：略。</p><p>文件安装方法（有些第三方库用 pip 可以下载，但无法安装？）：</p><ul><li>pip下载后可得到可执行文件(pip)、源代码</li><li>源代码则需要编译再安装</li><li>如果操作系统没有编译环境，虽能下载但不能安装</li><li>可以直接下载编译后的版本用于安装吗？</li></ul><p><a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p><p>实例：安装 wordcloud 库</p><ul><li>步骤1：在UCI页面上搜索wordcloud</li><li>步骤2：下载对应版本的文件放入pip路径</li><li>步骤3：使用pip install &lt;文件名&gt;安装</li></ul><p>集成安装方法（结合特定 Python 开发工具的批量安装）：</p><ul><li>Anaconda 网址：<a href="https://www.continuum.io">https://www.continuum.io</a></li><li>支持近800个第三方库</li><li>包含多个主流工具</li><li>适合数据计算领域开发</li></ul><h3 id="Python社区"><a href="#Python社区" class="headerlink" title="Python社区"></a>Python社区</h3><p>Python社区：</p><ul><li>13万个第三方库 <a href="https://pypi.org/">https://pypi.org/</a></li></ul><p>实例：开发与区块链相关的程序</p><ul><li>第1步：在 pypi.org 搜索 blockchain</li><li>第2步：挑选适合开发目标的第三方库作为基础</li><li>第3步：完成自己需要的功能</li></ul><h3 id="程序设计模式"><a href="#程序设计模式" class="headerlink" title="程序设计模式"></a>程序设计模式</h3><p><img src="https://bu.dusays.com/2023/04/28/644b8e1713b7e.png" alt="34-69.png" title="自顶向下"></p><p>模块化设计：</p><ul><li>通过函数或对象封装将程序划分为模块及模块间的表达</li><li>具体包括：主程序、子程序和子程序间关系</li><li>分而治之：一种分而治之、分层抽象、体系化的设计思想</li><li>紧耦合：两个部分之间交流很多，无法独立存在</li><li>松耦合：两个部分之间交流较少，可以独立存在</li><li>模块内部紧耦合、模块之间松耦合</li></ul><p>配置化设计：</p><ul><li>引擎+配置：程序执行和配置分离，将可选参数配置化</li><li>将程序开发变成配置文件编写，扩展功能而不修改程序</li><li>关键在于接口设计，清晰明了、灵活可扩展</li></ul><h3 id="Python的第三方库"><a href="#Python的第三方库" class="headerlink" title="Python的第三方库"></a>Python的第三方库</h3><h4 id="从数据处理到人工智能"><a href="#从数据处理到人工智能" class="headerlink" title="从数据处理到人工智能"></a>从数据处理到人工智能</h4><p><strong>Numpy</strong>：表达N维数组的最基础库</p><p><strong>Pandas</strong>：Python 数据分析高层次应用库</p><ul><li>提供了简单易用的数据结构和数据分析工具</li><li>理解数据类型与索引的关系，操作索引即操作数据</li><li>Python最主要的数据分析功能库，基于Numpy开发</li></ul><p><strong>SciPy</strong>：数学、科学和工程计算功能库</p><ul><li>提供了一批数学算法及工程数据运算功能</li><li>类似Matlab，可用于如傅里叶变换、信号处理等应用</li><li>Python最主要的科学计算功能库，基于Numpy开发</li></ul><p><strong>Matplotlib</strong>：高质量的二维数据可视化功能库</p><ul><li>提供了超过100种数据可视化展示效果</li><li>通过matplotlib.pyplot子库调用各可视化效果</li><li>Python最主要的数据可视化功能库，基于Numpy开发</li></ul><p><img src="https://bu.dusays.com/2023/04/28/644b930eae457.png" alt="34-70.png"></p><p><strong>Seaborn</strong>：统计类数据可视化功能库</p><ul><li>提供了一批高层次的统计类数据可视化展示效果</li><li>主要展示数据间分布、分类和线性关系等内容</li><li>基于Matplotlib开发，支持Numpy和Pandas</li></ul><p><strong>Mayavi</strong>：三维科学数据可视化功能库</p><ul><li>提供了一批简单易用的3D科学计算数据可视化展示效果</li><li>目前版本是Mayavi2，三维可视化最主要的第三方库</li><li>支持Numpy、TVTK、Traits、Envisage等第三方库</li></ul><p><img src="https://bu.dusays.com/2023/04/28/644b93c0f01a8.png" alt="34-71.png"></p><p><strong>PyPDF2</strong>：用来处理pdf文件的工具集</p><ul><li>提供了一批处理PDF文件的计算功能</li><li>支持获取信息、分隔/整合文件、加密解密等</li><li>完全Python语言实现，不需要额外依赖，功能稳定</li><li><a href="http://mstamy2.github.io/PyPDF2">http://mstamy2.github.io/PyPDF2</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyPDF2 <span class="keyword">import</span> PdfFileReader, PdfFileMerger</span><br><span class="line">merger = PdfFileMerger()</span><br><span class="line">input1 = <span class="built_in">open</span>(<span class="string">&quot;document1.pdf&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">input2 = <span class="built_in">open</span>(<span class="string">&quot;document2.pdf&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">merger.append(fileobj = input1, pages = (<span class="number">0</span>,<span class="number">3</span>))</span><br><span class="line">merger.merge(position = <span class="number">2</span>, fileobj = input2, pages = (<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">output = <span class="built_in">open</span>(<span class="string">&quot;document-output.pdf&quot;</span>, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">merger.write(output)</span><br></pre></td></tr></table></figure><p><strong>NLTK</strong>：自然语言文本处理第三方库</p><ul><li>提供了一批简单易用的自然语言文本处理功能</li><li>支持语言文本分类、标记、语法句法、语义分析等</li><li>最优秀的Python自然语言处理库</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.corpus <span class="keyword">import</span> treebank</span><br><span class="line">t = treebank.parsed_sents(<span class="string">&#x27;wsj_0001.mrg&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">t.draw()</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/04/28/644b96cc7854f.png" alt="34-72.png"></p><p><strong>Python-docx</strong>：创建或更新Microsoft Word文件的第三方库</p><ul><li>提供创建或更新.doc .docx等文件的计算功能</li><li>增加并配置段落、图片、表格、文字等，功能全面</li><li><a href="http://python-docx.readthedocs.io/en/latest/index.html">http://python-docx.readthedocs.io/en/latest/index.html</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line">document = Document()</span><br><span class="line">document.add_heading(<span class="string">&#x27;Document Title&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">p = document.add_paragraph(<span class="string">&#x27;A plain paragraph having some &#x27;</span>)</span><br><span class="line">document.add_page_break()</span><br><span class="line">document.save(<span class="string">&#x27;demo.docx&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>Scikit-learn</strong>：机器学习方法工具集</p><ul><li>提供一批统一化的机器学习方法功能接口</li><li>提供聚类、分类、回归、强化学习等计算功能</li><li>机器学习最基本且最优秀的Python第三方库</li></ul><p><strong>TensorFlow</strong>：AlphaGo背后的机器学习计算框架</p><ul><li>谷歌公司推动的开源机器学习框架</li><li>将数据流图作为基础，图节点代表运算，边代表张量</li><li>应用机器学习方法的一种方式，支撑谷歌人工智能应用</li><li><a href="https://www.tensorflow.org/">https://www.tensorflow.org/</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line">sess = tf.Session()</span><br><span class="line">sess.run(init)</span><br><span class="line">res = sess.run(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;result:&#x27;</span>, res)</span><br></pre></td></tr></table></figure><p><strong>MXNet</strong>：基于神经网络的深度学习计算框架</p><ul><li>提供可扩展的神经网络及深度学习计算功能</li><li>可用于自动驾驶、机器翻译、语音识别等众多领域</li><li>Python最重要的深度学习计算框架</li><li><a href="https://mxnet.incubator.apache.org/">https://mxnet.incubator.apache.org/</a></li></ul><h4 id="从Web解析到网络空间"><a href="#从Web解析到网络空间" class="headerlink" title="从Web解析到网络空间"></a>从Web解析到网络空间</h4><p><strong>Requests</strong>: 最友好的网络爬虫功能库</p><ul><li>提供了简单易用的类HTTP协议网络爬虫功能</li><li>支持连接池、SSL、Cookies、HTTP(S)代理等</li><li>Python最主要的页面级网络爬虫功能库</li><li><a href="http://www.python-requests.org/">http://www.python-requests.org/</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">&#x27;https://api.github.com/user&#x27;</span>,\</span><br><span class="line">                 auth=(<span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;pass&#x27;</span>))</span><br><span class="line">r.status_code</span><br><span class="line">r.headers[<span class="string">&#x27;content-type&#x27;</span>]</span><br><span class="line">r.encoding</span><br><span class="line">r.text</span><br></pre></td></tr></table></figure><p><strong>Scrapy</strong>: 优秀的网络爬虫框架</p><ul><li>提供了构建网络爬虫系统的框架功能，功能半成品</li><li>支持批量和定时网页爬取、提供数据处理流程等</li><li>Python最主要且最专业的网络爬虫框架</li><li><a href="https://scrapy.org">https://scrapy.org</a></li></ul><p><strong>pyspider</strong>：强大的Web页面爬取系统</p><ul><li>提供了完整的网页爬取系统构建功能</li><li>支持数据库后端、消息队列、优先级、分布式架构等</li><li>Python重要的网络爬虫类第三方库</li><li><a href="http://docs.pyspider.org">http://docs.pyspider.org</a></li></ul><p><strong>Beautiful Soup</strong>：HTML和XML的解析库</p><ul><li>提供了解析HTML和XML等Web信息的功能</li><li>又名beautifulsoup4或bs4，可以加载多种解析引擎</li><li>常与网络爬虫库搭配使用，如Scrapy、requests等</li><li><a href="https://www.crummy.com/software/BeautifulSoup/bs4">https://www.crummy.com/software/BeautifulSoup/bs4</a></li></ul><p><img src="https://bu.dusays.com/2023/04/28/644ba8fac1da8.png" alt="34-73.png"></p><p><strong>Re</strong>：正则表达式解析和处理功能库</p><ul><li>提供了定义和解析正则表达式的一批通用功能</li><li>可用于各类场景，包括定点的Web信息提取</li><li>Python最主要的标准库之一，无需安装</li><li><a href="https://docs.python.org/3.6/library/re.html">https://docs.python.org/3.6/library/re.html</a></li></ul><p><strong>Python-Goose</strong>：提取文章类型Web页面的功能库</p><ul><li>提供了对Web页面中文章信息/视频等元数据的提取功能</li><li>针对特定类型Web页面，应用覆盖面较广</li><li>Python最主要的Web信息提取库</li><li><a href="https://github.com/grangier/python-goose">https://github.com/grangier/python-goose</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> goose <span class="keyword">import</span> Goose</span><br><span class="line">url = <span class="string">&#x27;http://www.elmundo.es/elmundo/2012/10/28/espana/1351388909.html&#x27;</span></span><br><span class="line">g = Goose(&#123;<span class="string">&#x27;use_meta_language&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;target_language&#x27;</span>:<span class="string">&#x27;es&#x27;</span>&#125;)</span><br><span class="line">article = g.extract(url=url)</span><br><span class="line">article.cleaned_text[:<span class="number">150</span>]</span><br></pre></td></tr></table></figure><p><strong>Django</strong>：最流行的Web应用框架</p><ul><li>提供了构建Web系统的基本应用框架</li><li>MTV模式：模型(model)、模板(Template)、视图(Views)</li><li>Python最重要的Web应用框架，略微复杂的应用框架</li><li><a href="https://www.djangoproject.com">https://www.djangoproject.com</a></li></ul><p><strong>Pyramid</strong>：规模适中的Web应用框架</p><ul><li>提供了简单方便构建Web系统的应用框架</li><li>不大不小，规模适中，适合快速构建并适度扩展类应用</li><li>Python产品级Web应用框架，起步简单可扩展性好</li><li><a href="https://trypyramid.com/">https://trypyramid.com/</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10行左右Hello Word程序</span></span><br><span class="line"><span class="keyword">from</span> wsgiref.simple_server <span class="keyword">import</span> make_server</span><br><span class="line"><span class="keyword">from</span> pyramid.config <span class="keyword">import</span> Configurator</span><br><span class="line"><span class="keyword">from</span> pyramid.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> Response(<span class="string">&#x27;Hello World!&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> Configurator() <span class="keyword">as</span> config:</span><br><span class="line">        config.add_route(<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        config.add_view(hello_world, route_name=<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        app = config.make_wsgi_app()</span><br><span class="line">    server = make_server(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">6543</span>, app)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p><strong>Flask</strong>：Web应用开发微框架</p><ul><li>提供了最简单构建Web系统的应用框架</li><li>特点是：简单、规模小、快速</li><li>Django &gt; Pyramid &gt; Flask</li><li><a href="http://flask.pocoo.org">http://flask.pocoo.org</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>WeRoBot</strong>：微信公众号开发框架</p><ul><li>提供了解析微信服务器消息及反馈消息的功能</li><li>建立微信机器人的重要技术手段</li><li><a href="https://github.com/offu/WeRoBot">https://github.com/offu/WeRoBot</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对微信每个消息反馈一个Hello World</span></span><br><span class="line"><span class="keyword">import</span> werobot</span><br><span class="line">robot = werobot.WeRoBot(token=<span class="string">&#x27;tokenhere&#x27;</span>)</span><br><span class="line"><span class="meta">@robot.handler</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>aip</strong>：百度AI开放平台接口</p><ul><li>提供了访问百度AI服务的Python功能接口</li><li>语音、人脸、OCR、NLP、知识图谱、图像搜索等领域</li><li>Python百度AI应用的最主要方式</li><li><a href="https://github.com/Baidu-AIP/python-sdk">https://github.com/Baidu-AIP/python-sdk</a></li></ul><p><strong>MyQR</strong>：二维码生成第三方库</p><ul><li>提供了生成二维码的系列功能</li><li>基本二维码、艺术二维码和动态二维码</li><li><a href="https://github.com/sylnsfar/qrcode">https://github.com/sylnsfar/qrcode</a></li></ul><h4 id="从人机交互到艺术设计"><a href="#从人机交互到艺术设计" class="headerlink" title="从人机交互到艺术设计"></a>从人机交互到艺术设计</h4><p><strong>PyQt5</strong>：Qt开发框架的Python接口</p><ul><li>提供了创建Qt5程序的Python API接口</li><li>Qt是非常成熟的跨平台桌面应用开发系统，完备GUI</li><li>推荐的Python GUI开发第三方库</li><li><a href="https://www.riverbankcomputing.com/software/pyqt">https://www.riverbankcomputing.com/software/pyqt</a></li></ul><p><strong>wxPython</strong>：跨平台GUI开发框架</p><ul><li>提供了专用于Python的跨平台GUI开发框架</li><li><a href="https://www.wxpython.org">https://www.wxpython.org</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wx</span><br><span class="line">app = wx.App(<span class="literal">False</span>)</span><br><span class="line">frame = wx.Frame(<span class="literal">None</span>, wx.ID_ANY, <span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">frame.Show(<span class="literal">True</span>)</span><br><span class="line">app.MainLoop()</span><br></pre></td></tr></table></figure><p><strong>PyGObject</strong>：使用GTK+开发GUI的功能库</p><ul><li>提供了整合GTK+、WebKitGTK+等库的功能</li><li>GTK+：跨平台的一种用户图形界面GUI框架</li><li>实例：Anaconda采用该库构建GUI</li><li><a href="https://pygobject.readthedocs.io">https://pygobject.readthedocs.io</a></li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gi</span><br><span class="line">gi.require_version(<span class="string">&quot;Gtk&quot;</span>, <span class="string">&quot;3.0&quot;</span>)</span><br><span class="line"><span class="keyword">from</span> gi.repository <span class="keyword">import</span> Gtk</span><br><span class="line">window = Gtk.Window(title=<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">window.show()</span><br><span class="line">window.connect(<span class="string">&quot;destroy&quot;</span>, Gtk.main_quit)</span><br><span class="line">Gtk.main()</span><br></pre></td></tr></table></figure><p><strong>PyGame</strong>：简单的游戏开发功能库</p><ul><li>提供了基于SDL的简单游戏开发功能及实现引擎</li><li>理解游戏对外部输入的响应机制及角色构建和交互机制</li><li>Python游戏入门最主要的第三方库</li><li><a href="http://www.pygame.org">http://www.pygame.org</a></li></ul><p><strong>Panda3D</strong>：开源、跨平台的3D渲染和游戏开发库</p><ul><li>一个3D游戏引擎，提供Python和C++两种接口</li><li>支持很多先进特性：法线贴图、光泽贴图、卡通渲染等</li><li>由迪士尼和卡尼基梅隆大学共同开发</li><li><a href="http://www.panda3d.org">http://www.panda3d.org</a></li></ul><p><strong>cocos2d</strong>：构建2D游戏和图形界面交互式应用的框架</p><ul><li>提供了基于OpenGL的游戏开发图形渲染功能</li><li>支持GPU加速，采用树形结构分层管理游戏对象类型</li><li>适用于2D专业级游戏开发</li><li><a href="http://python.cocos2d.org/">http://python.cocos2d.org/</a></li></ul><p><strong>VR Zero</strong>：在树莓派上开发VR应用的Python库</p><ul><li>提供大量与VR开发相关的功能</li><li>针对树莓派的VR开发库，支持设备小型化，配置简单化</li><li>非常适合初学者实践VR开发及应用</li><li><a href="https://github.com/WayneKeenan/python-vrzero">https://github.com/WayneKeenan/python-vrzero</a></li></ul><p><strong>pyovr</strong>：Oculus Rift的Python开发接口</p><ul><li>针对Oculus VR设备的Python开发库</li><li>基于成熟的VR设备，提供全套文档，工业级应用设备</li><li>Python+虚拟现实领域探索的一种思路</li><li><a href="https://github.com/cmbruns/pyovr">https://github.com/cmbruns/pyovr</a></li></ul><p><strong>Vizard</strong>：基于Python的通用VR开发引擎</p><ul><li>专业的企业级虚拟现实开发引擎</li><li>提供详细的官方文档</li><li>支持多种主流的VR硬件设备，具有一定通用性</li><li><a href="http://www.worldviz.com/vizard-virtual-reality-software">http://www.worldviz.com/vizard-virtual-reality-software</a></li></ul><p><strong>Quads</strong>：迭代的艺术</p><ul><li>对图片进行四分迭代，形成像素风</li><li>可以生成动图或静图图像</li><li>简单易用，具有很高展示度</li><li><a href="https://github.com/fogleman/Quads">https://github.com/fogleman/Quads</a></li></ul><p><strong>ascii_art</strong>：ASCII艺术库</p><ul><li>将普通图片转为ASCII艺术风格</li><li>输出可以是纯文本或彩色文本</li><li>可采用图片格式输出</li><li><a href="https://github.com/jontonsoup4/ascii_art">https://github.com/jontonsoup4/ascii_art</a></li></ul><p><img src="https://bu.dusays.com/2023/04/28/644bb4019cb8c.png" alt="34-74.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;输入“实例”以搜索样例代码。&lt;/p&gt;
&lt;h2 id=&quot;Python-课程概述&quot;&gt;&lt;a href=&quot;#Python-课程概述&quot; class=&quot;headerlink&quot; title=&quot;Python 课程概述&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="笔记" scheme="https://loveofpeach.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://loveofpeach.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>离散数学笔记</title>
    <link href="https://loveofpeach.github.io/posts/de63d40a.html"/>
    <id>https://loveofpeach.github.io/posts/de63d40a.html</id>
    <published>2023-03-03T02:16:02.000Z</published>
    <updated>2023-05-19T04:47:00.982Z</updated>
    
    <content type="html"><![CDATA[<p>前几节课都是听的线上，我根据声音脑补这是个穿着灰白上衣的瘦高老头，墙上斑驳的石灰一样。结果去了线下，才发现是个头发浓密的青年人，裹一挂蓝色的冲锋衣。有点失望。</p><p>总的来说，这老师讲的还可以。虽然可以说是念 PPT，但他 PPT 写的不错，条理清晰，比教科书好多了。草草翻了翻教科书，得出结论：如果跟着这玩意学简直是灾难。</p><p>课程还在学，笔记学完放出来。</p><p>先把作业贴出来。</p><h2 id="离散作业-1"><a href="#离散作业-1" class="headerlink" title="离散作业 1"></a>离散作业 1</h2><p><img src="https://bu.dusays.com/2023/03/18/6415bbb5ded66.jpg" alt="离散作业1-1.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bbb60d6a3.jpg" alt="离散作业1-2.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bbb61e3ab.jpg" alt="离散作业1-3.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bbb629498.jpg" alt="离散作业1-4.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bbb62ae6b.jpg" alt="离散作业1-5.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bbb622e60.jpg" alt="离散作业1-6.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bbb60d82a.jpg" alt="离散作业1-7.jpg"></p><h2 id="离散作业-2"><a href="#离散作业-2" class="headerlink" title="离散作业 2"></a>离散作业 2</h2><p><img src="https://bu.dusays.com/2023/03/18/6415bf98970ea.jpg" alt="离散作业2-1.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bc6f17645.jpg" alt="离散作业2-2.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bc6f0f3ad.jpg" alt="离散作业2-3.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bc6f31276.jpg" alt="离散作业2-4.jpg"></p><p><img src="https://bu.dusays.com/2023/03/18/6415bc6f32e07.jpg" alt="离散作业2-5.jpg"></p><h2 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h2><p>博主的分析思路：（有点民科的感觉有木有OvO）</p><p><img src="https://bu.dusays.com/2023/03/22/641a87e0913e6.jpg" alt="33-1.jpg"></p><p><img src="https://bu.dusays.com/2023/03/22/641a89929c2ba.jpg" alt="33-2.jpg"></p><p>老师的解答：</p><p>设有 $m$ 个小伙 $b_1,b_2,\cdots ,b_m$ ，有 $n$ 个姑娘 $g_1,g_2,\cdots ,g_n$. 设和第 $i$ 个小伙 $b_i$ 跳过舞的姑娘的集合为 $G_i$ ，其中 $i=1,2,\cdots ,m$. </p><p>对 $G_1,G_2,\cdots ,G_m$ 有两种情况：</p><p>$\mathcal{A}:$</p><p>存在 $1\leqslant i&lt;j\leqslant m$ ，使得 $G_i\nsubseteq G_j$ 且 $G_j\nsubseteq G_i$ .</p><p>于是存在 $g_k\in G_i$ 但 $g_k\notin G_j$ ；存在 $g_l\in G_j$ 但 $g_l\notin G_i$ .</p><p>这样对于小伙 $b_i,b_j$ 和姑娘 $g_k,g_l$ 结论成立 .</p><p>$\mathcal{B}:$</p><p>对任意 $1\leqslant i&lt;j\leqslant m$ ，要么 $G_i\subseteq G_j$ ，要么 $G_j\subseteq G_i$ .</p><p>于是可以按照 $\subseteq$ 排序：</p><script type="math/tex; mode=display">G_{(1)}\subseteq G_{(2)}\subseteq \cdots \subseteq G_{(m)}\subset \{g_1,g_2,\cdots ,g_n\}</script><p>这与题设矛盾。</p><p>综上，结论得证。</p><h2 id="离散作业-3"><a href="#离散作业-3" class="headerlink" title="离散作业 3"></a>离散作业 3</h2><p><img src="https://sway.office.com/s/z5mcBNnQTQa3XoNi/images/c_UYsLcNPqtSpT" alt="离散作业3-1.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22f9883e.jpg" alt="离散作业3-2.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fb79af.jpg" alt="离散作业3-3.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fb8bb4.jpg" alt="离散作业3-4.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fc3eb6.jpg" alt="离散作业3-5.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fb0e0a.jpg" alt="离散作业3-6.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fb60a9.jpg" alt="离散作业3-7.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fba0f3.jpg" alt="离散作业3-8.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f22fb2005.jpg" alt="离散作业3-9.jpg"></p><p><img src="https://bu.dusays.com/2023/04/23/6444f46978bf4.jpg" alt="离散作业3-10.jpg"></p><h2 id="离散作业-4"><a href="#离散作业-4" class="headerlink" title="离散作业 4"></a>离散作业 4</h2><h2 id="命题逻辑"><a href="#命题逻辑" class="headerlink" title="命题逻辑"></a>命题逻辑</h2><p><img src="https://bu.dusays.com/2023/04/14/643914864b51a.jpg" alt="离散数学（上）-01.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643914870c603.jpg" alt="离散数学（上）-02.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391486ccf15.jpg" alt="离散数学（上）-03.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391486bdc7e.jpg" alt="离散数学（上）-04.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391486e3b61.jpg" alt="离散数学（上）-05.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391487212b8.jpg" alt="离散数学（上）-06.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643914870c2d2.jpg" alt="离散数学（上）-07.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439148717542.jpg" alt="离散数学（上）-08.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643914871e9e0.jpg" alt="离散数学（上）-09.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643914872e21c.jpg" alt="离散数学（上）-10.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391694766e5.jpg" alt="离散数学（上）-11.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643916949cb46.jpg" alt="离散数学（上）-12.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391694827b5.jpg" alt="离散数学（上）-13.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439169497835.jpg" alt="离散数学（上）-14.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643916949f534.jpg" alt="离散数学（上）-15.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439169491d55.jpg" alt="离散数学（上）-16.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439169497307.jpg" alt="离散数学（上）-17.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439169497049.jpg" alt="离散数学（上）-18.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391694712c9.jpg" alt="离散数学（上）-19.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439169497835.jpg" alt="离散数学（上）-20.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439174199658.jpg" alt="离散数学（上）-21.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917416a3ea.jpg" alt="离散数学（上）-22.jpg"></p><h2 id="谓词逻辑"><a href="#谓词逻辑" class="headerlink" title="谓词逻辑"></a>谓词逻辑</h2><p><img src="https://bu.dusays.com/2023/04/14/64391741bcf26.jpg" alt="离散数学（上）-23.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391741d68f0.jpg" alt="离散数学（上）-24.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391741cd4a1.jpg" alt="离散数学（上）-25.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391741f0ff3.jpg" alt="离散数学（上）-26.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439174219a3c.jpg" alt="离散数学（上）-27.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439174204fb7.jpg" alt="离散数学（上）-28.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/6439174205709.jpg" alt="离散数学（上）-29.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917421dc77.jpg" alt="离散数学（上）-30.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917dc529b8.jpg" alt="离散数学（上）-31.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917dbbb4d1.jpg" alt="离散数学（上）-32.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917dc7d000.jpg" alt="离散数学（上）-33.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917dd8e7af.jpg" alt="离散数学（上）-34.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917dde5546.jpg" alt="离散数学（上）-35.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917ddcb754.jpg" alt="离散数学（上）-36.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917ddee78a.jpg" alt="离散数学（上）-37.jpg"></p><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p><img src="https://bu.dusays.com/2023/04/14/643917de04649.jpg" alt="离散数学（上）-38.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917de03f29.jpg" alt="离散数学（上）-39.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643917ddbf742.jpg" alt="离散数学（上）-40.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb3cfc2.jpg" alt="离散数学（上）-41.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb4a009.jpg" alt="离散数学（上）-42.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb54575.jpg" alt="离散数学（上）-43.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb4a03d.jpg" alt="离散数学（上）-44.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb5043b.jpg" alt="离散数学（上）-45.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb5456b.jpg" alt="离散数学（上）-46.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb58b7c.jpg" alt="离散数学（上）-47.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb550ff.jpg" alt="离散数学（上）-48.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/643918cb554ef.jpg" alt="离散数学（上）-49.jpg"></p><h2 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h2><p><img src="https://bu.dusays.com/2023/04/14/643918cb59106.jpg" alt="离散数学（上）-50.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f1df65.jpg" alt="离散数学（上）-51.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f1e002.jpg" alt="离散数学（上）-52.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2dd7b.jpg" alt="离散数学（上）-53.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2c203.jpg" alt="离散数学（上）-54.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2a9b6.jpg" alt="离散数学（上）-55.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2a11b.jpg" alt="离散数学（上）-56.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2fe05.jpg" alt="离散数学（上）-57.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2db03.jpg" alt="离散数学（上）-58.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2f21d.jpg" alt="离散数学（上）-59.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391a0f2fe16.jpg" alt="离散数学（上）-60.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac172ea7.jpg" alt="离散数学（上）-61.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac185567.jpg" alt="离散数学（上）-62.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac17a580.jpg" alt="离散数学（上）-63.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac183ae4.jpg" alt="离散数学（上）-64.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac193daa.jpg" alt="离散数学（上）-65.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac193953.jpg" alt="离散数学（上）-66.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac19d6a5.jpg" alt="离散数学（上）-67.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac192d8e.jpg" alt="离散数学（上）-68.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac19b803.jpg" alt="离散数学（上）-69.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391ac197829.jpg" alt="离散数学（上）-70.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b2526520.jpg" alt="离散数学（上）-71.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b252653a.jpg" alt="离散数学（上）-72.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b253097b.jpg" alt="离散数学（上）-73.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b253abee.jpg" alt="离散数学（上）-74.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b253b325.jpg" alt="离散数学（上）-75.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b2527917.jpg" alt="离散数学（上）-76.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b253c776.jpg" alt="离散数学（上）-77.jpg"></p><p><img src="https://bu.dusays.com/2023/04/14/64391b25354d2.jpg" alt="离散数学（上）-78.jpg"></p><h2 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h2><h2 id="无穷集合"><a href="#无穷集合" class="headerlink" title="无穷集合"></a>无穷集合</h2><h2 id="抽象代数"><a href="#抽象代数" class="headerlink" title="抽象代数"></a>抽象代数</h2><p>这部分是最难理解的，在课堂上跟思路非常耗神。</p><h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前几节课都是听的线上，我根据声音脑补这是个穿着灰白上衣的瘦高老头，墙上斑驳的石灰一样。结果去了线下，才发现是个头发浓密的青年人，裹一挂蓝色的冲锋衣。有点失望。&lt;/p&gt;
&lt;p&gt;总的来说，这老师讲的还可以。虽然可以说是念 PPT，但他 PPT 写的不错，条理清晰，比教科书好多了</summary>
      
    
    
    
    <category term="笔记" scheme="https://loveofpeach.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="慢毕业" scheme="https://loveofpeach.github.io/tags/%E6%85%A2%E6%AF%95%E4%B8%9A/"/>
    
    <category term="离散数学" scheme="https://loveofpeach.github.io/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>SeriesNote</title>
    <link href="https://loveofpeach.github.io/posts/1b45ac71.html"/>
    <id>https://loveofpeach.github.io/posts/1b45ac71.html</id>
    <published>2023-02-28T12:32:06.000Z</published>
    <updated>2023-05-13T14:31:04.377Z</updated>
    
    <content type="html"><![CDATA[<p>图片稍后放出。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;图片稍后放出。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="笔记" scheme="https://loveofpeach.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="级数" scheme="https://loveofpeach.github.io/tags/%E7%BA%A7%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>北漂日记</title>
    <link href="https://loveofpeach.github.io/posts/a7090f56.html"/>
    <id>https://loveofpeach.github.io/posts/a7090f56.html</id>
    <published>2023-02-20T12:44:37.000Z</published>
    <updated>2023-05-13T14:19:42.294Z</updated>
    
    <content type="html"><![CDATA[<p>来北京溜达溜达。</p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>北京西。</p><p>上次来北京好像是久远的事。我感到困惑。</p><p>行程不提。</p><p>总之中午的时候到了公司总部，挺漂亮。HR 堆出很自然的笑，比划着很自然的肢体语言向我们介绍了公司的大体情况。我暗自佩服，连找个人力资源岗位的勇气也一并丢掉了。</p><p>桌面放着 Nestle 的小瓶矿泉水。</p><p>午餐后只能趴在桌子上恰一会，胃里涨出气来，于是坐着休息。</p><p>一点半，领完电脑后出发去公司安排的鸽子笼，京城寸土寸金，凑活吧。</p><p>通勤时间很长。</p><p>安顿下来已经是晚饭的时间，配着绝味鸭脖吃了晚饭。</p><p>之后去超市买了日用品。因为一种偏执的洁癖去临近的公共厕所开了大，北京的达不溜C洗手台都是热水。</p><p>回来洗漱完毕，夜生活才刚刚开始——不对，明天上班。于是躺床上看会视频，早早睡觉。</p><p>直到晚上2点因为梦遗惊醒，拿起床边的卷纸，悄声撇下两张塞在内裤两边，一手拉着内裤一手撇下第三张长卷纸，就着右边的纸一起，像卷凉席一样卷到左边。手探进内裤，只沾到了一点：这就是所谓“挽狂澜于既倒”的方法。现在我的内裤里多出一个纸棒，也许它更像墨西哥鸡肉卷，或者是刷着酱的肉松卷面包。</p><p>不是一个好比喻，我打消这个念头。</p><p>如何处理这个肉松面包？我就此思索。放在平时不存在这个烦恼，可现在是在鸽子笼里面，有两位一起住的室友。</p><p>我看见自己晾的衣服，它们就在我的头顶。</p><p>我想起带过来的 Nahida 抱枕——图案很健全的、四方的枕头，不如说，这就是一个枕头，我总是喜欢把它抱在怀里。在大学宿舍里还有帘子遮挡，但是现在它还在我的行李箱里。</p><p>还是决定把肉松面包丢马桶里冲掉，但是撒尿的时候我故意滋在了水面上。</p><p>做了一个什么样的春梦？我又模糊地萌生困意。从初中到现在，梦中的女神们愈来愈清晰，所行之事也渐渐具体到难以言说之地。</p><p>奇怪，我怎么会梦到这些呢，前世的经验？</p><p>我想起高中时喜欢的女孩，她与我志趣相投，又在填完志愿后默契地沉默；想起初中暧昧过的女孩，因为我判断三观不合便自行离去；我想起小学时送我黄色花生灯的女孩，一份意料外的生日礼物，想起她家曾经开过的小店。</p><p>我沉沉睡去。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>通勤时间很长。</p><p>和带我的小哥简单聊了两句就开始工作了，虽然说是工作，但我什么也不会，因为专业不相关，只能做点是个人就会的东西。</p><p>不如说，我学的专业和什么都不相关。</p><p>办公室不大，中间一椭圆桌子，四周各有一些简单的陈设，毛玻璃隔开室外。</p><p>小哥人挺和蔼，工作很专注，思考的时候会把自己的脑内音不自觉地说出来，不乏一些国粹。</p><p>下班被高德导错了地方，路上见到了所谓的京城老破小。</p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>考研初试成绩出来了，准备打工。</p><p>重修选课的老师似乎并不欢迎外系学生。</p><p>有一个路口红绿灯不知道怎么看，感谢一位路过的大妈。</p><p>晚上克制摆烂的欲望，坐下来学离散。</p><h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p>被告知两会期间不能向北京寄包裹。</p><p>在办公室继续听离散课，并着手做了布置的作业，比想象中的更费时间。小哥对此并无意见。</p><p>老舅微信问了成绩，听到我的回复后半天憋出一句安慰的话。</p><p>小哥劝我二战。</p><h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p>有一道作业题没做出来，陷入自我怀疑的羞耻感中，觉得离散未必能过了，想换成算法课水过去。但转念一想，学离散终归是学了点新东西，要是不过直接岩壁，顺理成章二战，柳暗花明。</p><p>左拐右拐终于要到了计算机系的全部课表和加课码，只可惜我已经要毕业了，不知道能不能私下卖点钱。不得不说现在大学还是有墙的，大家有默契地捂着这些资料不公开，自学很难成系统，有明白人带就是比隔着巨大信息差的自学的人便利许多。虽然这些话听着像是失败者保护自己的辩词就是了。</p><p>博客似乎被墙了，正值两会，不知道是不是暂时的。</p><p>和 Z_1 君约了后天的饭局，希望他大度点，尽东主之谊。</p><h2 id="六"><a href="#六" class="headerlink" title="六"></a>六</h2><p>午餐外卖，晚餐外卖。早餐糊弄了一根烤肠。</p><p>下午摆烂，晚上摆烂。没有早上。</p><h2 id="七"><a href="#七" class="headerlink" title="七"></a>七</h2><p>和 Z_1 君先去涮了火锅，提出 AA 被拒绝后我也没再坚持，确实没有钱了。</p><p>之后去了一家 exotic 的餐厅，简单点了两个点心开始捣电子台球。</p><p>和 Z_1 君聊了聊近况，无非是坦言了颓唐荒废之事，Z_1 君似有安慰之意。</p><p>谈到了几个中学同学，各有出路。谈到几个月前的北京，封控和放开。</p><p>途中路过俄罗斯文化中心，立着一个头颅小巧带着兜帽/头盔的雕像，Z_1 君猜测或许是加加林，不过转念想既然是文化中心，至少应该摆个普希金之类的。</p><p>回来的路上又想起自己的软弱，放纵自己一无所学，大一就打定了毕业自杀的主意，甚至签署了器官捐献的意愿声明（虽然现在看来很可能会给到老干部）。但现在我的想法已经有所改变，如果真的到了不可收拾的地步，我要凭我所能，换一个作恶的人；再不济，也至少要去伤害那些伤害过我的人。</p><p>现在挣扎着想要活下去，却觉得十分艰难。</p><p>忽而想起同班同校过很久的 L 君，可以说是身边的偶像了吧。听说去了很厉害的研究所，强力意志和恐怖的执行力，硬要说的话，和艾尔海森 PV 给我的感觉差不多。贯彻自己意志的强者，羡慕这种人。</p><h2 id="八"><a href="#八" class="headerlink" title="八"></a>八</h2><p>晚上注册了 chat-gpt ，很有意思，毕业论文有救了。</p><p>最近总觉得自己的心理越来越“女性化”。当然这么说是不太恰当的，在我们谈论某一对象的时候，最好能下一个准确的定义，否则两拨人很可能争论的都不是同一个东西。但日记里这么搞确实有点麻烦，这里我所谓的“女性化”就按大众语境所模糊意指的那些特征理解吧。</p><p>我得说这个“女性化心理”的形容多少带点打标签的偷懒意味。btw 我在网上观察到的部分 mtf ，至少按我个人理解，似乎就是痴迷于一种片面的标签式的“女性”生活经验。</p><p>我对自己的身体还是比较满意的，我认为它们是完整的，并没有认知上的偏差，性向也是随大流的异性恋。但同时又觉得如果能作为女性走完一生，以不同的视角看看这个世界，也可以是美好的体验。之前玩 genshin 时，（荧和paimon）被 npc 称呼“她们” “姐妹”，心瞬间被击中了。</p><p>胡乱写了一通，不知所云。</p><p>买了一个枕套。</p><h2 id="九"><a href="#九" class="headerlink" title="九"></a>九</h2><p>浅试了 chatgpt ，效果惊人。</p><h2 id="十"><a href="#十" class="headerlink" title="十"></a>十</h2><p>北京西戒严了，小哥很晚才到，我直接在办公室摸鱼。</p><p>最近有在做一些麻烦但是没有技术含量的工作。</p><h2 id="十一"><a href="#十一" class="headerlink" title="十一"></a>十一</h2><p>无事。</p><h2 id="十二"><a href="#十二" class="headerlink" title="十二"></a>十二</h2><p>在公交站台被传教了，道教。</p><p>一个挺和蔼的中年妇女，问我看过《道德经》没，口音不像北京人，头发有点乱糟，略略染了酱色。说《道德经》不是普通人能参透的，众妙之门，得去她的老师那学习。我简单应付两句，说是看过，但自己并不常住此地，这就要出发。她见如此，便叮嘱我闲下来一定要再多看看《道德经》，对人生有帮助的。</p><p>回了趟学校，校门口有家餐馆很好吃。</p><h2 id="十三"><a href="#十三" class="headerlink" title="十三"></a>十三</h2><p>下午躺床上很久，忍不住下来学了一点。</p><h2 id="十四"><a href="#十四" class="headerlink" title="十四"></a>十四</h2><p>早上被某人骚扰了一通电话，又把他的焦虑灌给我。</p><h2 id="十五"><a href="#十五" class="headerlink" title="十五"></a>十五</h2><p>回到北京已经挺晚，小哥直接让我今天不用来了，把表做给他就行，明天再来。</p><p>善。</p><h2 id="十六"><a href="#十六" class="headerlink" title="十六"></a>十六</h2><p>小哥说自己可以下班买两个饼，路上吃一个，晚上到家吃一个，这样就不会饿了。</p><p>天呐，你们公司在业内也算有名了吧，不要说出这么惹人同情的话啊(#`O′) 。</p><p>虽然有些冒犯，但这坚定了我不干这行的决心。</p><h2 id="十七"><a href="#十七" class="headerlink" title="十七"></a>十七</h2><p>开始学 python 。</p><p>把杂活哐哐干完下午四点半走了，摆烂到九点学了几页离散。这老师纯念 ppt ，很多细节就意思了一下，想要理解还得自己补充自己想。</p><h2 id="十八"><a href="#十八" class="headerlink" title="十八"></a>十八</h2><p>好困。</p><p><img src="https://bu.dusays.com/2023/03/09/64095c352b213.png" alt="31-1.png"></p><h2 id="十九"><a href="#十九" class="headerlink" title="十九"></a>十九</h2><p>又梦到色色的事了，很真实。这种事本来不值一提，但因为是梦中梦，只醒了一层，So … I messed it up.</p><p>起了个大早去参加学校的招聘会，人很多。彩印的简历虽然没什么内容，至少格式看着漂亮，昨天花了 4 块钱淘宝上买了一个网站的会员做的。</p><p>“同学你哪个专业的？”</p><p>“□□□□”</p><p>“不好意思我们目前没有这方面的岗位。”</p><p>姑且还是投出几份简历，敬候<del>佳音</del>噩耗。结束后有种没来由的踏实。</p><p>下午去面了一家企业的物流和人力，感觉总还是不太能指望。回来的路上一摸口袋发现没有带常带的护身符，呵，什么时候在泰山的庙里连手都不肯拱一拱的我也在乎起这个了。</p><h2 id="二十"><a href="#二十" class="headerlink" title="二十"></a>二十</h2><p>无事。</p><h2 id="二十一"><a href="#二十一" class="headerlink" title="二十一"></a>二十一</h2><p>考了四六级，很困，反正之前过了，这次随便写写得了。</p><h2 id="二十二"><a href="#二十二" class="headerlink" title="二十二"></a>二十二</h2><p>跟出租车司机聊了聊就业，他表示 211 的毕业生怎么也不会找不到工作。嗯，如果 ￥5/h 的活也能叫工作的话确实如此。因为我真的被人用“锻炼锻炼”为借口逼着干过这样的活，虽然干了 4 天我就跑路了，事后还被阴阳看不起穷人，我的天，又搞诚实贫民那一套，我看不起穷人？他才是最看不起穷人的人吧！</p><p>中午到班。</p><p>今天有点沉迷于人生的可能性了。就像《四叠半》展示的那样，要是在人生的关键选择上我选了另一条路，会不会就大有不同呢？这确是 durg 一样的设想。如果当时填志愿运气好点，或者不让那个人做主，选到计算机或者随便什么有点专业性的专业的话，想必现在不会如此窘迫罢。但真要细究的话，这样或有另一种可能也不一定：我选到了想学的专业——至少不是那种如同按下<code>Alt</code>和<code>Tab</code>后出现一大堆 excel，每个 excel 下面一排多到出现<code>...</code>的工作表，每个工作表里铺满密密麻麻的数据，点开一看是链接到各种乱七八糟地方的公式——的那种令人厌烦的专业，而不是现在这般的清闲专业，即使能够逼迫自己学习，也一定会因为不胜学业和家庭的双重压力而自杀吧。</p><p>我想现在最需要的是恋爱，一个斩断我胡思乱想的人，可社恐怎么会有这样的机会呢？</p><h2 id="二十三"><a href="#二十三" class="headerlink" title="二十三"></a>二十三</h2><p>下了个 epub 阅读器，地铁上刷刷书。</p><p>外派的项目终于结束了，明天到总部去。</p><p>试着使用了文章加密的插件，虽然可以完成加密的任务，但 <del>bug</del> 特性太多，强迫症完全不能接受，折腾半天无果只能放弃。被看光就看光吧，roll back.</p><h2 id="二十四"><a href="#二十四" class="headerlink" title="二十四"></a>二十四</h2><p>总部之前只来过一次。</p><p>室内空气很糟，像是几年没有通风。楼外过道的风倒是咋咋呼呼的，冻煞我也~</p><p>实习只剩几天了，公司不好再安排我进新项目，只干些诸如打印盖章之类的活，倒也清闲。直接在班上搓了几把王者。</p><p>偶然听得一耳朵，同行的 Z_2 君和对象分手了。</p><p>晚上的 python 课有一个测试错过了 -_-#</p><h2 id="二十五"><a href="#二十五" class="headerlink" title="二十五"></a>二十五</h2><p>今天工作的时候，秘书让我专门跑一趟竟然就为了替她搬点轻飘飘的书！拜托，虽然你看着不像是有什么力气的人，难道我看着就像吗？这点重量全部加起来基本上就是小学一个班作业的程度，而且不过是六个分开包装好的小方块，离你的工位只有十几步远，自己一个个运过去也不费时间吧。</p><p>下午一直在捣鼓 turtle ，画了个锅巴。这个比较好画，本来想搞兰那罗的。</p><p>今天办了离职。</p><h2 id="二十六"><a href="#二十六" class="headerlink" title="二十六"></a>二十六</h2><blockquote><p>悄悄的我走了，<br>正如我悄悄的来；<br>我挥一挥衣袖，<br>不带走一片云彩。</p></blockquote><p>虽然没有带走北京什么，但是北京带走了我的钱，除非昨天买的彩票能给我赢回来。</p><h2 id="二十七"><a href="#二十七" class="headerlink" title="二十七"></a>二十七</h2><p>没赢。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;来北京溜达溜达。&lt;/p&gt;
&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;北京西。&lt;/p&gt;
&lt;p&gt;上次来北京好像是久远的事。我感到困惑。&lt;/p&gt;
&lt;p&gt;行程不提。&lt;/p&gt;
&lt;p&gt;总之中午的时</summary>
      
    
    
    
    <category term="生活" scheme="https://loveofpeach.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="北京" scheme="https://loveofpeach.github.io/tags/%E5%8C%97%E4%BA%AC/"/>
    
  </entry>
  
  <entry>
    <title>旅游照片</title>
    <link href="https://loveofpeach.github.io/posts/e413b481.html"/>
    <id>https://loveofpeach.github.io/posts/e413b481.html</id>
    <published>2023-02-19T05:27:28.000Z</published>
    <updated>2023-02-19T13:22:30.145Z</updated>
    
    <content type="html"><![CDATA[<p>label是摄影，其实就是拿着手机随手拍。</p><p>有两张原图丢失，只有清晰度低的版本。</p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9baa2cc.jpg" alt="1.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b98e275a.jpeg" alt="2.jpeg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9c53029.jpg" alt="2dot5.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9b7ff7b.jpg" alt="2dot6.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9bd0ef5.jpg" alt="3.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b98e32bd.jpeg" alt="4.jpeg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9c9cf7c.jpg" alt="5.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9c7143f.jpg" alt="5dot5.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9ca0346.jpg" alt="6.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9b8a1d7.jpg" alt="7.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9ce2757.jpg" alt="8.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21b9ce1f1a.jpg" alt="9.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e4170397.jpg" alt="m1.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e41e0820.jpg" alt="m2.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e43d7573.jpg" alt="m3.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e3d78a80.jpg" alt="m4.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e4244e56.jpg" alt="m5.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e40e4455.jpg" alt="m6.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e42bd7e7.jpg" alt="m7.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e4121bd7.jpg" alt="m8.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e4384d6b.jpg" alt="m9.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e431dc22.jpg" alt="m10.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e463cd07.jpg" alt="m11.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e4942f8b.jpg" alt="m12.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e489ea04.jpg" alt="m13.jpg"></p><p><img src="https://bu.dusays.com/2023/02/19/63f21e49afc4a.jpg" alt="m14.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;label是摄影，其实就是拿着手机随手拍。&lt;/p&gt;
&lt;p&gt;有两张原图丢失，只有清晰度低的版本。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2023/02/19/63f21b9baa2cc.jpg&quot; alt=&quot;1.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="生活" scheme="https://loveofpeach.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="摄影" scheme="https://loveofpeach.github.io/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>优菲的笔记</title>
    <link href="https://loveofpeach.github.io/posts/7145501b.html"/>
    <id>https://loveofpeach.github.io/posts/7145501b.html</id>
    <published>2023-02-08T10:00:58.000Z</published>
    <updated>2023-02-08T10:08:48.008Z</updated>
    
    <content type="html"><![CDATA[<p>致我最可爱的女儿婕德：</p><p>给你一千个拥抱，一千个吻，愿不变的月光赐你一千种幸福，愿专权的烈日唯独宽宥你，宠爱你！</p><p>等你读到这一页的时候，想必一定长成一个聪明漂亮的大姑娘了吧？</p><p>我希望你知道，这天夜里，我正在这里想象着你亭亭玉立的样子，继承了我的智慧与美貌和你父亲的坚韧与执拗，我想象着你身穿教令院毕业服的样子，想象着你作为一家之主的骄傲模样，想象着我和哲伯莱勒已经老去，看着你正度过最幸福的生活…</p><p>哈哈，我知道你是什么想法，你这个坏姑娘！你一定是想要把这些话读给我听，故意要我难堪吧！</p><p>即使那样，我也希望你能看到，我曾写下过这些期许与祝福，我曾幻想过这样的幸运。</p><p>真是奇怪，这个本子原本是学术笔记才对！我却不知不觉写满了对你的期望…唉，做了母亲，就会这样多愁善感吗？</p><p>真希望有这样一天，我们会为彼此感到骄傲——即使命运的风把我们的沙丘刮得一团糟，让我们失却了一切美好期望…我也希望你能看着我的眼睛，告诉我，我这个没经验的母亲带给你的…并不全然是遗憾。</p><p>对不起，我没能给你最好的家。</p><p>但能成为你的母亲，哲伯莱勒的妻子，我非常开心。</p><p>唉，真是的。在我写下这篇日记时，小小的你还在我的怀里不停地捣乱，用黝黑的小手蘸着墨汁，给自己画大花脸…你是想要做小画家吗？还是想要为妈妈驱走噩梦，吓退夜晚沙漠中游荡的妖灵呢？</p><p>好啦，睡吧，睡吧，我的小羚羊。</p><p>让我记录下这首让你安然入睡的歌谣，希望你能记住它，就像你记住我那样：</p><p>群星升起在荒原之上，<br>夜莺也厌倦了时日的无穷，<br>是时候摘下蔷薇的冠冕，<br>洗去俗世的尘土，用葡萄的酒浆。</p><p>睡吧，睡吧，<br>永恒的绿洲将迎接孤独的游子，<br>在这里流淌着清冽的澧泉，<br>在这里记忆永远甘甜。</p><p>睡吧，睡吧，<br>黄金的梦乡在召唤流浪的沙子，<br>在这里不必将那苦涩的盐水掬饮，<br>在这里不会再有明日的愁肠。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;致我最可爱的女儿婕德：&lt;/p&gt;
&lt;p&gt;给你一千个拥抱，一千个吻，愿不变的月光赐你一千种幸福，愿专权的烈日唯独宽宥你，宠爱你！&lt;/p&gt;
&lt;p&gt;等你读到这一页的时候，想必一定长成一个聪明漂亮的大姑娘了吧？&lt;/p&gt;
&lt;p&gt;我希望你知道，这天夜里，我正在这里想象着你亭亭玉立的样子，</summary>
      
    
    
    
    <category term="转载" scheme="https://loveofpeach.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="acg" scheme="https://loveofpeach.github.io/tags/acg/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络笔记</title>
    <link href="https://loveofpeach.github.io/posts/db0b4310.html"/>
    <id>https://loveofpeach.github.io/posts/db0b4310.html</id>
    <published>2023-02-01T09:21:58.000Z</published>
    <updated>2023-02-04T02:55:29.840Z</updated>
    
    <content type="html"><![CDATA[<p>以后填坑。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以后填坑。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="笔记" scheme="https://loveofpeach.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网络" scheme="https://loveofpeach.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>P6175 无向图的最小环问题</title>
    <link href="https://loveofpeach.github.io/posts/a050ca88.html"/>
    <id>https://loveofpeach.github.io/posts/a050ca88.html</id>
    <published>2023-01-31T12:13:41.000Z</published>
    <updated>2023-03-06T08:17:43.129Z</updated>
    
    <content type="html"><![CDATA[<p>提交入口：<a href="https://www.luogu.com.cn/problem/P6175">https://www.luogu.com.cn/problem/P6175</a></p><p>网上没找到满意的题解，大佬们微言大义，不是很能看懂。我在这里留下分析的大致思路，不保证正确，欢迎讨论。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一张无向图，求图中一个至少包含 $3$ 个点的环，环上的节点不重复，并且环上的边的长度之和最小。该问题称为无向图的最小环问题。在本题中，你需要输出最小的环的边权和。若无解，输出 <code>No solution.</code>。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行两个正整数 $n,m$ 表示点数和边数。</p><p>接下来 $m$ 行，每行三个正整数 $u,v,d$，表示节点 $u,v$ 之间有一条长度为 $d$ 的边。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出边权和最小的环的边权和。若无解，输出 <code>No solution.</code>。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br><span class="line">1 4 1</span><br><span class="line">1 3 300</span><br><span class="line">3 1 10</span><br><span class="line">1 2 16</span><br><span class="line">2 3 100</span><br><span class="line">2 5 15</span><br><span class="line">5 3 20</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">61</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>样例解释：一种可行的方案：$1-3-5-2-1$。</p><p>对于 $20\%$ 的数据，$n,m \leq 10$。</p><p>对于 $60\%$ 的数据，$m\leq 100$。</p><p>对于 $100\%$ 的数据，$1\le n\leq 100$，$1\le m\leq 5\times 10^3$，$1 \leq d \leq 10^5$。</p><p><strong>无解输出包括句号。</strong></p><hr><h2 id="分析-amp-代码"><a href="#分析-amp-代码" class="headerlink" title="分析 &amp; 代码"></a>分析 &amp; 代码</h2><h3 id="错误思路"><a href="#错误思路" class="headerlink" title="错误思路"></a>错误思路</h3><p>本题不存在优于$O(n^3)$很多的算法，请停止无谓的尝试。</p><p>不过在尝试的过程中我也理解了一些东西…改动的<code>tarjan</code>部分也许可以记一下，所以还是决定贴出来备忘。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MIN(a,b) ((a)&lt;(b)?(a):(b))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">103</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm = <span class="number">5003</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x7fffffff</span>;</span><br><span class="line"><span class="type">int</span> head[maxn],tot,depth[maxn],fa[maxn],fa2[maxn],dis[maxn][maxn];</span><br><span class="line"><span class="type">int</span> low[maxn],dfn[maxn],stac[maxn],num,ans,n,m,top,uset[maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;<span class="type">int</span> v,w,next;&#125;edge[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">bool</span> vis[maxn],ins[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">makeset</span><span class="params">(<span class="type">int</span> size)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++)uset[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x!=uset[x])uset[x]=<span class="built_in">find</span>(uset[x]);</span><br><span class="line">    <span class="keyword">return</span> uset[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">unionset</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    x=<span class="built_in">find</span>(x);</span><br><span class="line">    y=<span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span>;</span><br><span class="line">    uset[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">addedge</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span>&#123;</span><br><span class="line">    edge[++tot].v=y;</span><br><span class="line">    edge[tot].w=z;</span><br><span class="line">    edge[tot].next=head[x];</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    low[x]=dfn[x]=++num;</span><br><span class="line">    stac[++top]=x; ins[x]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=head[x];i;i=edge[i].next)&#123;</span><br><span class="line">        <span class="type">int</span> y=edge[i].v;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[y])&#123;</span><br><span class="line">            fa2[y]=x;</span><br><span class="line">            <span class="built_in">tarjan</span>(y);</span><br><span class="line">            low[x]=<span class="built_in">MIN</span>(low[x],low[y]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ins[y]&amp;&amp;y!=fa2[x])&#123;</span><br><span class="line">            low[x]=<span class="built_in">MIN</span>(low[x],dfn[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dfn[x]==low[x])&#123;</span><br><span class="line">        <span class="type">int</span> y;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            y=stac[top--];</span><br><span class="line">            ins[y]=<span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">unionset</span>(x,y);</span><br><span class="line">        &#125;<span class="keyword">while</span>(x!=y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> dep)</span></span>&#123; <span class="comment">//可能有重边</span></span><br><span class="line">    vis[x]=<span class="literal">true</span>;</span><br><span class="line">    depth[x]=dep;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=head[x];i;i=edge[i].next)&#123;</span><br><span class="line">        <span class="type">int</span> y=edge[i].v;</span><br><span class="line">        <span class="keyword">if</span>(!vis[y])&#123;</span><br><span class="line">            fa[y]=x;</span><br><span class="line">            <span class="built_in">dfs</span>(y,depth[x]+dis[x][y]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(y!=fa[x]&amp;&amp;(depth[x]-depth[y]&gt;<span class="number">0</span>)&amp;&amp;(<span class="built_in">find</span>(x)==<span class="built_in">find</span>(y)))&#123;</span><br><span class="line">            ans=<span class="built_in">MIN</span>(ans,dis[x][y]+depth[x]-depth[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    ans=INF;</span><br><span class="line">    <span class="built_in">makeset</span>(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x,y,z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        <span class="keyword">if</span>(x==y)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(z&lt;dis[x][y]||(!dis[x][y]))&#123;</span><br><span class="line">            <span class="built_in">addedge</span>(x,y,z);</span><br><span class="line">            <span class="built_in">addedge</span>(y,x,z);</span><br><span class="line">            dis[x][y]=dis[y][x]=z;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i])<span class="built_in">tarjan</span>(i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> s=<span class="number">1</span>;s&lt;=n;s++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(fa,<span class="number">0</span>,<span class="built_in">sizeof</span>(fa));</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="built_in">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">memset</span>(depth,<span class="number">0</span>,<span class="built_in">sizeof</span>(depth));</span><br><span class="line">        <span class="built_in">dfs</span>(s,<span class="number">0</span>); <span class="type">int</span> i=s+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i])<span class="built_in">dfs</span>(i,<span class="number">0</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> j=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;s)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j])<span class="built_in">dfs</span>(j,<span class="number">0</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ans==INF)<span class="built_in">printf</span>(<span class="string">&quot;No solution.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下数据将得不到正确答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">5 10</span><br><span class="line">4 2 3</span><br><span class="line">5 2 5</span><br><span class="line">3 4 2</span><br><span class="line">5 3 4</span><br><span class="line">2 3 3</span><br><span class="line">1 5 5</span><br><span class="line">2 1 1</span><br><span class="line">5 4 2</span><br><span class="line">1 4 2</span><br><span class="line">1 3 4</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/01/31/63d90cdbe1f01.jpg" alt="27-1.jpg" title="其实就是五芒星，这样画便于展示"></p><p>原因在于，上面那个算法假了，想要穷尽所有情况，复杂度还得上一维，且常数巨大。</p><h3 id="正确思路"><a href="#正确思路" class="headerlink" title="正确思路"></a>正确思路</h3><p><strong>定义：</strong> 设 $R_{i,j,k}$ 为经过编号为$i$，$j$，$k$ 节点的最小环。</p><p>$R_{i,j,k}$ 可以不存在。</p><p>考虑集合 $Ring=\{ R_{i,j,k}|1\leqslant i&lt;j&lt;k \leqslant n \}$ ，我们指出，符合题目要求的最小环 $r\in Ring$ 。</p><p><strong>证明：</strong> $r$ 的节点数大于等于3，任取其中3个$a$，$b$，$c$ ，不妨设$a&lt;b&lt;c$。因为 $r$ 是全图中最小的环，所以 $r$ 也是经过 $a$，$b$，$c$ 的最小环。则 $r=R_{a,b,c}\in Ring$ ，证毕。</p><p>于是在算法上，只需要枚举集合 $Ring$ ，并不断更新<code>ans</code>。这提示我们从$floyd$考虑。简述$floyd$算法如下：</p><blockquote><p>设$D_{i,j,k}$为 $i$ 到 $j$ 的只以 $(1…k)$ 集合中的节点为中间节点的最短路长度。<br>若最短路经过点 $k$，则$D_{i,j,k}=D_{i,k,k-1}+D_{k,j,k-1}$<br>若最短路不经过点 $k$，则$D_{i,j,k}=D_{i,j,k-1}$<br>因此，$D_{i,j,k}=\mathrm{min}(D_{i,j,k-1},D_{i,k,k-1}+D_{k,j,k-1})$</p></blockquote><p>先给出代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MIN(a,b) ((a)&lt;(b)?(a):(b))</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> LL INF = <span class="number">1e13</span>+<span class="number">3</span>;</span><br><span class="line">LL n,m,ans=INF;</span><br><span class="line">LL dis[<span class="number">103</span>][<span class="number">103</span>],mcopy[<span class="number">103</span>][<span class="number">103</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="keyword">if</span>(i!=j)dis[i][j]=mcopy[i][j]=INF;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        LL x,y,z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        dis[x][y]=dis[y][x]=<span class="built_in">MIN</span>(dis[x][y],z);</span><br><span class="line">        mcopy[x][y]=mcopy[y][x]=dis[x][y];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;k;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;k;j++) <span class="comment">//k=2时也不会执行</span></span><br><span class="line">                ans=<span class="built_in">MIN</span>(ans,dis[i][j]+mcopy[j][k]+mcopy[k][i]);      </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">                dis[i][j]=dis[j][i]=<span class="built_in">MIN</span>(dis[i][j],dis[i][k]+dis[k][j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ans==INF)<span class="built_in">printf</span>(<span class="string">&quot;No solution.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这看起来有点奇怪。记住我们的目标是枚举集合$Ring$，这里解释以下核心代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//for循环首次不满足条件便退出</span></span><br><span class="line"><span class="comment">//奇怪的现象，不知道自己为什么会为此产生疑问</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;k;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;k;j++) <span class="comment">//k=2时也不会执行</span></span><br><span class="line">            ans=<span class="built_in">MIN</span>(ans,dis[i][j]+mcopy[j][k]+mcopy[k][i]);      </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            dis[i][j]=dis[j][i]=<span class="built_in">MIN</span>(dis[i][j],dis[i][k]+dis[k][j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先，由枚举顺序，已经有 $1\leqslant i&lt;j&lt;k \leqslant n$ 。</p><p>在Floyd枚举k的时候，已经得到了 $i,j (1\leqslant i\ne j \leqslant n)$ 只以 $\{ 1,…,k-1\}$ 集合中的节点为中间节点的最短路长度 $D_{i,j,k-1}$，它在代码中就是<code>dis[i][j]</code>。</p><p>为什么第6行<code>dis[i][j]</code>加的是<code>mcopy[][]</code>？</p><p>从生成的角度去理解它：k要在环中，必然要从k中伸出边，设伸出的两个边连的点是 i 和 j 。那么 $D_{i,j,k-1}$ 加上两个边的长度就是环的长度。而这两个边是原始数据输入的长度。</p><p>一个可能的疑惑：$D_{i,j,k-1}$ 不是 $D_{i,j,n}$ ，为什么要这样，直觉上用$D_{i,j,n}$ 不是更好吗？</p><p>答案是不能且不必要：</p><ul><li>若 $D_{i,j}$ 经过 k 点，不成环，使用$D_{i,j,n}$ 会得到错误答案。因此不能。</li><li>若 $D_{i,j}$ 不经过 k 及编号以后的点，$D_{i,j,n}=D_{i,j,k-1}$，</li><li>若 $D_{i,j}$ 经过 k 以后的点，考虑下图：<img src="https://bu.dusays.com/2023/02/01/63d9d029eb381.png" alt="27-2.png"> 这里需要反过来考虑：设 $p$ 为 $D_{i,j}$ 经过的最大的节点编号，则就长度而言 $R_{i,j,k}\geqslant R_{i’,j’,p}$ （这里$R_{i’,j’,p}$的存在性已经保证），因为 $D_{i’,j’}\leqslant \mathrm{len}\{i’,i,k,j,j’ \}$ 。而在后面的计算中，$R_{i’,j’,p}$ 会被计算到，如果合适，它会作为更优解更新<code>ans</code>。</li></ul><p>顺带一提，集合 $Ring$ 中所有元素都会被枚举到。</p><script type="math/tex; mode=display">\mathcal{THE}\quad \mathcal{END}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;提交入口：&lt;a href=&quot;https://www.luogu.com.cn/problem/P6175&quot;&gt;https://www.luogu.com.cn/problem/P6175&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网上没找到满意的题解，大佬们微言大义，不是很能看懂。我在这里留下分</summary>
      
    
    
    
    <category term="做题" scheme="https://loveofpeach.github.io/categories/%E5%81%9A%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://loveofpeach.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>产假问题所想到的</title>
    <link href="https://loveofpeach.github.io/posts/2cbce842.html"/>
    <id>https://loveofpeach.github.io/posts/2cbce842.html</id>
    <published>2023-01-23T09:58:08.000Z</published>
    <updated>2023-02-11T15:05:35.674Z</updated>
    
    <content type="html"><![CDATA[<p>在我所学的无法在现代社会中掌握专业技能的专业的某门专业课上，我曾想过一种设计，一种尝试解决产假问题的机制。虽然后来被我否定，它不成熟且欠考虑，也许幼稚，但我已克服了为自己尴尬和替别人尴尬的毛病，因此我将忠实地记录思考它的过程。</p><p>因为正好有毕业论文的要求，我拟题时曾向指导老师提起过：</p><blockquote><p>题目：现代企业的产假管理（暂定）</p><p>简述：在□□□□□□这门课中我了解到『pool』的概念，我想将这个概念运用到产假管理的方面。人们在休产假前，可通过为同单位的在休人员分担工作，积累额外工作天数，这个天数在需要休产假时可以取出。它的目标是促进两性就业机会的平等并为年轻家庭的生育提供保障。</p><p>以下是暂时想到的：</p><ol><li>个人在pool中积累的天数由社会公共机构把持，不随工作变更清空。</li><li>取出天数休产假时，由男女双方的数据计算总天数。为促进两性平等的就业机会、保障家庭的生育过程，男方也休产假（尽管天数未必相等）。</li><li>为防止就业时的歧视，该天数在正式录用前对招聘单位不可见。</li><li>若将在休人员的工作划分为不同模块由不同人员分担，需要设计额外工作天数的计算方法。</li><li>可以提前预支天数，但在产假后需在一定时期内偿完。该措施为不同选择的人群提供更加人性化的休假方式。</li></ol><p>论文会结合本专业所学的知识，作具体的、既有定性又有定量的分析。</p></blockquote><p><img src="https://bu.dusays.com/2023/01/25/63d13994236e5.png" alt="26-1"></p><p>当时我得到的被拒答复是：</p><blockquote><p>“从年龄性别和人生经验的角度，我觉得你做起来有难度，而且对本科生这个题目看起来过于醒目，容易被人关注。”</p></blockquote><p>老师的意见中肯委婉。想思考社会问题必须增长见识、丰富阅历，去学习先进国家的成功经验，去总结过去的失败教训，不能沉溺于无用的空想。但我囿于自身原因，暂时无法做到这些。</p><p>不过我也有没告诉老师的。在那门课上摸鱼乱想时，我已经否定了自己的设想。之所以还要交这个题目，是因为我实在不知道写什么好了。</p><p>该设想的最大问题是，它实质上没有解决『它想要解决的问题』。这是一个隐含的问题（或者你也可以说“隐式的”？），即“既要又要”的问题——在某种隐秘的语境下，该设想似乎是想做到既给大家放产假，又不想耽误经济发展。</p><p>但这是不可能的。</p><p>仔细想想，我上面所作的设计最多只是一种产假在休人员撂下的工作的分配方案。而类似用途的方案，实际上在各个单位、公司里都有自己的做法和规定，它们也许粗放、不公平、设计不合理，但确实是有的。</p><blockquote><p>不过也有雇佣年轻人的老板，只希望员工作为“人矿”在最年轻的时候出最多的力，至于由此带来的生理心理上的恶果——超过一定年龄开了就好了。甚至有不少以折磨人为乐的人，就是不想给你放假，就是不想看你闲着。这里我不得不得出扫兴的结论：比起制度的设计和改良，现今社会更先需要的是价值的共识。但这不是论证的重点，不谈。</p></blockquote><p>更进一步，社会是分工的，术业有专攻，让一个人分担他人的工作，效率的降低是不可避免的。即便是同质的工作，让一个人承担过多也必然导致效率的下降。因此不存在『既要又要』的解决方案，想要放产假，支付成本是必须的。</p><p>这里会转向一种价值选择，即要经济还是要产假？</p><p>我的回答是要产假。更长的产假、更普惠的产假、包含两性双方的产假。</p><p>在说明为什么要产假之前，首先需要驳斥一种短视的、透着酸气的实用主义。出于一种共产政权下颇具代表性的急功近利心态，社会上有不少人相信（至少是声称），休息和娱乐会腐化群众，他们必须努力地工作。如果我说人们需要远比现在多的多的空闲时间——哪怕是穷人，一定会有不少人无法理解吧。打个未必恰当的比方，他们就好比只会用功而不知休息的学生一样，走向内卷和低效，最后成为<code>frustrated students</code>，<code>frustrated men</code> &amp; <code>frustrated women</code>。</p><p>当然，虽然也有“磨刀不误砍柴工”“休息是为了更好地工作”之类的说法鼓励人们休息，列宁也说过“会休息的人，才会工作”，但这些说法带着值得玩味的目的。因为它们最终又回到“工作”上去，休息是为了工作，如果不以“能更好地工作”为前提，休息便是可耻的罪恶。这种说法彷佛是对人类肉体的无奈妥协，如果真如宣传所言有“钢铁的意志、钢铁的身躯”，恐怕这种道德——以前是封建道德现在是共产道德，会要求人们为了一个飘渺的欺骗的目标而一直工作下去吧。同时这些话带着略恐怖的意味，以着一种类似于大家都是热爱劳动的同志的身份，默认听者“喜欢工作”——必须如此，工作是你的道德。</p><p>但休息就是休息，休息和娱乐有自身的重要意义。人是需要休息和娱乐的，勤勉工作本身并不幸福，承认人类的不理性才是最大的理性。可现在，极端的实用主义和焦虑不安的情绪充斥着中国社会的每个角落，哪怕幼儿园的小孩都不能尽情玩耍。除非有良好的家庭氛围或者深刻的自我反思和教育，这种焦虑感一定会在人身上留下烙印——缺少休息和娱乐正让人们变得残忍。</p><blockquote><p>节选自《谁能够筑墙垣，围得住杜鹃》：<br>艰难给个人造成的最大伤害，是忘记什么是美好：认为美好是不存在的，进而站在了施虐的一方；或者把艰难视为美好，开始热爱受虐。两者又是一体的，朱英诞曾在文章中谈到过“虐他狂和自虐狂”（《余波》，一九七五）。摆脱这种困境的方式是在艰难中保有美好。当艰难唤起的不是恶，而是美好，恶就失败了。“美好出艰难”不是美化艰难，不是盲目乐观，而是承认艰难，并对人性保有信心。在那个人心惟危的时代，朱英诞接着写道：<br><strong>我们漂流在奇异的海洋里；</strong><br><strong>一个小岛，那么美丽而寂寞，</strong><br><strong>两个陌生者相遇也会握手言欢，</strong><br><strong>他们将于此重建家园。</strong></p></blockquote><p>然而，“在艰难中保有美好”对人性还是苛求了些。我们应当破除艰难，或者至少在艰难中创造喘息的余地。仔细翻阅一个模板式中国人的人生，TA好像一直在忙，而很少真正休息过：忙完学业忙工作，边忙工作边忙结婚，然后生养，又要操心下一代的人生直到孩子们也有了孩子，也许还要为照顾孙辈搭把手，等闲下来的时候自己已经老了，同时很可能捞着个麻烦但还不致命的病。我主张产假，正是要给人们<strong>一个有保障的心灵躺平的机会</strong>，一个为人生按下<code>pause</code>的机会。trust me bro, it works. 只有在这种时间里，人才有余裕收拾自己的心情。而且产假也是相对较好的“躺平”时机，以中国高度竞争的现状而言，太早躺平损失严重，再后则没有多少机会了。</p><p>最后，需要回应一个潜在的争议，即怀孕对于女性来说是负担，因而产假中女性可能无法得到上文提到的“收拾自己的心情”的机会。对此：</p><ol><li>无论产假中女性是否缓解了焦虑，产假都是必须的，这是一个不会更坏的方案。</li><li>我在上文提到要“更长的产假”，它既包括向前的延长，也包括向后的。</li><li>前面已经说过，产假提供了一个有保障的心灵躺平的机会，而机会是要自己争取的。能否得到放松与个人的精神境界有关，在人有认知的时刻起就不可能一点压力也没有了。</li><li>肉体的痛苦确实难耐，但心灵的痛苦更持久且较为无解。本文关注更多的是精神层面的疗愈。</li></ol><script type="math/tex; mode=display">\mathcal{THE}\quad \mathcal{END}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在我所学的无法在现代社会中掌握专业技能的专业的某门专业课上，我曾想过一种设计，一种尝试解决产假问题的机制。虽然后来被我否定，它不成熟且欠考虑，也许幼稚，但我已克服了为自己尴尬和替别人尴尬的毛病，因此我将忠实地记录思考它的过程。&lt;/p&gt;
&lt;p&gt;因为正好有毕业论文的要求，我拟题</summary>
      
    
    
    
    <category term="观点" scheme="https://loveofpeach.github.io/categories/%E8%A7%82%E7%82%B9/"/>
    
    
    <category term="诡辩" scheme="https://loveofpeach.github.io/tags/%E8%AF%A1%E8%BE%A9/"/>
    
  </entry>
  
  <entry>
    <title>BOI2009 Radio Transmission</title>
    <link href="https://loveofpeach.github.io/posts/ac682fe9.html"/>
    <id>https://loveofpeach.github.io/posts/ac682fe9.html</id>
    <published>2023-01-22T14:49:40.000Z</published>
    <updated>2023-02-01T15:18:23.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个字符串 $s_1$，它是由某个字符串 $s_2$ 不断自我连接形成的。但是字符串 $s_2$ 是不确定的，现在只想知道它的最短长度是多少。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行一个整数 $L$，表示给出字符串的长度。 </p><p>第二行给出字符串 $s_1$ 的一个子串，全由小写字母组成。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>仅一行，表示 $s_2$ 的最短长度。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">cabcabca</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><h3 id="样例输入输出-1-解释"><a href="#样例输入输出-1-解释" class="headerlink" title="样例输入输出 1 解释"></a>样例输入输出 1 解释</h3><p>对于样例，我们可以利用 $\texttt{abc}$ 不断自我连接得到 $\texttt{abcabcabc}$，读入的 $\texttt{cabcabca}$，是它的子串。</p><h3 id="规模与约定"><a href="#规模与约定" class="headerlink" title="规模与约定"></a>规模与约定</h3><p>对于全部的测试点，保证 $0 &lt; L \le 10^6$。</p><hr><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我首先想到的是二分答案，但仔细想想不太可行。</p><p>样例中<code>cab</code>首尾相接，各不相同，next全0，而后一直增加，这大概可以从next数组考虑。于是打表找规律。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abcdabcdab</span><br><span class="line">0000123456</span><br></pre></td></tr></table></figure><p>猜想大概是要找后面的<code>123456...</code>，而答案就是前面0的个数，因为abcd各不相同，而循环节之后next数组就应该一直增加。</p><p>但这只是循环节各不相同的简单情形，如果有相同的呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xbbxbbx</span><br><span class="line">0001234</span><br></pre></td></tr></table></figure><p>嗯，好像也一样。那这样呢：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abaabaab</span><br><span class="line">00112345</span><br></pre></td></tr></table></figure><p>事情正起变化，因为循环节本身的结构，<code>123456...</code>前面不全是0了，但可喜可贺这似乎不是很影响，我们只要修正已有的结论：答案是<code>123456...</code>前面元素的个数。这里有一个trick，其实答案就是<code>123456...</code>中<code>1</code>的位置（下标从0开始算）。</p><p>但是，有一个很讨厌的情况！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abaabaak</span><br><span class="line">00112340</span><br></pre></td></tr></table></figure><p>这个时候答案是多少呢？根据题意我们只能把整个<code>abaabaak</code>作为循环节了，因此答案是<code>8</code>。这似乎只要加个特判？并非如此，因为next数组递减不一定是减到0，所以还有其他情况，结论需要大修特修。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">position   0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15</span><br><span class="line">    next   0  0  0  0  1  2  3  1  2  3  4   5   6   7   4   0</span><br><span class="line"> content   a  g  c  t  a  g  c  a  g  c  t   a   g   c   t   g</span><br></pre></td></tr></table></figure><p>上面这个例子就包含很多了。结论是令ans为next数组中第一个1的位置，在后续的扫描中若next数组递减，则更新<code>ans=pos-next[pos]+1</code>。</p><p>回顾之前的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abaabaab</span><br><span class="line">00112345</span><br></pre></td></tr></table></figure><p>为追求形式的统一，将结论进一步修正为：令ans为next数组中第一个1的位置，在后续的扫描中若next数组不增，则更新<code>ans=pos-next[pos]+1</code>。</p><p>这个结论的原理其实就在next数组的定义中，这里不展开。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXL = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">char</span> s1[MAXL];</span><br><span class="line"><span class="type">int</span> mynext[MAXL], L;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getNext</span><span class="params">()</span></span>&#123; <span class="comment">//前置知识点，next数组</span></span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    mynext[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;L; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; s1[i]!=s1[j]) j=mynext[j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s1[j]) j++;</span><br><span class="line">        mynext[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;L,s1); <span class="comment">//C风格字符串</span></span><br><span class="line">    <span class="keyword">if</span>(L==<span class="number">1</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125; <span class="comment">//特判</span></span><br><span class="line">    <span class="built_in">getNext</span>();</span><br><span class="line">    <span class="type">int</span> pos = <span class="number">0</span>, ans = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!mynext[pos])&#123;</span><br><span class="line">        pos++;</span><br><span class="line">        <span class="keyword">if</span>(pos == L)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,L); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;<span class="comment">//指向尾后，next全0</span></span><br><span class="line">    &#125;</span><br><span class="line">    ans = pos; <span class="comment">//此时pos指向next数组中第一个1</span></span><br><span class="line">    <span class="keyword">for</span>(; pos&lt;L; pos++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mynext[pos] &lt;= mynext[pos<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="comment">//next数组第一个一定是0，所以不会越界</span></span><br><span class="line">            ans = pos-mynext[pos]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给你一个字符串 $s_1$，它是由某个字符串 $s_2$ 不断自我连接形成的。但是字符串 $s_2$ 是不确定的，现在只想知</summary>
      
    
    
    
    <category term="做题" scheme="https://loveofpeach.github.io/categories/%E5%81%9A%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://loveofpeach.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo踩坑记录</title>
    <link href="https://loveofpeach.github.io/posts/2b780dd.html"/>
    <id>https://loveofpeach.github.io/posts/2b780dd.html</id>
    <published>2023-01-14T04:49:42.000Z</published>
    <updated>2023-03-01T14:57:40.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="live2d和aplayer"><a href="#live2d和aplayer" class="headerlink" title="live2d和aplayer"></a>live2d和aplayer</h2><p>有时加载会很慢或者无法加载，这可能只是live2d和aplayer自身的问题。尤其是aplayer，偶尔会有几天在任何设备上都无法加载（我只遇到过一次）。</p><p>注意如果要使用网易的服务，要写成<code>data-server=&quot;netease&quot;</code>，我这里因为不知道网易的英文名试了半天 -_-#</p><h2 id="Gitalk加载失败"><a href="#Gitalk加载失败" class="headerlink" title="Gitalk加载失败"></a>Gitalk加载失败</h2><p>Gitalk配置完成之后，仍有可能无法加载。这是因为其部分服务在墙外，需要翻墙访问文章页面以创建issue。之后即使不翻墙也可正常显示。</p><h2 id="MathJax渲染失败"><a href="#MathJax渲染失败" class="headerlink" title="MathJax渲染失败"></a>MathJax渲染失败</h2><p>Hexo默认使用<code>hexo-renderer-marked</code>引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签，会产生语义冲突。</p><p>解决方案：更换Hexo的markdown渲染引擎。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>接下来到博客根目录下，找到<code>node_modules\kramed\lib\rules\inline.js</code>，把第11行的escape变量的值做相应的修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//  escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">  escape: /^\\([`*\[\]()#$+\-.!_&gt;])/</span><br></pre></td></tr></table></figure><p>同时把第20行的em变量也要做相应的修改:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line">  em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span><br></pre></td></tr></table></figure><p>重新启动hexo即可。</p><p><strong>问题（未解决）：</strong> 在 Hexo 中使用 MathJax 渲染数学公式时，行内公式可能会遇到左撇被渲染成右撇的问题。这是因为 MathJax 默认使用美国数学协会（American Mathematical Society，简称 AMS）的数学符号字体，而该字体中的左撇和右撇是相反的。</p><h2 id="代码缩进混乱"><a href="#代码缩进混乱" class="headerlink" title="代码缩进混乱"></a>代码缩进混乱</h2><p>这是tab缩进的问题。</p><p>找到站点配置文件中<code>tab_replace</code>，设置<code>tab_replace: &#39;    &#39;</code>（4个空格）即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;live2d和aplayer&quot;&gt;&lt;a href=&quot;#live2d和aplayer&quot; class=&quot;headerlink&quot; title=&quot;live2d和aplayer&quot;&gt;&lt;/a&gt;live2d和aplayer&lt;/h2&gt;&lt;p&gt;有时加载会很慢或者无法加载，这可能只是liv</summary>
      
    
    
    
    <category term="杂" scheme="https://loveofpeach.github.io/categories/%E6%9D%82/"/>
    
    
    <category term="hexo" scheme="https://loveofpeach.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理笔记</title>
    <link href="https://loveofpeach.github.io/posts/aae04aa8.html"/>
    <id>https://loveofpeach.github.io/posts/aae04aa8.html</id>
    <published>2023-01-12T14:27:45.000Z</published>
    <updated>2023-05-04T13:03:44.927Z</updated>
    
    <content type="html"><![CDATA[<p>（学校老师的PPT写的相当之垃圾，等会换一个网上的教程，以下笔记作废）</p><p>课程学习要求：</p><ul><li>理解单处理器计算机系统中各部件的内部<strong>工作原理、组成结构以及相互连接方式</strong>，具有完整的计算机系统的<strong>整机概念</strong>。</li><li>理解计算机系统层次化结构概念、熟悉硬件与软件之间的界面，掌握<strong>指令集体系结构</strong>的基本知识和基本实现方法。</li><li>能够综合运用计算机组成的基本原理和基本方法，对有关计算机硬件系统中的理论和实际问题进行计算、分析，对有一些基本部件进行<strong>简单设计</strong>；并能对高级程序设计语言（<strong>C语言</strong>）中的相关问题进行<strong>分析</strong>。</li><li>重点：<strong>Cache基本原理、Cache访问，虚拟存储器</strong>，CPU，流水线</li></ul><p>其他参考资料：</p><ul><li>唐朔飞. 计算机组成原理. 高等教育出版社</li><li>王诚等. 计算机组成与系统结构. 清华大学出版社</li><li>白中英. 计算机组成原理. 科学出版社</li></ul><h2 id="计算机系统概述"><a href="#计算机系统概述" class="headerlink" title="计算机系统概述"></a>计算机系统概述</h2><h3 id="计算机的发展"><a href="#计算机的发展" class="headerlink" title="计算机的发展"></a>计算机的发展</h3><p>图灵在1936年发表的论文中，提出了一种计算机抽象模型，利用这种计算机可用一些简单的机械动作实现推理。这种计算机也称“图灵机”。</p><p><img src="https://sway.office.com/s/5vobcMGtIcOHOPPG/images/sv1IKAF_BScQ3G" alt="jizu-1"></p><p>第一台电子计算机，ENIAC（通用可编程序），诞生于1946年。</p><p>美国数学家冯.诺依曼，提出二进制表达方式和存储程序控制计算机构想。提出并描述一个计算机模型EDVAC（Electronic Discrete Variable Automatic Computer，1944～1952）。</p><ul><li>1MHz，二进制，字长32位，串行</li><li>存储程序（Stored Program）</li></ul><p><img src="https://bu.dusays.com/2023/05/03/64521521dd8c7.png" alt="jizu-2.png"></p><p>计算机的发展趋势：</p><ul><li>巨型化：国防军工、航天、气象、地震等大型数据处理</li><li>微型化：个人用户和中小型企业日常事务处理</li><li>网络化：计算机通信、资源共享</li><li>智能化：模拟人类学习和探索过程,实现类似人类思维处理</li><li>多媒体：在视觉、听觉等方面的表现力</li><li>虚拟现实：模拟现实环境，如飞机驾驶训练，数字虚拟展览馆</li></ul><p>计算机的应用：</p><ul><li>科学计算：密码破译，天气预报，地质勘探，卫星轨道计算</li><li>数据处理：数据库管理，企业信息管理，统计汇总、办公自动化</li><li>过程控制：机器人以及各种自动化装备，温度调节，阀门控制</li><li>辅助设计/分析/工程/制造/教学：机械CAD，建筑CAD，CAE，CAM，CAI</li><li>网络化应用：远程教育、网络交易、远程医疗等</li><li>智能模拟：人工智能、专家系统、自学习</li></ul><h3 id="计算机系统的基本组成"><a href="#计算机系统的基本组成" class="headerlink" title="计算机系统的基本组成"></a>计算机系统的基本组成</h3><p>（一）计算机的硬件组成</p><ul><li>运算器：完成算术运算和逻辑运算。运算的中间结果可暂存在运算器内。</li><li>存储器：存放数据和程序，由存储单元组成。分为内存、外存和缓存。</li><li>控制器：控制、指挥程序和数据的输入、运行以及处理运算结果。</li><li>I/O设备：转换人们熟悉的信息形式和机器能识别的信息形式。</li></ul><p>（二）几种典型的计算机组成结构<br>（1）典型的冯·诺依曼计算机结构：</p><p><img src="https://bu.dusays.com/2023/05/03/64521b154a354.png" alt="jizu-3.png"></p><p>Von Neumann Machine Architecture :</p><ul><li>由五大功能部件组成</li><li>指令和数据存储方式<ul><li><strong>“以同等地位”</strong> 存放于存储器内，分别<strong>按地址</strong>访问</li></ul></li><li>指令和数据表示形式<ul><li>均用二进制码表示</li></ul></li><li>指令构成<ul><li>由操作码和地址码构成</li></ul></li><li>程序控制<ul><li><strong>存储程序式</strong>计算机：指令按顺序存放，<strong>顺序</strong>执行</li></ul></li><li>数据传输<ul><li>机器以运算器为中心</li></ul></li></ul><p>（2）以存储器为中心的计算机组成结构</p><p><img src="https://sway.office.com/s/sNRIl4Lt5i9buLBy/images/Ttczhoo6_kLcm5" alt="jizu-4"></p><p>（3）现代计算机的组织结构特征</p><ul><li>以存储器为中心<ul><li>哈佛结构（数据与指令相分离）</li><li>层次化存储系统</li></ul></li><li>互连总线</li></ul><p><img src="https://bu.dusays.com/2023/05/03/64521f4fc67dd.png" alt="jizu-5.png"></p><p>中央处理单元（CPU）</p><ul><li><strong>CPU = 算术逻辑单元 + 控制单元＋寄存器</strong></li><li><strong>CPU = 运算器 + 控制器</strong></li></ul><p>主机</p><ul><li><strong>主机 = CPU + 主存储器</strong></li></ul><p>外部设备（广义的I/O设备）</p><ul><li>除去主机以外的硬件装置（如输入设备、输出设备、辅助存储器等）</li></ul><p>Generic Block Diagram of a Typical CPU :</p><p><img src="https://bu.dusays.com/2023/05/03/645221b9b7bf5.png" alt="jizu-6.png"></p><p>存储器的组织:</p><ul><li>存储单元按<strong>字节</strong>或<strong>字</strong>寻址</li><li>程序和数据顺序存放<ul><li>数据段</li><li>代码段</li></ul></li><li>读写操作以数据总线宽度为单位（两个寄存器MDR，MAR）</li></ul><p>（学校老师的PPT写的相当之垃圾，等会换一个网上的教程，笔记作废）</p><h3 id="计算机系统的层次结构"><a href="#计算机系统的层次结构" class="headerlink" title="计算机系统的层次结构"></a>计算机系统的层次结构</h3><h3 id="计算机系统的性能指标与评价标准"><a href="#计算机系统的性能指标与评价标准" class="headerlink" title="计算机系统的性能指标与评价标准"></a>计算机系统的性能指标与评价标准</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;（学校老师的PPT写的相当之垃圾，等会换一个网上的教程，以下笔记作废）&lt;/p&gt;
&lt;p&gt;课程学习要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解单处理器计算机系统中各部件的内部&lt;strong&gt;工作原理、组成结构以及相互连接方式&lt;/strong&gt;，具有完整的计算机系统的&lt;strong&gt;整</summary>
      
    
    
    
    <category term="笔记" scheme="https://loveofpeach.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计组" scheme="https://loveofpeach.github.io/tags/%E8%AE%A1%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>蓝色笔记</title>
    <link href="https://loveofpeach.github.io/posts/6bc19761.html"/>
    <id>https://loveofpeach.github.io/posts/6bc19761.html</id>
    <published>2023-01-04T13:25:45.000Z</published>
    <updated>2023-01-22T14:46:01.686Z</updated>
    
    <content type="html"><![CDATA[<p>考研的原因：</p><p><img src="https://bu.dusays.com/2023/01/04/63b5789893aa1.png" alt="考研只为慢就业"></p><p>个人笔记，存档。</p><p><img src="https://bu.dusays.com/2023/01/05/63b653bf90fe1.jpg" alt="考研蓝色笔记-01.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f41fdac.jpg" alt="考研蓝色笔记-02.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f4c52fd.jpg" alt="考研蓝色笔记-03.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f5a5e7d.jpg" alt="考研蓝色笔记-04.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f59d4ef.jpg" alt="考研蓝色笔记-05.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f604ef0.jpg" alt="考研蓝色笔记-06.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f5ca516.jpg" alt="考研蓝色笔记-07.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f5bb43f.jpg" alt="考研蓝色笔记-08.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f549d93.jpg" alt="考研蓝色笔记-09.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b653f610a7d.jpg" alt="考研蓝色笔记-10.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654441c8b6.jpg" alt="考研蓝色笔记-11.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6544426434.jpg" alt="考研蓝色笔记-12.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b65446b0048.jpg" alt="考研蓝色笔记-13.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b65447d50f3.jpg" alt="考研蓝色笔记-14.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b65448c282d.jpg" alt="考研蓝色笔记-15.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6544a50fb2.jpg" alt="考研蓝色笔记-16.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6544a50fb2.jpg" alt="考研蓝色笔记-17.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b65449a3b41.jpg" alt="考研蓝色笔记-18.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b65449ad4b4.jpg" alt="考研蓝色笔记-19.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6544a5e7ee.jpg" alt="考研蓝色笔记-20.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6549f445d5.jpg" alt="考研蓝色笔记-21.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6549d6a227.jpg" alt="考研蓝色笔记-22.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6549f6c73b.jpg" alt="考研蓝色笔记-23.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654a02f503.jpg" alt="考研蓝色笔记-24.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654a0b3468.jpg" alt="考研蓝色笔记-25.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654a027760.jpg" alt="考研蓝色笔记-26.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654a0e1d2d.jpg" alt="考研蓝色笔记-27.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b6549e9b427.jpg" alt="考研蓝色笔记-28.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654a1e322e.jpg" alt="考研蓝色笔记-29.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654a19b2d5.jpg" alt="考研蓝色笔记-30.jpg"></p><p><img src="https://bu.dusays.com/2023/01/05/63b654ee3f9b8.jpg" alt="考研蓝色笔记-31.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;考研的原因：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2023/01/04/63b5789893aa1.png&quot; alt=&quot;考研只为慢就业&quot;&gt;&lt;/p&gt;
&lt;p&gt;个人笔记，存档。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bu.du</summary>
      
    
    
    
    <category term="笔记" scheme="https://loveofpeach.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学" scheme="https://loveofpeach.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="慢就业" scheme="https://loveofpeach.github.io/tags/%E6%85%A2%E5%B0%B1%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>数学错题集</title>
    <link href="https://loveofpeach.github.io/posts/a731e7f0.html"/>
    <id>https://loveofpeach.github.io/posts/a731e7f0.html</id>
    <published>2023-01-04T12:51:31.000Z</published>
    <updated>2023-01-22T14:45:05.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多元函数微分学"><a href="#多元函数微分学" class="headerlink" title="多元函数微分学"></a>多元函数微分学</h2><p><img src="https://bu.dusays.com/2023/01/04/63b5799722887.jpg" alt="数学错题集-01.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57995ec2b5.jpg" alt="数学错题集-02.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57990c09f3.jpg" alt="数学错题集-03.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b5799429574.jpg" alt="数学错题集-04.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57998a1afc.jpg" alt="数学错题集-05.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b5799984587.jpg" alt="数学错题集-06.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b579925e8f3.jpg" alt="数学错题集-07.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57993ecde2.jpg" alt="数学错题集-08.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b5799341f85.jpg" alt="数学错题集-09.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b5799914d57.jpg" alt="数学错题集-10.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aa92d944.jpg" alt="数学错题集-11.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aa968384.jpg" alt="数学错题集-12.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aaab8d66.jpg" alt="数学错题集-13.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aaa3c26f.jpg" alt="数学错题集-14.jpg"></p><h2 id="极值"><a href="#极值" class="headerlink" title="极值"></a>极值</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57aa778d11.jpg" alt="数学错题集-15.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aa9d91a8.jpg" alt="数学错题集-16.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aa897966.jpg" alt="数学错题集-17.jpg"></p><h2 id="积分与极限"><a href="#积分与极限" class="headerlink" title="积分与极限"></a>积分与极限</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57aa22c1de.jpg" alt="数学错题集-18.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aa8b882f.jpg" alt="数学错题集-19.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57aa7ab852.jpg" alt="数学错题集-20.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b190d605.jpg" alt="数学错题集-21.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b1796e5e.jpg" alt="数学错题集-22.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b183ddde.jpg" alt="数学错题集-23.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b21d0358.jpg" alt="数学错题集-24.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b20698dd.jpg" alt="数学错题集-25.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b2116299.jpg" alt="数学错题集-26.jpg"></p><h2 id="一元函数"><a href="#一元函数" class="headerlink" title="一元函数"></a>一元函数</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57b1eb564b.jpg" alt="数学错题集-27.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b200004e.jpg" alt="数学错题集-28.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b1f6d84c.jpg" alt="数学错题集-29.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b1f76647.jpg" alt="数学错题集-30.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b9059203.jpg" alt="数学错题集-31.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b8fde903.jpg" alt="数学错题集-32.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b94a0f86.jpg" alt="数学错题集-33.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b955dabf.jpg" alt="数学错题集-34.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b94151f2.jpg" alt="数学错题集-35.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b98c1752.jpg" alt="数学错题集-36.jpg"></p><h2 id="微分方程"><a href="#微分方程" class="headerlink" title="微分方程"></a>微分方程</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57b983feaa.jpg" alt="数学错题集-37.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b97eea10.jpg" alt="数学错题集-38.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57b98c7d1a.jpg" alt="数学错题集-39.jpg"></p><h2 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57b98dd08b.jpg" alt="数学错题集-40.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c018d404.jpg" alt="数学错题集-41.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57bff85b9e.jpg" alt="数学错题集-42.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c000837f.jpg" alt="数学错题集-43.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c04ec643.jpg" alt="数学错题集-44.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c04f36f2.jpg" alt="数学错题集-45.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c04424fd.jpg" alt="数学错题集-46.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c046d6d8.jpg" alt="数学错题集-47.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c046a2bb.jpg" alt="数学错题集-48.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c04e666f.jpg" alt="数学错题集-49.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c04e951a.jpg" alt="数学错题集-50.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c6da5b3a.jpg" alt="数学错题集-51.jpg"></p><h2 id="2022数二"><a href="#2022数二" class="headerlink" title="2022数二"></a>2022数二</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57c70289c4.jpg" alt="数学错题集-52.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c6ec3006.jpg" alt="数学错题集-53.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c71bbdf8.jpg" alt="数学错题集-54.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c7261dd7.jpg" alt="数学错题集-55.jpg"></p><h2 id="2020数二"><a href="#2020数二" class="headerlink" title="2020数二"></a>2020数二</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57c720d789.jpg" alt="数学错题集-56.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c7259a69.jpg" alt="数学错题集-57.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c721e84f.jpg" alt="数学错题集-58.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c71f19b9.jpg" alt="数学错题集-59.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57c6feba9d.jpg" alt="数学错题集-60.jpg"></p><h2 id="2019数二"><a href="#2019数二" class="headerlink" title="2019数二"></a>2019数二</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57cef090a9.jpg" alt="数学错题集-61.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cef07015.jpg" alt="数学错题集-62.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cefe52a9.jpg" alt="数学错题集-63.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cf0d4784.jpg" alt="数学错题集-64.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cf154d21.jpg" alt="数学错题集-65.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cf07c19b.jpg" alt="数学错题集-66.jpg"></p><h2 id="2018数二"><a href="#2018数二" class="headerlink" title="2018数二"></a>2018数二</h2><p><img src="https://bu.dusays.com/2023/01/04/63b57cf18e05d.jpg" alt="数学错题集-67.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cf13d8e0.jpg" alt="数学错题集-68.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cf176324.jpg" alt="数学错题集-69.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57cf1879eb.jpg" alt="数学错题集-70.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57d76908cf.jpg" alt="数学错题集-71.jpg"></p><p><img src="https://bu.dusays.com/2023/01/04/63b57d76a5afe.jpg" alt="数学错题集-72.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;多元函数微分学&quot;&gt;&lt;a href=&quot;#多元函数微分学&quot; class=&quot;headerlink&quot; title=&quot;多元函数微分学&quot;&gt;&lt;/a&gt;多元函数微分学&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://bu.dusays.com/2023/01/04/63b5799</summary>
      
    
    
    
    <category term="做题" scheme="https://loveofpeach.github.io/categories/%E5%81%9A%E9%A2%98/"/>
    
    
    <category term="数学" scheme="https://loveofpeach.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="慢就业" scheme="https://loveofpeach.github.io/tags/%E6%85%A2%E5%B0%B1%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>信与回信</title>
    <link href="https://loveofpeach.github.io/posts/d1e8cada.html"/>
    <id>https://loveofpeach.github.io/posts/d1e8cada.html</id>
    <published>2022-12-28T04:33:57.000Z</published>
    <updated>2023-01-01T14:31:28.175Z</updated>
    
    <content type="html"><![CDATA[<p>可以看作是《春宵苦短，少女前进吧》的后续。</p><blockquote><p>原文：<a href="https://movie.douban.com/review/8521843/">https://movie.douban.com/review/8521843/</a><br>作者：豆瓣用户 一切顺利！</p></blockquote><p><img src="https://bu.dusays.com/2023/01/01/63b198d0d1c47.png" alt="20-3v2.png" title="电影中的进进堂"></p><h2 id="【剧场特典】给“乙女”的信（渣翻）"><a href="#【剧场特典】给“乙女”的信（渣翻）" class="headerlink" title="【剧场特典】给“乙女”的信（渣翻）"></a>【剧场特典】给“乙女”的信（渣翻）</h2><p>拜启。</p><p>问候并祝安康。</p><p>此前能够同往“进进堂”及旧书店，我感到非常欣喜。</p><p>当时怀着邀请你就不能有不周到的想法，心情也变得紧张。但在和你交谈这一年的回忆时，渐渐变得平稳，就像是肚子上顶着刚出锅的肉包子舒服躺下般的惬意。上次有这么美好的感觉，大概是婴儿时初次洗澡的事吧。再次表达谢意。</p><p>不过最近也实在是寒冷呀。为了和无情的寒冷对抗，现在的我正钻在四叠半宿舍的被窝里写下这封信。请原谅这随意的行为。在这连叹气都能冻结住的四叠半内，一切脑力活动不得不在完成在从来都是摊开的被窝上，我强撑着这种严酷生活。</p><p>话说回来，写这封信的理由有两个。</p><p>第一个理由，我仅仅是想要试着给你写信。如果你觉得困扰，今后罢手。</p><p>还有一个是，之前见面的时候忘记约定下次的碰面。实在是大意了。如果你没有觉得“真是受够了”的话，可以再次一起做些什么吗？</p><p>关于应该一起去哪里，请允许我说明一个提案。</p><p>要讲述这个像天启一般进入我脑内的提案，就得从前些日子我和樋口一起去北白川天神宫说起。</p><p>那天早上开始下起雪，东边的群山像撒了层砂糖似的变得洁白。这种天气当然再适合不过读书。我便在宿舍里大口吃着肉馒头熟读玩味康德的《纯粹理性批判》。正用纯粹的心情批判自己理性的时候，樋口穿着落满雪花的夹克突然来了。</p><p>“呀，你。我能拜托件事儿吗？”</p><p>从樋口氏处得知，洛中有个“狸猫文学赏”，似乎会挑选每年写就的狸猫小说中最优一作来进行表彰。“那是什么呀”我还是无法想象。而且再继续听下去，樋口根本连小说都没写过，却由于“常年过着狸猫般生活之事的功绩”而得得到了文学赏的荣誉奖。真是充满狸猫气息的可疑，再加上授奖式还是在东山山麓北白川天神宫内举行这点，愈发令人怀疑。这种《漫画日本昔话》一样的文学赏真的存在吗？毕竟樋口一直就是故弄玄虚的好手。</p><p>“但是说是狸猫，樋口更该是天狗吧。”</p><p>“天狗啦狸猫啦都是同样的呦。不管得到的是马粪还是柿子的茎叶，我是能得到好主义。听说有奖品可以拿，来帮忙搬运吧。”就这样，我们在雪天出门了。</p><p>走在通向北白川天神宫志贺越道上，我就“男女间合适的幽会”一事向樋口请教。不过是想向可以信任的前辈问些一般论的东西罢了。于是樋口给我讲述了“与画中女性梦中相会之术”和“与看不见的恋人互通书信之术”之类的事情。但这些事情对现在的我来说完全没用，只觉得一头雾水。</p><p>听我“想听些更加平凡的方法”之后，樋口唰啦唰啦摸着胡子发出“唔—”的声音。</p><p>“……平凡的东西一点也不了解。”</p><p>向樋口寻求一般论的我真是笨蛋。</p><p>“一牵扯到实际利益就没辙了呀。”</p><p>“喂喂，你的奉承话就免了吧。”</p><p>终于到达北白川天神宫的我们，走过架设在白川上的小桥，穿过阴暗的树林登上了石制台阶。但是周围完全没有举办授奖式的迹象。当我觉得肯定是被谁戏弄之时，樋口突然小声说了句“是柑橘呀”。</p><p>在拜殿后方，我终于发现了满满一纸箱的柑橘。上边还用修行僧人用的法螺压着一张草纸，写着拙劣的“之后的事就交给你了”。</p><p>“你看，很豪气吧！”</p><p>“……这真的是奖品吗？明明是授奖式却谁也不在。简直像是被狸猫骗了。”</p><p>“所以说是自助的形式吧。”</p><p>尽管仍旧半信半疑，我们还是遵从写着“之后的事就交给你了”的草纸，严肃地完成授奖式。然后带着可疑的蜜柑开始返回。搬运大量蜜柑显而易见是我的任务，樋口只负责走在前边随意地吹着法螺。在降雪的东山里，回响出说不上是舒畅还是悲伤的声音。</p><p>说起在“进进堂”共饮咖啡。这旁人看来小小的一步对我们来讲确实是巨大的一步。已经往新世界踏出第一步的当下，犹豫是不会带来进步的。我们应当趁此鼓起勇气向前迈步。但是呀，下一步应该怎么做呢？即使用被《纯粹理性批判》锤炼的理性，我也找不到合适的方案。这是什么缘故呢？</p><p>在白川桥上夸张地跌倒，大概就是因为深陷这些想法而没注意脚下吧。从整个跌落的纸箱里蜜柑咕噜咕噜地滚落出来。滚落出的蜜柑中有一个喊着“老子就从这启程了”纵身跃下川流。只顾着慌慌张张收集其他蜜柑，对落下白川的那个家伙只能放弃。樋口则透过栏杆一边眺望着河面，一边吹起法螺，发出了有些悲伤的响声。</p><p>“嘛别失落呀，你，” 樋口说道，“说不定在不知何处它会被美丽的少女捡到呢。”</p><p>无论如何这种事也是不可能的吧，可能是自己使它掉落的罪恶感使然，我不由得为那颗小小圆圆蜜柑的幸福祈祷起来。小小的圆圆的，又使我联想起你来，我变得更加同情那颗蜜柑。</p><p>正要再次出发的时候，小巧洁白又软乎乎的东西从灰色天空降下。开始还以为是雪花，但是它们粘在肩膀上并没有融化。仔细看发现，那是可爱的羽毛。这东西是从哪里飞来的呢。用手指拈起向着远处，太阳的光线穿透云彩的缝隙染得羽毛银光闪闪。不知为何感到扔掉的话太过可惜，就在我把羽毛收进口袋的瞬间，脑内冷不丁地浮现出“银幕”这个词语。</p><p>银幕。银幕。银幕的冒险！</p><p>银幕的冒险，正是指明去往电影院！这不就是我所探求的下一步吗！昏暗中紧紧依靠着落座，在闪耀着光芒的另一侧进入同样的梦境。从咖啡厅到电影院——这才是正确的发展方向呀！善男信女该行之路。</p><p>我把这件事说出来。</p><p>“这样啊”，樋口如是说到。</p><p>“原来如此，这就是所谓平凡呀。但是平凡才是王道，王道才是王道！世人就是这般催人泪下苦苦用心，在难以分辨的黑暗中紧紧握住意中人的手的吧。”</p><p>之后我们抱着狸猫文学赏奖品的蜜柑箱一路返回。</p><p>那么，因为给你写信浮现出太多开心的事，我不知不觉就写了许多没用的东西。再次献上歉意。总之这封信不过就是“不一起去电影院吗”这种朴素的邀请。平凡才是王道，王道才是王道。以防万一，容我做个补充，我保证不会在黑暗中，不经允许就做握住你的手之类的羞耻事情。如果能有机会共同享受银幕的冒险，荣幸之极。</p><p>静候回音，</p><p>$\qquad$ $\qquad$ $\qquad$ 恐惶谨言。</p><p><img src="https://s2.loli.net/2022/12/28/MtZd3B4heqyo7sn.webp" alt="20-1.webp" title="现实中的进进堂"></p><hr><blockquote><p>原文：<a href="https://www.douban.com/note/643884651">https://www.douban.com/note/643884651</a><br>作者：豆瓣用户 一切顺利！</p></blockquote><h2 id="【剧场特典2】乙女给前辈的回信（自翻）"><a href="#【剧场特典2】乙女给前辈的回信（自翻）" class="headerlink" title="【剧场特典2】乙女给前辈的回信（自翻）"></a>【剧场特典2】乙女给前辈的回信（自翻）</h2><p>拜启。</p><p>你好，感谢之前的郑重来信。</p><p>托你的福，我现在就像才刚擦亮的苹果一样精神。</p><p>拜见了前辈的来信之后，有些无论如何都想传达的记忆咕噜咕噜地涌上心来，所以我就默念着“迸发吧，我的文才！”写下了回信。</p><p>前几天，应羽贯的邀请，我们一起出门要去银阁寺散步。早上开始飘起雪花，从今川通路往上看，能看到大文字也着了美丽的银装。但是一点也不冷。因为我本来就是不怕冷的类型，再加上还穿了羽贯给的软蓬蓬的羽绒服。</p><p>考虑到要去银阁寺，我们在门前町吃了热乎乎的鸡蛋馄饨。吃完之后感觉自己变成了刚出烤箱的面包，热气腾腾的。落在脸颊的雪转瞬就融化了。</p><p>“只是站在旁边就能感受到你传来的热乎空气”，羽贯惊讶地说到，“你为什么那么热乎呢？真想每家放一个取暖呢。”</p><p>非常荣幸，但是到了夏天一定就变得碍事了吧。</p><p>看着周围卖的伴手礼商品穿过门前町的时候，我们和一位不可思议的绅士变成了并行的状态。是位穿着西装套着高级外套、胡子漂亮翘起的老人。并不知道对方的名字，但是感觉和萨尔瓦多•达利非常像，我就在心里决定以“萨尔瓦多老爷爷”来称呼他了。萨尔瓦多老爷爷因为寒冷而瑟瑟发抖，大概他是被我身上多余的热气腾腾吸引过来的吧。可能我这种人真是随身暖炉（小型）一般的存在也说不定。</p><p>“到坡下为止，能允许我同行吗，小姑娘。”（“小姑娘”原文为法语源外来词，后文所有“小姑娘”同此。）</p><p>萨尔瓦多老爷爷行了一礼。</p><p>羽贯回了句“是，先生。”（“是，先生。”原文为法语源外来词。）</p><p>为什么是法语呢？我不明白。难道达利不是西班牙人吗。</p><p>边走下充满观光客的门前町，边和萨尔瓦多老爷爷交谈的内容是：适合刚结识的男女出门的合适的地方。和前辈一样，我也想向可以信赖的过来人寻求智慧的答案。</p><p>“不必困扰。请去电影院吧。”萨尔瓦多老爷爷晃动着手杖如是说。</p><p>“银幕的冒险才是，能为刚结识的男女互相间加深理解的可称为心的旅途的东西。在幕布另一侧展现开的是，从这个世界的偏颇现实中解放出来的梦之世界。电影院的黑暗是人工的甘美的夜晚。独自个体的男女肩靠肩，听着对方的呼吸声，清澈悦耳。时而欢笑时而哭泣，两人感受着相同的梦。这是多么雅致诱人的恋情经营法呀。如何呢，小姑娘？并不是只靠视线相交就可以明白对方的事情。只是费力互相瞪眼的话，前路只会变成争斗。如果不是共同度过短短的夜晚，如果不是共同观看美梦，那可是看不到对方的灵魂呦。”</p><p>从萨尔瓦多老爷爷的大演讲中，我受到了深深的启发。想着必须邀请前辈去感受银幕的冒险，我一下子握紧了热乎乎的小小拳头。</p><p>“受教了。”</p><p>但是羽贯似乎有所不满。“电影什么的不行啦。你想呀，每个人想看的电影都不尽相同。要是勉强两人一起去看电影的话……”</p><p>“有和樋口前辈一起去看过吗？”</p><p>“也不是没去过。我是想看时髦的外国影片啦。但樋口不是只看些低级的东西嘛。看合我口味的电影，樋口就会打瞌睡，看合樋口口味的，我就会打瞌睡。两个人都能看到最后的电影简直一部都没有。”</p><p>“这是说了些什么杀气腾腾的话呀，小姑娘！”</p><p>看着没什么精神的萨尔瓦多老爷爷，不知为何我有点同情。</p><p>不知不觉我们走过门前町，都到了银阁寺的路口。在正好要踏上白川上方小桥的时候，萨尔瓦多老爷爷停住了。从栏杆上注视着河面嘟囔道：“是从哪里流过来的呢？”</p><p>我也驻足去看，有一只颜色鲜艳的蜜柑，在河底非常活跃叽里咕噜地翻来转去。看起来，它简直像是在拼尽全力向我冲过来。</p><p>萨尔瓦多老爷爷突然一下子越过栏杆，羽贯和我都吃惊地屏住了呼吸。真是让人无法联想到是老人的敏捷身手。老爷爷像羽毛似的站在河里，捡起流过去的蜜柑，又轻轻地爬了上来。</p><p>听羽贯说完“吓死了!”，老爷爷边拿手帕擦拭湿漉漉的蜜柑边用得意的语气说：“以前，我可是曾作为杂技员出入过摄影棚呢。”</p><p>老爷爷把那个蜜柑放在了我的手上。</p><p>“就把这个蜜柑给苹果一样的小姑娘吧。”</p><p>“万分感谢。”</p><p>“没问题吧，小姑娘。请去感受银幕的冒险。如果能够共同度过短短的夜晚，共同观看美梦的话——”</p><p>萨尔瓦多老爷爷很熟练地眨眼使了个眼色，抚摸下胡子摇着手杖朝南边的方向走去了。我连向老爷爷道谢，感谢他提供了宝贵意见的机会都没有。如风来，似风去。我想，这简直就像是和电影之神擦肩而过一样。我保持抱着蜜柑的姿势，目送老爷爷的背影离去。</p><p>“真是奇怪的老爷爷呀。”羽贯如是说。</p><p>“是非常出色的人。”</p><p>“你打算拿着那个蜜柑回去吗？没事吧，那可是河里流过来的东西呀。”</p><p>“毕竟也是难得的馈赠之物。”</p><p>那个蜜柑小小圆圆的，滑溜溜地大放光芒。</p><p>从白川上流的方向处传来了“咘—”的奇怪声音。那是修行僧的法螺吧，羽贯这么说到。这么说的话，也真是挺宝贵的声响。</p><p>就这么要踏上归途的时候，羽贯“啊”的一声叫起来，抓住了我羽绒服的下摆。</p><p>“这种地方居然开了个洞？！”</p><p>羽贯给我的软蓬蓬桃色羽绒服上居然开了一个小洞。从中一直有羽毛漏出。这是怎么回事呀。之前还因为身边有那么多软乎乎的白色东西，在想“这雪还真是一时停不下来呀”。</p><p>结果竟然是从羽绒服里漏出的羽毛—真是太羞耻了。真想钻进衣服上的小洞里。话虽如此，这么下去也不行，我就用从萨尔瓦多老爷爷那里得到的蜜柑挡住了破洞，边保护着剩余的羽毛边急匆匆地往回赶。</p><p>到此为止就是想传达给前辈的事情。</p><p>已经明白了我在意的东西，前辈也不需要担心流入白川的蜜柑的去向啦。因为那个蜜柑由我好好地带回家了。还有在北白川天神落在前辈肩头的羽毛，也一定是被我在银阁寺门前掉落又乘风到你身边的吧。</p><p>真是奇遇呢！</p><p>然后，关于接下来要迈出的一步，前辈进行了那么认真的研究，我非常开心。当然我也赞成前辈的提议。</p><p>来吧，向着人工的夜晚中映出的梦之世界。春宵苦短，少女前进吧！</p><p>自心底期待和你的见面。         </p><p>$\qquad$ $\qquad$ $\qquad$ 敬具。</p><p><img src="https://s2.loli.net/2022/12/28/QyLcBd5EPrpICs3.webp" alt="20-2.webp" title="银阁寺"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可以看作是《春宵苦短，少女前进吧》的后续。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://movie.douban.com/review/8521843/&quot;&gt;https://movie.douban.com/review/8521843/&lt;</summary>
      
    
    
    
    <category term="转载" scheme="https://loveofpeach.github.io/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="acg" scheme="https://loveofpeach.github.io/tags/acg/"/>
    
  </entry>
  
  <entry>
    <title>影评《春宵苦短，少女前进吧》</title>
    <link href="https://loveofpeach.github.io/posts/dc1dbc8f.html"/>
    <id>https://loveofpeach.github.io/posts/dc1dbc8f.html</id>
    <published>2022-12-27T04:52:14.000Z</published>
    <updated>2023-03-15T08:11:19.028Z</updated>
    
    <content type="html"><![CDATA[<p>姑且放个免费的观看链接：<a href="https://www.yhdmp.live/showp/17348.html">https://www.yhdmp.live/showp/17348.html</a> ，如果你的浏览器没有广告屏蔽插件，可能会看到形形<strong>色色</strong>的广告，但是不影响，没有恶意遮挡的广告，并且全屏观看时没有广告。</p><p>不建议在B站观看，不仅要会员，而且可能是审核阉割版的。</p><p>似乎是官方网站：<a href="https://kurokaminootome.com/">https://kurokaminootome.com/</a></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>我的记忆力很差，因而电影、小说之类的东西，只在脑海里留下一个模糊的印象。譬如小时候读曹文轩的书，漫长的时间过去，只觉得像薄荷糖一般。这部改编自森见登美彦小说的电影，看完也只觉得很好，很清爽，但要将这模糊的感觉写下，做出一个影评来，对我来说实在勉强。</p><p>在网上参考了网评、论文等，也发现了一些问题。</p><p>我大致能理解为什么有一些人会在充分代入女主之后，得出各种奇怪的结论。不过以我之愚见，观看一部动画电影时，首要义务是抛弃自己的经验，进入银幕另一侧的世界中去。『在幕布另一侧展现开的是，从这个世界的偏颇现实中解放出来的梦之世界』，这梦之世界中的男女都是自由的，他们的一切行动都可以看作是象征、隐喻、夸张、想象，一切的象征、隐喻、夸张、想象，也都可以是他们的实际行动。因此不必试图在电影中寻求现实的影子，也毋须将现实中的人际关系与行动逻辑与电影对比。</p><blockquote><p>《日本动画“无影作画”技法的美学研究（张长）》：<br>在爱森斯坦看来，动画中的形象就具有这种特性。它们作为一种被画出来的形式，拥有特定的外观，但却如原生质一般活动，总是处在一种尚不具备稳定形式的状态中，<strong>简言之，就是一种可以成为任何事物的潜在能力。这是一种兼具了破坏性与创造性的暴力，它让人们相信，动画形象可以被用来冲破各种限制，从而自由地去进行表达。</strong>……不过，随着迪士尼后来的现实主义转向，动画原生的自由也逐渐被抛弃和抑制了。正像韦尔斯所说，“随着迪士尼的每一次技术进步，他们就越来越远离他们在早期的《糊涂交响曲》中所表现出的原生质的灵活性，强行将动画形式裹挟到新现实主义的实践当中。”从此以后，“动画电影中图形和叙事的无政府状态般的意识形态自由，也让位给了现实情境中的道德评比。” 由此可见，放大和张扬动画“原生质性”的做法就意味着一条与现实主义截然相反的道路，它能够将人们从物质的、现实的、既定的法则和限制中解放出来，以自由的、精神的形态去活动、去表达。</p></blockquote><p>我相信，若是能真正放下姿态，放下电影指导现实、从中获得启迪教益的急切心态，沉浸到银幕另一侧的世界中，一定能更好地领悟《春宵》（简称，以下同）本身的美和幽默。</p><div class="tip error"><p>以下包含剧透</p></div><h2 id="整体印象"><a href="#整体印象" class="headerlink" title="整体印象"></a>整体印象</h2><p>《春宵》是一部非常“日本”的动画，包含了很多鲜明的文化元素。</p><blockquote><p><em><a href="https://www.diva-portal.org/smash/record.jsf?pid=diva2%3A1717186">BEYOND REALIA –CULTURAL ASSOCIATIONS IN THE ENGLISH TRANSLATION OF THE NIGHT IS SHORT, WALK ON GIRL BY MORIMI TOMIHIKO</a> :</em><br>By carefully selecting these cultural elements, the author constructs a literary style that is reminiscent of modern Japanese literature from Taisho (1912-1926) and early Showa (1926-1989). His style also effectively creates a universe that exudes traditional Japanese aesthetic associations expressed by both cultural objects (e.g., food, art, music, decorative objects) and legendary beings (e.g., gods, monsters).</p></blockquote><p><img src="https://bu.dusays.com/2023/01/01/63b1944f75a28.png" alt="拼酒的场景布置"></p><p><img src="https://bu.dusays.com/2023/01/01/63b1944d81ff1.png" alt="五山送火"></p><p>这些颇具历史文化气息的元素，在银幕和观众间砌起高墙，并与现实划清界限：它是现代社会的避难所、田园诗式的保留地。没有高楼大厦，没有通勤的人流——鸭川中站着苹果一般的女孩。</p><p>这匿藏于银幕中的保留地里，一切事物都是『以自由的、精神的形态去活动』，而这正是汤浅政明所擅长的：</p><p><img src="https://bu.dusays.com/2023/01/02/63b1d22f55bcf.png" alt="愿作深海鱼，四周便填满海水"></p><p><img src="https://bu.dusays.com/2023/01/02/63b1d22f23a23.png" alt="被抓住的书像鱼一样挣扎（需要在电影中观看）"></p><p><img src="https://bu.dusays.com/2023/01/02/63b1d22da884d.png" alt="杯中液体表现出果冻般的性质"></p><p>与之相应的是视觉上的艳丽，它一方面强调了作品的非现实性和自由的基调，另一方面色彩的对比也暗示了人物的心理状态：</p><p><img src="https://bu.dusays.com/2023/01/02/63b24f644ce0c.png" alt="酒吧里的酒水"></p><p><img src="https://bu.dusays.com/2023/01/05/63b695a7d1a67.png" alt="色彩对比"></p><p><img src="https://bu.dusays.com/2023/01/02/63b24f674624e.png" alt="羽贯骗酒"></p><p>附《春宵》中《四叠半》的彩蛋：</p><p><img src="https://s2.loli.net/2023/01/02/BHA7xTcblf2tgoI.jpg" alt="《四叠半时光机布鲁斯》，羽贯（右）"></p><p><img src="https://bu.dusays.com/2023/01/02/63b255260828d.png" alt="明石的饼熊玩偶"></p><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p><img src="https://bu.dusays.com/2023/01/05/63b69667d937a.png" alt="东堂的初次登场"></p><p>东堂是个妻离女散的中年大叔，平日爱好收集色图：（虽然不是很懂这些好像随时都能发出“哟噫——”的色图色在哪了）</p><p><img src="https://s2.loli.net/2023/01/05/LDmNVQcRXu3gsaP.png" alt="将要失去春宫画时的发言" title="色胚发言"></p><p><img src="https://bu.dusays.com/2023/02/08/63e375a2ed34b.png" alt="动作细节"></p><h2 id="不写了，开摆"><a href="#不写了，开摆" class="headerlink" title="不写了，开摆"></a>不写了，开摆</h2><p>已经有写的更好的了，我想说的人家全说了，我没想到的人家也说了。总之这是一部蛮好看的电影，嗯。</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><blockquote><p>张长（华东师范大学） 《日本动画“无影作画”技法的美学研究》：</p></blockquote><p>他的很多动画都给人一种没有阴影的感觉，不仅仅是没有深色色块所表示的角色暗部，通常也没有角色投影，就连背景也时常没有阴影。或者说，在他的作品中没有“现实”的阴影，即使偶尔在角色身上出现了阴影，那多半也是内心的阴影、想象的阴影、主观的阴影。在汤浅政明看来，阴影就是自然世界和客观现实的符号，它之所以将阴影排除在他的作品之外，就是因为比起外部的现实世界，他更乐意表现内部的心灵世界。</p><p>……</p><p>汤浅政明在这部影片里有意地以时间而非空间为舞台，让形形色色的人们登台表演，上演丰富而又离奇的人生戏剧。有的人在这里上演的只是人生的一个瞬间，有的人则在这里演完了一生——在相同的能指时间内，不同的角色经历了不同的所指时间。在年轻的女主人公的心里，每一个短促的瞬间体验都是丰沛而又鲜活的，时间因此被拉扯地悠远绵长；而在年迈的长者那里，他的感受力早已被岁月磨损，数载年华也如白驹过隙。这一点在片中也有较为直接地表述——当女主角和一群老人一同抬起手表看时间的时候，老人们的指针走得飞快，而女主角的指针则走得十分缓慢。心理时间是相对的、主观的、可以伸缩变形的。在这部影片里，汤浅政明通过各种生动的意象和巧妙的叙事手法，将自身的影像风格很好地融入到对多层次的心理时间的探索当中。 </p><p>……</p><p>外部的现实世界对应着一系列物理法则，这些法则总是限制着事物自我显现的方式。外部世界中的事物遵循着这些法则，因而角色总是被阴影牢牢跟随着。……<strong>我们可以将阴影看成是现实的注脚，在现实之光的朗照之下，事物就不能自行摆脱阴影。而一旦阴影被藏匿起来，影像表征现实的合法性就遭到了动摇，由此观众便会自然地将影像过渡到非现实的领域当中，也即幻觉与想象的精神领域中。</strong> 换言之，阴影通过缺席的方式把叙述的视点从人物的外部引向了内部。在这个过程中我们可以看到，阴影自始至终都被看成是意指现实的符号，它从一开始就肩负着表意的任务，只不过它所肩负的表意任务是通过缺席的方式来履行的。如果说阴影的在场意味着我们所看到的都是现实形象，那么阴影的缺席就意味着眼前的都是心理形象。在汤浅政明这里，他就是通过刻意隐匿各类阴影的方式，使他的观众对其动画影像所表征的对象“另眼相看”的。</p><p>……</p><p>我们也可以这样理解，汤浅政明动画中的角色之所以没有阴影，就是因为他们都只是从某个人物受限的视角内所能观察到的极为扁平的他人形象，对角色阴影的排除其实就是为了强调个人主观视角的局限性。 </p><blockquote><p>这篇论文建议大家去知网或者其他地方拿，虽然知网臭不可闻，毕竟是正规渠道。大家千万不要去道客巴巴这种看上去就像是乱拿别人东西的无良网站上白嫖作者。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;姑且放个免费的观看链接：&lt;a href=&quot;https://www.yhdmp.live/showp/17348.html&quot;&gt;https://www.yhdmp.live/showp/17348.html&lt;/a&gt; ，如果你的浏览器没有广告屏蔽插件，可能会看到形形&lt;strong</summary>
      
    
    
    
    <category term="ACG" scheme="https://loveofpeach.github.io/categories/ACG/"/>
    
    
    <category term="acg" scheme="https://loveofpeach.github.io/tags/acg/"/>
    
    <category term="汤浅政明" scheme="https://loveofpeach.github.io/tags/%E6%B1%A4%E6%B5%85%E6%94%BF%E6%98%8E/"/>
    
    <category term="电影" scheme="https://loveofpeach.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
</feed>
